ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"MyProj.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  19              		.align	1
  20              		.p2align 2,,3
  21              		.weak	_ZN5daisy8DaisyPodD2Ev
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN5daisy8DaisyPodD2Ev:
  27              	.LVL0:
  28              	.LFB2538:
  29              		.file 1 "../../libDaisy//src/daisy_pod.h"
   1:../../libDaisy//src/daisy_pod.h **** #pragma once
   2:../../libDaisy//src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../../libDaisy//src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../../libDaisy//src/daisy_pod.h **** 
   5:../../libDaisy//src/daisy_pod.h **** #include "daisy_seed.h"
   6:../../libDaisy//src/daisy_pod.h **** 
   7:../../libDaisy//src/daisy_pod.h **** namespace daisy
   8:../../libDaisy//src/daisy_pod.h **** {
   9:../../libDaisy//src/daisy_pod.h **** /**
  10:../../libDaisy//src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libDaisy//src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libDaisy//src/daisy_pod.h ****     @author Stephen Hensley
  13:../../libDaisy//src/daisy_pod.h ****     @date November 2019
  14:../../libDaisy//src/daisy_pod.h ****     @ingroup boards
  15:../../libDaisy//src/daisy_pod.h **** */
  16:../../libDaisy//src/daisy_pod.h **** class DaisyPod
  17:../../libDaisy//src/daisy_pod.h **** {
  18:../../libDaisy//src/daisy_pod.h ****   public:
  19:../../libDaisy//src/daisy_pod.h ****     /** Switches */
  20:../../libDaisy//src/daisy_pod.h ****     enum Sw
  21:../../libDaisy//src/daisy_pod.h ****     {
  22:../../libDaisy//src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../../libDaisy//src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../../libDaisy//src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../../libDaisy//src/daisy_pod.h ****     };
  26:../../libDaisy//src/daisy_pod.h **** 
  27:../../libDaisy//src/daisy_pod.h ****     /** Knobs */
  28:../../libDaisy//src/daisy_pod.h ****     enum Knob
  29:../../libDaisy//src/daisy_pod.h ****     {
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 2


  30:../../libDaisy//src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../../libDaisy//src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../../libDaisy//src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../../libDaisy//src/daisy_pod.h ****     };
  34:../../libDaisy//src/daisy_pod.h **** 
  35:../../libDaisy//src/daisy_pod.h ****     DaisyPod() {}
  36:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
  30              		.loc 1 36 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB273:
  36              	.LBI273:
  37              		.file 2 "../../libDaisy//src/hid/midi.h"
   1:../../libDaisy//src/hid/midi.h **** #pragma once
   2:../../libDaisy//src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libDaisy//src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libDaisy//src/hid/midi.h **** 
   5:../../libDaisy//src/hid/midi.h **** // TODO: make this adjustable
   6:../../libDaisy//src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libDaisy//src/hid/midi.h **** 
   8:../../libDaisy//src/hid/midi.h **** #include <stdint.h>
   9:../../libDaisy//src/hid/midi.h **** #include <stdlib.h>
  10:../../libDaisy//src/hid/midi.h **** #include "per/uart.h"
  11:../../libDaisy//src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libDaisy//src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libDaisy//src/hid/midi.h **** #include "hid/usb_midi.h"
  14:../../libDaisy//src/hid/midi.h **** #include "sys/system.h"
  15:../../libDaisy//src/hid/midi.h **** 
  16:../../libDaisy//src/hid/midi.h **** namespace daisy
  17:../../libDaisy//src/hid/midi.h **** {
  18:../../libDaisy//src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART 
  19:../../libDaisy//src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../../libDaisy//src/hid/midi.h ****  *  @ingroup midi
  21:../../libDaisy//src/hid/midi.h **** */
  22:../../libDaisy//src/hid/midi.h **** class MidiUartTransport
  23:../../libDaisy//src/hid/midi.h **** {
  24:../../libDaisy//src/hid/midi.h ****   public:
  25:../../libDaisy//src/hid/midi.h ****     MidiUartTransport() {}
  26:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
  27:../../libDaisy//src/hid/midi.h **** 
  28:../../libDaisy//src/hid/midi.h ****     struct Config
  29:../../libDaisy//src/hid/midi.h ****     {
  30:../../libDaisy//src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  31:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    rx;
  32:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    tx;
  33:../../libDaisy//src/hid/midi.h **** 
  34:../../libDaisy//src/hid/midi.h ****         Config()
  35:../../libDaisy//src/hid/midi.h ****         {
  36:../../libDaisy//src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  37:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  38:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  39:../../libDaisy//src/hid/midi.h ****         }
  40:../../libDaisy//src/hid/midi.h ****     };
  41:../../libDaisy//src/hid/midi.h **** 
  42:../../libDaisy//src/hid/midi.h ****     inline void Init(Config config)
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 3


  43:../../libDaisy//src/hid/midi.h ****     {
  44:../../libDaisy//src/hid/midi.h ****         UartHandler::Config uart_config;
  45:../../libDaisy//src/hid/midi.h **** 
  46:../../libDaisy//src/hid/midi.h ****         //defaults
  47:../../libDaisy//src/hid/midi.h ****         uart_config.baudrate   = 31250;
  48:../../libDaisy//src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  49:../../libDaisy//src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  50:../../libDaisy//src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  51:../../libDaisy//src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  52:../../libDaisy//src/hid/midi.h **** 
  53:../../libDaisy//src/hid/midi.h ****         //user settings
  54:../../libDaisy//src/hid/midi.h ****         uart_config.periph        = config.periph;
  55:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  56:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  57:../../libDaisy//src/hid/midi.h **** 
  58:../../libDaisy//src/hid/midi.h ****         uart_.Init(uart_config);
  59:../../libDaisy//src/hid/midi.h ****     }
  60:../../libDaisy//src/hid/midi.h **** 
  61:../../libDaisy//src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  62:../../libDaisy//src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  63:../../libDaisy//src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  64:../../libDaisy//src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  65:../../libDaisy//src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  66:../../libDaisy//src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  67:../../libDaisy//src/hid/midi.h **** 
  68:../../libDaisy//src/hid/midi.h ****   private:
  69:../../libDaisy//src/hid/midi.h ****     UartHandler uart_;
  70:../../libDaisy//src/hid/midi.h **** };
  71:../../libDaisy//src/hid/midi.h **** 
  72:../../libDaisy//src/hid/midi.h **** /** 
  73:../../libDaisy//src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  74:../../libDaisy//src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  75:../../libDaisy//src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  76:../../libDaisy//src/hid/midi.h ****     @author shensley
  77:../../libDaisy//src/hid/midi.h ****     @date March 2020
  78:../../libDaisy//src/hid/midi.h ****     @ingroup midi
  79:../../libDaisy//src/hid/midi.h **** */
  80:../../libDaisy//src/hid/midi.h **** template <typename Transport>
  81:../../libDaisy//src/hid/midi.h **** class MidiHandler
  82:../../libDaisy//src/hid/midi.h **** {
  83:../../libDaisy//src/hid/midi.h ****   public:
  84:../../libDaisy//src/hid/midi.h ****     MidiHandler() {}
  85:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
  38              		.loc 2 85 5 view .LVU1
  39              	.LBB274:
  40              	.LBI274:
  26:../../libDaisy//src/hid/midi.h **** 
  41              		.loc 2 26 5 view .LVU2
  26:../../libDaisy//src/hid/midi.h **** 
  42              		.loc 2 26 5 is_stmt 0 view .LVU3
  43              	.LBE274:
  44              	.LBE273:
  45              	.LBB275:
  46              	.LBI275:
  47              		.file 3 "../../libDaisy//src/hid/rgb_led.h"
   1:../../libDaisy//src/hid/rgb_led.h **** #pragma once
   2:../../libDaisy//src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 4


   3:../../libDaisy//src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../../libDaisy//src/hid/rgb_led.h **** #include "hid/led.h"
   5:../../libDaisy//src/hid/rgb_led.h **** #include "util/color.h"
   6:../../libDaisy//src/hid/rgb_led.h **** 
   7:../../libDaisy//src/hid/rgb_led.h **** namespace daisy
   8:../../libDaisy//src/hid/rgb_led.h **** {
   9:../../libDaisy//src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../../libDaisy//src/hid/rgb_led.h ****     @{
  11:../../libDaisy//src/hid/rgb_led.h **** */
  12:../../libDaisy//src/hid/rgb_led.h **** 
  13:../../libDaisy//src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../../libDaisy//src/hid/rgb_led.h **** class RgbLed
  15:../../libDaisy//src/hid/rgb_led.h **** {
  16:../../libDaisy//src/hid/rgb_led.h ****   public:
  17:../../libDaisy//src/hid/rgb_led.h ****     RgbLed() {}
  18:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
  48              		.loc 3 18 5 is_stmt 1 view .LVU4
  49              	.LBB276:
  50              	.LBI276:
  51              		.file 4 "../../libDaisy//src/hid/led.h"
   1:../../libDaisy//src/hid/led.h **** 
   2:../../libDaisy//src/hid/led.h **** #pragma once
   3:../../libDaisy//src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libDaisy//src/hid/led.h **** #define DSY_LED_H
   5:../../libDaisy//src/hid/led.h **** #include "daisy_core.h"
   6:../../libDaisy//src/hid/led.h **** #include "per/gpio.h"
   7:../../libDaisy//src/hid/led.h **** 
   8:../../libDaisy//src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libDaisy//src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libDaisy//src/hid/led.h **** */
  11:../../libDaisy//src/hid/led.h **** 
  12:../../libDaisy//src/hid/led.h **** namespace daisy
  13:../../libDaisy//src/hid/led.h **** {
  14:../../libDaisy//src/hid/led.h **** /**
  15:../../libDaisy//src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libDaisy//src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libDaisy//src/hid/led.h ****     @author shensley
  18:../../libDaisy//src/hid/led.h ****     @date March 2020
  19:../../libDaisy//src/hid/led.h ****     @ingroup feedback
  20:../../libDaisy//src/hid/led.h **** */
  21:../../libDaisy//src/hid/led.h **** class Led
  22:../../libDaisy//src/hid/led.h **** {
  23:../../libDaisy//src/hid/led.h ****   public:
  24:../../libDaisy//src/hid/led.h ****     Led() {}
  25:../../libDaisy//src/hid/led.h ****     ~Led() {}
  52              		.loc 4 25 5 view .LVU5
  53              		.loc 4 25 5 is_stmt 0 view .LVU6
  54              	.LBE276:
  55              	.LBB277:
  56              	.LBI277:
  57              		.loc 4 25 5 is_stmt 1 view .LVU7
  58              		.loc 4 25 5 is_stmt 0 view .LVU8
  59              	.LBE277:
  60              	.LBB278:
  61              	.LBI278:
  62              		.loc 4 25 5 is_stmt 1 view .LVU9
  63              		.loc 4 25 5 is_stmt 0 view .LVU10
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 5


  64              	.LBE278:
  65              	.LBE275:
  66              	.LBB279:
  67              	.LBI279:
  68              		.loc 3 18 5 is_stmt 1 view .LVU11
  69              	.LBB280:
  70              	.LBI280:
  71              		.loc 4 25 5 view .LVU12
  72              		.loc 4 25 5 is_stmt 0 view .LVU13
  73              	.LBE280:
  74              	.LBB281:
  75              	.LBI281:
  76              		.loc 4 25 5 is_stmt 1 view .LVU14
  77              		.loc 4 25 5 is_stmt 0 view .LVU15
  78              	.LBE281:
  79              	.LBB282:
  80              	.LBI282:
  81              		.loc 4 25 5 is_stmt 1 view .LVU16
  82              		.loc 4 25 5 is_stmt 0 view .LVU17
  83              	.LBE282:
  84              	.LBE279:
  85              	.LBB283:
  86              	.LBI283:
  87              		.file 5 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 6


  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  88              		.loc 5 42 5 is_stmt 1 view .LVU18
  89              		.loc 5 42 5 is_stmt 0 view .LVU19
  90              	.LBE283:
  91              	.LBB284:
  92              	.LBI284:
  93              		.loc 5 42 5 is_stmt 1 view .LVU20
  94              		.loc 5 42 5 is_stmt 0 view .LVU21
  95              	.LBE284:
  96              	.LBB285:
  97              	.LBI285:
  98              		.file 6 "../../libDaisy//src/hid/ctrl.h"
   1:../../libDaisy//src/hid/ctrl.h **** #pragma once
   2:../../libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/ctrl.h **** 
   6:../../libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libDaisy//src/hid/ctrl.h **** namespace daisy
   8:../../libDaisy//src/hid/ctrl.h **** {
   9:../../libDaisy//src/hid/ctrl.h **** /**
  10:../../libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../../libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../../libDaisy//src/hid/ctrl.h **** */
  17:../../libDaisy//src/hid/ctrl.h **** class AnalogControl
  18:../../libDaisy//src/hid/ctrl.h **** {
  19:../../libDaisy//src/hid/ctrl.h ****   public:
  20:../../libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../../libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../../libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
  99              		.loc 6 23 5 is_stmt 1 view .LVU22
 100              		.loc 6 23 5 is_stmt 0 view .LVU23
 101              	.LBE285:
 102              	.LBB286:
 103              	.LBI286:
 104              		.loc 6 23 5 is_stmt 1 view .LVU24
 105              		.loc 6 23 5 is_stmt 0 view .LVU25
 106              	.LBE286:
 107              	.LBB287:
 108              	.LBI287:
 109              		.file 7 "../../libDaisy//src/hid/encoder.h"
   1:../../libDaisy//src/hid/encoder.h **** #pragma once
   2:../../libDaisy//src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libDaisy//src/hid/encoder.h **** #define DSY_ENCODER_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 7


   4:../../libDaisy//src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libDaisy//src/hid/encoder.h **** 
   8:../../libDaisy//src/hid/encoder.h **** namespace daisy
   9:../../libDaisy//src/hid/encoder.h **** {
  10:../../libDaisy//src/hid/encoder.h **** /** 
  11:../../libDaisy//src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libDaisy//src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libDaisy//src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/encoder.h ****     @date December 2019
  15:../../libDaisy//src/hid/encoder.h ****     @ingroup controls
  16:../../libDaisy//src/hid/encoder.h **** */
  17:../../libDaisy//src/hid/encoder.h **** class Encoder
  18:../../libDaisy//src/hid/encoder.h **** {
  19:../../libDaisy//src/hid/encoder.h ****   public:
  20:../../libDaisy//src/hid/encoder.h ****     Encoder() {}
  21:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 110              		.loc 7 21 5 is_stmt 1 view .LVU26
 111              	.LBB288:
 112              	.LBI288:
 113              		.loc 5 42 5 view .LVU27
 114              		.loc 5 42 5 is_stmt 0 view .LVU28
 115              	.LBE288:
 116              	.LBE287:
 117              	.LBB289:
 118              	.LBI289:
 119              		.file 8 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 120              		.loc 8 22 5 is_stmt 1 view .LVU29
 121              	.LBB290:
 122              	.LBI290:
 123              		.file 9 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 8


   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 9


  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
 124              		.loc 9 78 5 view .LVU30
 125              		.loc 9 78 5 is_stmt 0 view .LVU31
 126              	.LBE290:
 127              	.LBB291:
 128              	.LBI291:
 129              		.file 10 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 10


  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 130              		.loc 10 42 5 is_stmt 1 view .LVU32
 131              		.loc 10 42 5 is_stmt 0 view .LVU33
 132              	.LBE291:
 133              	.LBB292:
 134              	.LBI292:
 135              		.file 11 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 11


  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 136              		.loc 11 93 5 is_stmt 1 view .LVU34
 137              		.loc 11 93 5 is_stmt 0 view .LVU35
 138              	.LBE292:
 139              	.LBB293:
 140              	.LBI293:
 141              		.file 12 "../../libDaisy//src/hid/audio.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 12


   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 13


  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 142              		.loc 12 96 5 is_stmt 1 view .LVU36
 143              		.loc 12 96 5 is_stmt 0 view .LVU37
 144              	.LBE293:
 145              	.LBE289:
 146              		.loc 1 36 18 view .LVU38
 147 0000 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE2538:
 151              		.weak	_ZN5daisy8DaisyPodD1Ev
 152              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 153 0002 00BF     		.section	.text._Z12randomNumberv,"ax",%progbits
 154              		.align	1
 155              		.p2align 2,,3
 156              		.global	_Z12randomNumberv
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	_Z12randomNumberv:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 14


 162              	.LFB2541:
 163              		.file 13 "MyProj.cpp"
   1:MyProj.cpp    **** #include "daisy_pod.h"
   2:MyProj.cpp    **** #include "leaf.h"
   3:MyProj.cpp    **** using namespace daisy;
   4:MyProj.cpp    **** LEAF leaf;
   5:MyProj.cpp    **** char leafMemory[65535];
   6:MyProj.cpp    **** DaisyPod hw;
   7:MyProj.cpp    **** tCycle mySine;
   8:MyProj.cpp    **** 
   9:MyProj.cpp    **** //let's define a global variable to store the frequency so we can easily mess with it in our progra
  10:MyProj.cpp    **** float myFreq = 220.0f;
  11:MyProj.cpp    **** int sampleCounter = 0; // this will store the current count of how many samples have been processed
  12:MyProj.cpp    **** int sampleCounterMaxValue = 48000; //we'll set this to 48000 for now, meaning the counter resets ev
  13:MyProj.cpp    **** float myTempo; // we'll use this as a variable to store what tempo we are trying to click the metro
  14:MyProj.cpp    **** 
  15:MyProj.cpp    **** 
  16:MyProj.cpp    **** //let's make an array of notes that will loop instead of a constant stream of random values
  17:MyProj.cpp    **** int mySequence[16] = {60,63,62,60,67,65,67,60,63,62,60,67,68,67,72,48};
  18:MyProj.cpp    **** int whichNoteInSequence = 0;//which note are we currently on in the sequence
  19:MyProj.cpp    **** 
  20:MyProj.cpp    **** //DOING SOMETHING WITH A METRONOME
  21:MyProj.cpp    **** //turn knob1 to change the speed of a metronome, which will play a sequence of pitches.
  22:MyProj.cpp    **** 
  23:MyProj.cpp    **** 
  24:MyProj.cpp    **** 
  25:MyProj.cpp    **** float randomNumber()
  26:MyProj.cpp    **** {
 164              		.loc 13 26 1 is_stmt 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
  27:MyProj.cpp    ****     //call the daisy function to get a random number between 0 and 1 (what leaf wants)
  28:MyProj.cpp    ****     return Random::GetFloat(0.0f, 1.0f);
 169              		.loc 13 28 5 view .LVU40
 170              		.loc 13 28 28 is_stmt 0 view .LVU41
 171 0000 F7EE000A 		vmov.f32	s1, #1.0e+0
 172 0004 9FED010A 		vldr.32	s0, .L4
 173 0008 FFF7FEBF 		b	_ZN5daisy6Random8GetFloatEff
 174              	.LVL1:
 175              	.L5:
 176              		.align	2
 177              	.L4:
 178 000c 00000000 		.word	0
 179              		.cfi_endproc
 180              	.LFE2541:
 182              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 183              		.align	1
 184              		.p2align 2,,3
 185              		.global	_Z13AudioCallbackPKPKfPPfj
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	_Z13AudioCallbackPKPKfPPfj:
 191              	.LVL2:
 192              	.LFB2542:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 15


  29:MyProj.cpp    **** }
  30:MyProj.cpp    **** 
  31:MyProj.cpp    **** 
  32:MyProj.cpp    **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  33:MyProj.cpp    **** {
 193              		.loc 13 33 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
  34:MyProj.cpp    ****     hw.ProcessAllControls();
 197              		.loc 13 34 5 view .LVU43
 198              	.LBB294:
 199              	.LBI294:
  37:../../libDaisy//src/daisy_pod.h **** 
  38:../../libDaisy//src/daisy_pod.h ****     /** Init related stuff. */
  39:../../libDaisy//src/daisy_pod.h ****     void Init(bool boost = false);
  40:../../libDaisy//src/daisy_pod.h **** 
  41:../../libDaisy//src/daisy_pod.h ****     /** Wait for a bit
  42:../../libDaisy//src/daisy_pod.h ****     \param del Time to wait in ms.
  43:../../libDaisy//src/daisy_pod.h ****     */
  44:../../libDaisy//src/daisy_pod.h ****     void DelayMs(size_t del);
  45:../../libDaisy//src/daisy_pod.h **** 
  46:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  47:../../libDaisy//src/daisy_pod.h ****     \param cb Interleaved callback function
  48:../../libDaisy//src/daisy_pod.h ****     */
  49:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  50:../../libDaisy//src/daisy_pod.h **** 
  51:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  52:../../libDaisy//src/daisy_pod.h ****     \param cb multichannel callback function
  53:../../libDaisy//src/daisy_pod.h ****     */
  54:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  55:../../libDaisy//src/daisy_pod.h **** 
  56:../../libDaisy//src/daisy_pod.h ****     /**
  57:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  58:../../libDaisy//src/daisy_pod.h ****        \param cb New interleaved callback function.
  59:../../libDaisy//src/daisy_pod.h ****     */
  60:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  61:../../libDaisy//src/daisy_pod.h **** 
  62:../../libDaisy//src/daisy_pod.h ****     /**
  63:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  64:../../libDaisy//src/daisy_pod.h ****        \param cb New multichannel callback function.
  65:../../libDaisy//src/daisy_pod.h ****     */
  66:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  67:../../libDaisy//src/daisy_pod.h **** 
  68:../../libDaisy//src/daisy_pod.h ****     /** Stops the audio if it is running. */
  69:../../libDaisy//src/daisy_pod.h ****     void StopAudio();
  70:../../libDaisy//src/daisy_pod.h **** 
  71:../../libDaisy//src/daisy_pod.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  72:../../libDaisy//src/daisy_pod.h ****      ** Audio must be stopped for this to work.
  73:../../libDaisy//src/daisy_pod.h ****      */
  74:../../libDaisy//src/daisy_pod.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  75:../../libDaisy//src/daisy_pod.h **** 
  76:../../libDaisy//src/daisy_pod.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  77:../../libDaisy//src/daisy_pod.h ****      */
  78:../../libDaisy//src/daisy_pod.h ****     float AudioSampleRate();
  79:../../libDaisy//src/daisy_pod.h **** 
  80:../../libDaisy//src/daisy_pod.h ****     /** Sets the number of samples processed per channel by the audio callback.
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 16


  81:../../libDaisy//src/daisy_pod.h ****      */
  82:../../libDaisy//src/daisy_pod.h ****     void SetAudioBlockSize(size_t blocksize);
  83:../../libDaisy//src/daisy_pod.h **** 
  84:../../libDaisy//src/daisy_pod.h ****     /** Returns the number of samples per channel in a block of audio. */
  85:../../libDaisy//src/daisy_pod.h ****     size_t AudioBlockSize();
  86:../../libDaisy//src/daisy_pod.h **** 
  87:../../libDaisy//src/daisy_pod.h ****     /** Returns the rate in Hz that the Audio callback is called */
  88:../../libDaisy//src/daisy_pod.h ****     float AudioCallbackRate();
  89:../../libDaisy//src/daisy_pod.h **** 
  90:../../libDaisy//src/daisy_pod.h ****     /**
  91:../../libDaisy//src/daisy_pod.h ****        Start analog to digital conversion.
  92:../../libDaisy//src/daisy_pod.h ****      */
  93:../../libDaisy//src/daisy_pod.h ****     void StartAdc();
  94:../../libDaisy//src/daisy_pod.h **** 
  95:../../libDaisy//src/daisy_pod.h ****     /** Stops Transfering data from the ADC */
  96:../../libDaisy//src/daisy_pod.h ****     void StopAdc();
  97:../../libDaisy//src/daisy_pod.h **** 
  98:../../libDaisy//src/daisy_pod.h ****     /** Call at same rate as analog reads for smooth reading.*/
  99:../../libDaisy//src/daisy_pod.h ****     void ProcessAnalogControls();
 100:../../libDaisy//src/daisy_pod.h **** 
 101:../../libDaisy//src/daisy_pod.h ****     /** Process Analog and Digital Controls */
 102:../../libDaisy//src/daisy_pod.h ****     inline void ProcessAllControls()
 200              		.loc 1 102 17 view .LVU44
 201              	.LBB295:
 103:../../libDaisy//src/daisy_pod.h ****     {
 104:../../libDaisy//src/daisy_pod.h ****         ProcessAnalogControls();
 202              		.loc 1 104 9 view .LVU45
 203              	.LBE295:
 204              	.LBE294:
  33:MyProj.cpp    ****     hw.ProcessAllControls();
 205              		.loc 13 33 1 is_stmt 0 view .LVU46
 206 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 207              		.cfi_def_cfa_offset 32
 208              		.cfi_offset 3, -32
 209              		.cfi_offset 4, -28
 210              		.cfi_offset 5, -24
 211              		.cfi_offset 6, -20
 212              		.cfi_offset 7, -16
 213              		.cfi_offset 8, -12
 214              		.cfi_offset 9, -8
 215              		.cfi_offset 14, -4
 216              	.LBB299:
 217              	.LBB296:
 218              		.loc 1 104 30 view .LVU47
 219 0004 624C     		ldr	r4, .L22+16
 220              	.LBE296:
 221              	.LBE299:
  33:MyProj.cpp    ****     hw.ProcessAllControls();
 222              		.loc 13 33 1 view .LVU48
 223 0006 1646     		mov	r6, r2
 224 0008 0D46     		mov	r5, r1
  35:MyProj.cpp    **** 
  36:MyProj.cpp    ****     //lets use knob1 for the tempo control
  37:MyProj.cpp    ****     myTempo = hw.GetKnobValue(hw.KNOB_1) * 190.0f + 10.0f; // will result in a range from 10 to 200
  38:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
  39:MyProj.cpp    ****     //we are counting samples, and there are 48000 of those per second (because our sample rate is 
  40:MyProj.cpp    ****     //so if we want a certain number of beats per minute, we need to figure out how many beats per 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 17


  41:MyProj.cpp    ****     float tempBeatsPerSecond = myTempo / 60.0f; //there are 60 seconds per minute. I'm keep this fl
  42:MyProj.cpp    ****     //now let's figure out how many samples will happen in one beat of the metronome at the tempo w
  43:MyProj.cpp    ****     float tempSamplesPerBeat =  48000.0f / tempBeatsPerSecond;
  44:MyProj.cpp    ****     //that will do it - think it through in your head, if tempo is 60, then tempBeatsPerSecond is 1
  45:MyProj.cpp    **** 
  46:MyProj.cpp    ****     //now we can just use that tempSamplesPerBeat as the maxSampleCounterValue
  47:MyProj.cpp    ****     // sampleCounterMaxValue is an int, it will truncate tempSamplesPerBeat (for instance 48000.5 t
  48:MyProj.cpp    ****     //let's divide the number of samples per beat by 4 to get 1/16th-notes instead of 1/4-notes.
  49:MyProj.cpp    ****     sampleCounterMaxValue = tempSamplesPerBeat / 4.0f;
 225              		.loc 13 49 27 view .LVU49
 226 000a 624F     		ldr	r7, .L22+20
 227              	.LBB300:
 228              	.LBB297:
 229              		.loc 1 104 30 view .LVU50
 230 000c 2046     		mov	r0, r4
 231              	.LVL3:
 232              		.loc 1 104 30 view .LVU51
 233              	.LBE297:
 234              	.LBE300:
  33:MyProj.cpp    ****     hw.ProcessAllControls();
 235              		.loc 13 33 1 view .LVU52
 236 000e 2DED028B 		vpush.64	{d8}
 237              		.cfi_def_cfa_offset 40
 238              		.cfi_offset 80, -40
 239              		.cfi_offset 81, -36
 240              	.LBB301:
 241              	.LBB298:
 242              		.loc 1 104 30 view .LVU53
 243 0012 FFF7FEFF 		bl	_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
 244              	.LVL4:
 105:../../libDaisy//src/daisy_pod.h ****         ProcessDigitalControls();
 245              		.loc 1 105 9 is_stmt 1 view .LVU54
 246              		.loc 1 105 31 is_stmt 0 view .LVU55
 247 0016 2046     		mov	r0, r4
 248 0018 FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
 249              	.LVL5:
 250              		.loc 1 105 31 view .LVU56
 251              	.LBE298:
 252              	.LBE301:
  37:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
 253              		.loc 13 37 5 is_stmt 1 view .LVU57
  37:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
 254              		.loc 13 37 30 is_stmt 0 view .LVU58
 255 001c 0021     		movs	r1, #0
 256 001e 2046     		mov	r0, r4
 257 0020 FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 258              	.LVL6:
  37:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
 259              		.loc 13 37 51 view .LVU59
 260 0024 B2EE047A 		vmov.f32	s14, #1.0e+1
 261 0028 9FED5B6A 		vldr.32	s12, .L22+24
 262              		.loc 13 49 48 view .LVU60
 263 002c F5EE006A 		vmov.f32	s13, #2.5e-1
  41:MyProj.cpp    ****     //now let's figure out how many samples will happen in one beat of the metronome at the tempo w
 264              		.loc 13 41 11 view .LVU61
 265 0030 DFED5A7A 		vldr.32	s15, .L22+28
  37:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 18


 266              		.loc 13 37 51 view .LVU62
 267 0034 A0EE067A 		vfma.f32	s14, s0, s12
  43:MyProj.cpp    ****     //that will do it - think it through in your head, if tempo is 60, then tempBeatsPerSecond is 1
 268              		.loc 13 43 11 view .LVU63
 269 0038 DFED595A 		vldr.32	s11, .L22+32
 270              	.LBB302:
  50:MyProj.cpp    **** 
  51:MyProj.cpp    **** 
  52:MyProj.cpp    ****     if (hw.button1.Pressed())
 271              		.loc 13 52 5 view .LVU64
 272 003c 94F8B630 		ldrb	r3, [r4, #182]	@ zero_extendqisi2
 273              	.LBE302:
  37:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
 274              		.loc 13 37 13 view .LVU65
 275 0040 584A     		ldr	r2, .L22+36
 276              	.LBB308:
 277              		.loc 13 52 5 view .LVU66
 278 0042 FF2B     		cmp	r3, #255
 279              	.LBE308:
  41:MyProj.cpp    ****     //now let's figure out how many samples will happen in one beat of the metronome at the tempo w
 280              		.loc 13 41 11 view .LVU67
 281 0044 87EE276A 		vdiv.f32	s12, s14, s15
  37:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
 282              		.loc 13 37 13 view .LVU68
 283 0048 82ED007A 		vstr.32	s14, [r2]
  41:MyProj.cpp    ****     //now let's figure out how many samples will happen in one beat of the metronome at the tempo w
 284              		.loc 13 41 5 is_stmt 1 view .LVU69
 285              	.LVL7:
  43:MyProj.cpp    ****     //that will do it - think it through in your head, if tempo is 60, then tempBeatsPerSecond is 1
 286              		.loc 13 43 5 view .LVU70
  49:MyProj.cpp    **** 
 287              		.loc 13 49 5 view .LVU71
  43:MyProj.cpp    ****     //that will do it - think it through in your head, if tempo is 60, then tempBeatsPerSecond is 1
 288              		.loc 13 43 11 is_stmt 0 view .LVU72
 289 004c C5EE867A 		vdiv.f32	s15, s11, s12
  49:MyProj.cpp    **** 
 290              		.loc 13 49 48 view .LVU73
 291 0050 67EEA67A 		vmul.f32	s15, s15, s13
  49:MyProj.cpp    **** 
 292              		.loc 13 49 27 view .LVU74
 293 0054 FDEEE77A 		vcvt.s32.f32	s15, s15
 294 0058 C7ED007A 		vstr.32	s15, [r7]	@ int
 295              		.loc 13 52 5 is_stmt 1 view .LVU75
 296              	.LVL8:
 297              	.LBB309:
 298              	.LBB303:
 299              	.LBI303:
  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 19


  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy//src/hid/switch.h **** 
  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
  71:../../libDaisy//src/hid/switch.h **** 
  72:../../libDaisy//src/hid/switch.h ****     /** \return true if the button was just released */
  73:../../libDaisy//src/hid/switch.h ****     inline bool FallingEdge() const
  74:../../libDaisy//src/hid/switch.h ****     {
  75:../../libDaisy//src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
  76:../../libDaisy//src/hid/switch.h ****     }
  77:../../libDaisy//src/hid/switch.h **** 
  78:../../libDaisy//src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  79:../../libDaisy//src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 300              		.loc 5 79 17 view .LVU76
 301              	.LBB304:
 302              		.loc 5 79 35 view .LVU77
 303              		.loc 5 79 35 is_stmt 0 view .LVU78
 304              	.LBE304:
 305              	.LBE303:
 306              		.loc 13 52 5 view .LVU79
 307 005c 74D0     		beq	.L21
 308              	.LVL9:
 309              	.L7:
 310              		.loc 13 52 5 view .LVU80
 311              	.LBE309:
 312              	.LBB310:
  53:MyProj.cpp    ****     {
  54:MyProj.cpp    ****         //if you press button1, randomize the array
  55:MyProj.cpp    ****         int index = 0;
  56:MyProj.cpp    ****         while (index < 16)
  57:MyProj.cpp    ****         {
  58:MyProj.cpp    ****             //this will go through each index of the mySequence array and replace the value stored 
  59:MyProj.cpp    ****             mySequence[index] = (randomNumber() * 24.0) + 48.0; // give me a random number between 
  60:MyProj.cpp    ****             index = index + 1;
  61:MyProj.cpp    ****         }
  62:MyProj.cpp    ****     }
  63:MyProj.cpp    ****     //now here's the per sample stuff
  64:MyProj.cpp    ****     for (size_t i = 0; i < size; i++)
 313              		.loc 13 64 26 is_stmt 1 view .LVU81
 314 005e 002E     		cmp	r6, #0
 315 0060 6ED0     		beq	.L6
 316 0062 0024     		movs	r4, #0
 317 0064 DFF86081 		ldr	r8, .L22+72
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 20


 318              	.LVL10:
 319              	.L14:
 320              	.LBB311:
  65:MyProj.cpp    ****     {
  66:MyProj.cpp    ****         //since now we're going to have an if statement control structure in here, let's define "my
  67:MyProj.cpp    ****         float mySample = 0.0f;
 321              		.loc 13 67 9 view .LVU82
  68:MyProj.cpp    **** 
  69:MyProj.cpp    ****         //when sampleCounter is zero, it's a metronome pulse. At the bottom of the for loop we are 
  70:MyProj.cpp    ****         if (sampleCounter == 0)
 322              		.loc 13 70 9 view .LVU83
 323              	.LBB312:
 324              	.LBB313:
  71:MyProj.cpp    ****         {
  72:MyProj.cpp    ****             //metronome pulse happened! do something!!!!!!!
  73:MyProj.cpp    ****             //get the next midinote from that mySequence array we defined up top
  74:MyProj.cpp    ****             float tempMidiNote = mySequence[whichNoteInSequence];
 325              		.loc 13 74 13 view .LVU84
 326              	.LBE313:
  70:MyProj.cpp    ****         {
 327              		.loc 13 70 9 is_stmt 0 view .LVU85
 328 0068 D8F80030 		ldr	r3, [r8]
 329              	.LBB314:
  75:MyProj.cpp    ****             //now increment whichNoteInSequence for the next time a metronome pulse happens
  76:MyProj.cpp    ****             whichNoteInSequence = whichNoteInSequence + 1;
  77:MyProj.cpp    ****             //if we go over the number of elements in the array, loop back to 0
  78:MyProj.cpp    ****             if (whichNoteInSequence >= 16)
  79:MyProj.cpp    ****             {
  80:MyProj.cpp    ****                 whichNoteInSequence = 0;
  81:MyProj.cpp    ****             }
  82:MyProj.cpp    **** 
  83:MyProj.cpp    ****             //let's add an octave offset based on knob2 position
  84:MyProj.cpp    ****             int tempOctaveOffset = (hw.GetKnobValue(hw.KNOB_2) * 3.99);
 330              		.loc 13 84 52 view .LVU86
 331 006c 0121     		movs	r1, #1
  74:MyProj.cpp    ****             //now increment whichNoteInSequence for the next time a metronome pulse happens
 332              		.loc 13 74 64 view .LVU87
 333 006e 4E4A     		ldr	r2, .L22+40
 334 0070 DFF858E1 		ldr	lr, .L22+76
 335              		.loc 13 84 52 view .LVU88
 336 0074 4648     		ldr	r0, .L22+16
 337              	.LBE314:
  70:MyProj.cpp    ****         {
 338              		.loc 13 70 9 view .LVU89
 339 0076 002B     		cmp	r3, #0
 340 0078 47D1     		bne	.L10
 341              	.LBB315:
  74:MyProj.cpp    ****             //now increment whichNoteInSequence for the next time a metronome pulse happens
 342              		.loc 13 74 64 view .LVU90
 343 007a D2F80090 		ldr	r9, [r2]
  76:MyProj.cpp    ****             //if we go over the number of elements in the array, loop back to 0
 344              		.loc 13 76 55 view .LVU91
 345 007e 09EB010C 		add	ip, r9, r1
  74:MyProj.cpp    ****             //now increment whichNoteInSequence for the next time a metronome pulse happens
 346              		.loc 13 74 19 view .LVU92
 347 0082 0EEB890E 		add	lr, lr, r9, lsl #2
  76:MyProj.cpp    ****             //if we go over the number of elements in the array, loop back to 0
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 21


 348              		.loc 13 76 33 view .LVU93
 349 0086 BCF10F0F 		cmp	ip, #15
 350 008a D8BF     		it	le
 351 008c 6346     		movle	r3, ip
  74:MyProj.cpp    ****             //now increment whichNoteInSequence for the next time a metronome pulse happens
 352              		.loc 13 74 19 view .LVU94
 353 008e DEED008A 		vldr.32	s17, [lr]	@ int
  76:MyProj.cpp    ****             //if we go over the number of elements in the array, loop back to 0
 354              		.loc 13 76 33 view .LVU95
 355 0092 1360     		str	r3, [r2]
 356              		.loc 13 84 52 view .LVU96
 357 0094 FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 358              	.LVL11:
 359 0098 B7EEC00A 		vcvt.f64.f32	d0, s0
  74:MyProj.cpp    ****             //now increment whichNoteInSequence for the next time a metronome pulse happens
 360              		.loc 13 74 19 view .LVU97
 361 009c F8EEE88A 		vcvt.f32.s32	s17, s17
 362              	.LVL12:
  76:MyProj.cpp    ****             //if we go over the number of elements in the array, loop back to 0
 363              		.loc 13 76 13 is_stmt 1 view .LVU98
  78:MyProj.cpp    ****             {
 364              		.loc 13 78 13 view .LVU99
 365              		.loc 13 84 13 view .LVU100
  85:MyProj.cpp    ****             // the offset octave is now 0, 1, 2, or 3. Let's multiply that by 12 to get it in "numb
  86:MyProj.cpp    ****             tempMidiNote = tempMidiNote + (tempOctaveOffset * 12);
 366              		.loc 13 86 13 view .LVU101
  84:MyProj.cpp    ****             // the offset octave is now 0, 1, 2, or 3. Let's multiply that by 12 to get it in "numb
 367              		.loc 13 84 64 is_stmt 0 view .LVU102
 368 00a0 9FED377B 		vldr.64	d7, .L22
 369 00a4 20EE077B 		vmul.f64	d7, d0, d7
  84:MyProj.cpp    ****             // the offset octave is now 0, 1, 2, or 3. Let's multiply that by 12 to get it in "numb
 370              		.loc 13 84 70 view .LVU103
 371 00a8 FDEEC77B 		vcvt.s32.f64	s15, d7
 372 00ac 17EE903A 		vmov	r3, s15	@ int
 373              		.loc 13 86 61 view .LVU104
 374 00b0 03EB4303 		add	r3, r3, r3, lsl #1
 375 00b4 9B00     		lsls	r3, r3, #2
 376              		.loc 13 86 41 view .LVU105
 377 00b6 07EE903A 		vmov	s15, r3	@ int
 378 00ba B8EEE78A 		vcvt.f32.s32	s16, s15
 379              		.loc 13 86 26 view .LVU106
 380 00be 38EE288A 		vadd.f32	s16, s16, s17
 381              	.LVL13:
  87:MyProj.cpp    **** 
  88:MyProj.cpp    ****             myFreq = mtof(tempMidiNote);
 382              		.loc 13 88 13 is_stmt 1 view .LVU107
 383              		.loc 13 88 26 is_stmt 0 view .LVU108
 384 00c2 B0EE480A 		vmov.f32	s0, s16
 385 00c6 FFF7FEFF 		bl	mtof
 386              	.LVL14:
 387              		.loc 13 88 20 view .LVU109
 388 00ca 384B     		ldr	r3, .L22+44
  89:MyProj.cpp    ****             tCycle_setFreq(&mySine, myFreq);
 389              		.loc 13 89 27 view .LVU110
 390 00cc 3848     		ldr	r0, .L22+48
  88:MyProj.cpp    ****             tCycle_setFreq(&mySine, myFreq);
 391              		.loc 13 88 20 view .LVU111
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 22


 392 00ce 83ED000A 		vstr.32	s0, [r3]
 393              		.loc 13 89 13 is_stmt 1 view .LVU112
 394              		.loc 13 89 27 is_stmt 0 view .LVU113
 395 00d2 FFF7FEFF 		bl	tCycle_setFreq
 396              	.LVL15:
  90:MyProj.cpp    ****             //we can also set the LED stuff here if we want
  91:MyProj.cpp    ****             //let's turn the midinote into a value between 0 and 1 for an led. 
  92:MyProj.cpp    ****             //we know we are only using values between 48 and 72, so that's a range of 24 and an of
  93:MyProj.cpp    ****             //we can get that to 0-1 by subtracting the offset and then dividing by the range.
  94:MyProj.cpp    ****             float ledValue = (tempMidiNote - 48.0f) / 24.0;
 397              		.loc 13 94 13 is_stmt 1 view .LVU114
 398              		.loc 13 94 44 is_stmt 0 view .LVU115
 399 00d6 9FED377A 		vldr.32	s14, .L22+52
 400              		.loc 13 94 19 view .LVU116
 401 00da F3EE087A 		vmov.f32	s15, #2.4e+1
  95:MyProj.cpp    ****             hw.led1.Set(ledValue, 0.0f, 0.0f); //set led1 to be red with a brightness corresponding
 402              		.loc 13 95 24 view .LVU117
 403 00de 9FED361A 		vldr.32	s2, .L22+56
  94:MyProj.cpp    ****             hw.led1.Set(ledValue, 0.0f, 0.0f); //set led1 to be red with a brightness corresponding
 404              		.loc 13 94 44 view .LVU118
 405 00e2 38EE478A 		vsub.f32	s16, s16, s14
 406              	.LVL16:
 407              		.loc 13 95 24 view .LVU119
 408 00e6 3548     		ldr	r0, .L22+60
 409 00e8 F0EE410A 		vmov.f32	s1, s2
  94:MyProj.cpp    ****             hw.led1.Set(ledValue, 0.0f, 0.0f); //set led1 to be red with a brightness corresponding
 410              		.loc 13 94 19 view .LVU120
 411 00ec C8EE278A 		vdiv.f32	s17, s16, s15
 412              	.LVL17:
 413              		.loc 13 95 13 is_stmt 1 view .LVU121
 414              		.loc 13 95 24 is_stmt 0 view .LVU122
 415 00f0 B0EE680A 		vmov.f32	s0, s17
 416 00f4 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 417              	.LVL18:
  96:MyProj.cpp    ****             hw.led2.Set(0.0f, ledValue, 0.0f); //set led2 to be green with a brightness correspondi
 418              		.loc 13 96 13 is_stmt 1 view .LVU123
 419              		.loc 13 96 24 is_stmt 0 view .LVU124
 420 00f8 9FED2F1A 		vldr.32	s2, .L22+56
 421 00fc F0EE680A 		vmov.f32	s1, s17
 422 0100 2F48     		ldr	r0, .L22+64
 423 0102 B0EE410A 		vmov.f32	s0, s2
 424 0106 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 425              	.LVL19:
 426              	.L10:
 427              		.loc 13 96 24 view .LVU125
 428              	.LBE315:
 429              	.LBE312:
  97:MyProj.cpp    ****             //now the frequency will only change when the sample counter equals 0, which only happe
  98:MyProj.cpp    ****         }
  99:MyProj.cpp    ****         
 100:MyProj.cpp    ****         //note that since we defined mySample above, we don't put "float" here
 101:MyProj.cpp    ****         mySample = tCycle_tick(&mySine);
 430              		.loc 13 101 9 is_stmt 1 view .LVU126
 431              		.loc 13 101 31 is_stmt 0 view .LVU127
 432 010a 2948     		ldr	r0, .L22+48
 433 010c FFF7FEFF 		bl	tCycle_tick
 434              	.LVL20:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 23


 102:MyProj.cpp    **** 
 103:MyProj.cpp    **** 
 104:MyProj.cpp    **** 
 105:MyProj.cpp    ****         //increment the sampleCounter variable so we can keep track of how many samples have passed
 106:MyProj.cpp    ****         //it will count 48000 samples per second because that's our "sample rate"
 107:MyProj.cpp    ****         sampleCounter = sampleCounter + 1;
 108:MyProj.cpp    ****         //we'll reset it to zero when it reaches sampleCounterMaxValue, then we can check for a val
 109:MyProj.cpp    ****         //when our metronome has ticked (if we set sampleCounterMaxValue so that it will reach it a
 110:MyProj.cpp    ****         if (sampleCounter >= sampleCounterMaxValue)
 111:MyProj.cpp    ****         {
 112:MyProj.cpp    ****             sampleCounter = 0;
 435              		.loc 13 112 13 is_stmt 1 view .LVU128
 113:MyProj.cpp    ****         }
 114:MyProj.cpp    **** 
 115:MyProj.cpp    ****         //now set the audio outputs (left is [0] and right is [1] to be whatever value has been com
 116:MyProj.cpp    ****         out[0][i] = mySample;
 436              		.loc 13 116 9 view .LVU129
 107:MyProj.cpp    ****         //we'll reset it to zero when it reaches sampleCounterMaxValue, then we can check for a val
 437              		.loc 13 107 39 is_stmt 0 view .LVU130
 438 0110 D8F80030 		ldr	r3, [r8]
 110:MyProj.cpp    ****         {
 439              		.loc 13 110 9 view .LVU131
 440 0114 3A68     		ldr	r2, [r7]
 441              	.LVL21:
 107:MyProj.cpp    ****         //we'll reset it to zero when it reaches sampleCounterMaxValue, then we can check for a val
 442              		.loc 13 107 9 is_stmt 1 view .LVU132
 112:MyProj.cpp    ****         }
 443              		.loc 13 112 27 is_stmt 0 view .LVU133
 444 0116 0021     		movs	r1, #0
 107:MyProj.cpp    ****         //we'll reset it to zero when it reaches sampleCounterMaxValue, then we can check for a val
 445              		.loc 13 107 39 view .LVU134
 446 0118 0133     		adds	r3, r3, #1
 107:MyProj.cpp    ****         //we'll reset it to zero when it reaches sampleCounterMaxValue, then we can check for a val
 447              		.loc 13 107 23 view .LVU135
 448 011a C8F80030 		str	r3, [r8]
 110:MyProj.cpp    ****         {
 449              		.loc 13 110 9 is_stmt 1 view .LVU136
 450 011e 9342     		cmp	r3, r2
 117:MyProj.cpp    ****         out[1][i] = mySample;
 451              		.loc 13 117 19 is_stmt 0 view .LVU137
 452 0120 D5E90023 		ldrd	r2, r3, [r5]
 112:MyProj.cpp    ****         }
 453              		.loc 13 112 27 view .LVU138
 454 0124 A8BF     		it	ge
 455 0126 C8F80010 		strge	r1, [r8]
 116:MyProj.cpp    ****         out[1][i] = mySample;
 456              		.loc 13 116 19 view .LVU139
 457 012a 02EB8402 		add	r2, r2, r4, lsl #2
 458              		.loc 13 117 19 view .LVU140
 459 012e 03EB8403 		add	r3, r3, r4, lsl #2
 460              	.LBE311:
  64:MyProj.cpp    ****     {
 461              		.loc 13 64 5 view .LVU141
 462 0132 0134     		adds	r4, r4, #1
 463              	.LVL22:
 464              	.LBB316:
 116:MyProj.cpp    ****         out[1][i] = mySample;
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 24


 465              		.loc 13 116 19 view .LVU142
 466 0134 82ED000A 		vstr.32	s0, [r2]
 467              		.loc 13 117 9 is_stmt 1 view .LVU143
 468              	.LBE316:
  64:MyProj.cpp    ****     {
 469              		.loc 13 64 26 is_stmt 0 view .LVU144
 470 0138 A642     		cmp	r6, r4
 471              	.LBB317:
 472              		.loc 13 117 19 view .LVU145
 473 013a 83ED000A 		vstr.32	s0, [r3]
 474              	.LBE317:
  64:MyProj.cpp    ****     {
 475              		.loc 13 64 5 is_stmt 1 view .LVU146
 476              	.LVL23:
  64:MyProj.cpp    ****     {
 477              		.loc 13 64 26 view .LVU147
 478 013e 93D1     		bne	.L14
 479              	.LVL24:
 480              	.L6:
  64:MyProj.cpp    ****     {
 481              		.loc 13 64 26 is_stmt 0 view .LVU148
 482              	.LBE310:
 118:MyProj.cpp    ****     }
 119:MyProj.cpp    **** }
 483              		.loc 13 119 1 view .LVU149
 484 0140 BDEC028B 		vldm	sp!, {d8}
 485              		.cfi_remember_state
 486              		.cfi_restore 80
 487              		.cfi_restore 81
 488              		.cfi_def_cfa_offset 32
 489 0144 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 490              	.LVL25:
 491              	.L21:
 492              		.cfi_restore_state
 493              		.loc 13 119 1 view .LVU150
 494 0148 1E4C     		ldr	r4, .L22+68
 495 014a 04F14008 		add	r8, r4, #64
 496              	.LVL26:
 497              	.L8:
 498              	.LBB318:
 499              	.LBB305:
  59:MyProj.cpp    ****             index = index + 1;
 500              		.loc 13 59 13 is_stmt 1 view .LVU151
 501              	.LBB306:
 502              	.LBI306:
  25:MyProj.cpp    **** {
 503              		.loc 13 25 7 view .LVU152
 504              	.LBB307:
  28:MyProj.cpp    **** }
 505              		.loc 13 28 5 view .LVU153
  28:MyProj.cpp    **** }
 506              		.loc 13 28 28 is_stmt 0 view .LVU154
 507 014e F7EE000A 		vmov.f32	s1, #1.0e+0
 508 0152 9FED190A 		vldr.32	s0, .L22+56
 509 0156 FFF7FEFF 		bl	_ZN5daisy6Random8GetFloatEff
 510              	.LVL27:
 511              	.LBE307:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 25


 512              	.LBE306:
  59:MyProj.cpp    ****             index = index + 1;
 513              		.loc 13 59 57 view .LVU155
 514 015a B3EE086B 		vmov.f64	d6, #2.4e+1
  59:MyProj.cpp    ****             index = index + 1;
 515              		.loc 13 59 46 view .LVU156
 516 015e B7EEC00A 		vcvt.f64.f32	d0, s0
  59:MyProj.cpp    ****             index = index + 1;
 517              		.loc 13 59 57 view .LVU157
 518 0162 9FED097B 		vldr.64	d7, .L22+8
 519 0166 A0EE067B 		vfma.f64	d7, d0, d6
  59:MyProj.cpp    ****             index = index + 1;
 520              		.loc 13 59 31 view .LVU158
 521 016a BDEEC77B 		vcvt.s32.f64	s14, d7
 522 016e 17EE103A 		vmov	r3, s14	@ int
 523 0172 44F8043F 		str	r3, [r4, #4]!
  60:MyProj.cpp    ****         }
 524              		.loc 13 60 13 is_stmt 1 view .LVU159
  56:MyProj.cpp    ****         {
 525              		.loc 13 56 9 view .LVU160
  56:MyProj.cpp    ****         {
 526              		.loc 13 56 22 view .LVU161
 527 0176 4445     		cmp	r4, r8
 528 0178 E9D1     		bne	.L8
 529 017a 70E7     		b	.L7
 530              	.L23:
 531 017c AFF30080 		.align	3
 532              	.L22:
 533 0180 EC51B81E 		.word	515396076
 534 0184 85EB0F40 		.word	1074785157
 535 0188 00000000 		.word	0
 536 018c 00004840 		.word	1078460416
 537 0190 00000000 		.word	hw
 538 0194 00000000 		.word	.LANCHOR1
 539 0198 00003E43 		.word	1128136704
 540 019c 00007042 		.word	1114636288
 541 01a0 00803B47 		.word	1195081728
 542 01a4 00000000 		.word	.LANCHOR0
 543 01a8 00000000 		.word	.LANCHOR4
 544 01ac 00000000 		.word	.LANCHOR5
 545 01b0 00000000 		.word	.LANCHOR6
 546 01b4 00004042 		.word	1111490560
 547 01b8 00000000 		.word	0
 548 01bc D4000000 		.word	hw+212
 549 01c0 28010000 		.word	hw+296
 550 01c4 FCFFFFFF 		.word	.LANCHOR2-4
 551 01c8 00000000 		.word	.LANCHOR3
 552 01cc 00000000 		.word	.LANCHOR2
 553              	.LBE305:
 554              	.LBE318:
 555              		.cfi_endproc
 556              	.LFE2542:
 558              		.section	.text.startup.main,"ax",%progbits
 559              		.align	1
 560              		.p2align 2,,3
 561              		.global	main
 562              		.syntax unified
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 26


 563              		.thumb
 564              		.thumb_func
 566              	main:
 567              	.LFB2543:
 120:MyProj.cpp    **** 
 121:MyProj.cpp    **** int main(void)
 122:MyProj.cpp    **** {
 568              		.loc 13 122 1 view -0
 569              		.cfi_startproc
 570              		@ Volatile: function does not return.
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 123:MyProj.cpp    ****     hw.Init();
 573              		.loc 13 123 5 view .LVU163
 122:MyProj.cpp    ****     hw.Init();
 574              		.loc 13 122 1 is_stmt 0 view .LVU164
 575 0000 08B5     		push	{r3, lr}
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 3, -8
 578              		.cfi_offset 14, -4
 579              		.loc 13 123 12 view .LVU165
 580 0002 0021     		movs	r1, #0
 581 0004 1248     		ldr	r0, .L27
 582 0006 FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
 583              	.LVL28:
 124:MyProj.cpp    ****     hw.SetAudioBlockSize(4); // number of samples handled per callback
 584              		.loc 13 124 5 is_stmt 1 view .LVU166
 585              		.loc 13 124 25 is_stmt 0 view .LVU167
 586 000a 0421     		movs	r1, #4
 587 000c 1048     		ldr	r0, .L27
 588 000e FFF7FEFF 		bl	_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
 589              	.LVL29:
 125:MyProj.cpp    ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 590              		.loc 13 125 5 is_stmt 1 view .LVU168
 591              		.loc 13 125 26 is_stmt 0 view .LVU169
 592 0012 0321     		movs	r1, #3
 593 0014 0E48     		ldr	r0, .L27
 594 0016 FFF7FEFF 		bl	_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 595              	.LVL30:
 126:MyProj.cpp    ****     Random::Init();
 596              		.loc 13 126 5 is_stmt 1 view .LVU170
 597              		.loc 13 126 17 is_stmt 0 view .LVU171
 598 001a FFF7FEFF 		bl	_ZN5daisy6Random4InitEv
 599              	.LVL31:
 127:MyProj.cpp    ****     hw.StartAdc();
 600              		.loc 13 127 5 is_stmt 1 view .LVU172
 601              		.loc 13 127 16 is_stmt 0 view .LVU173
 602 001e 0C48     		ldr	r0, .L27
 603 0020 FFF7FEFF 		bl	_ZN5daisy8DaisyPod8StartAdcEv
 604              	.LVL32:
 128:MyProj.cpp    ****     hw.StartAudio(AudioCallback);
 605              		.loc 13 128 5 is_stmt 1 view .LVU174
 606              		.loc 13 128 18 is_stmt 0 view .LVU175
 607 0024 0B49     		ldr	r1, .L27+4
 608 0026 0A48     		ldr	r0, .L27
 609 0028 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
 610              	.LVL33:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 27


 129:MyProj.cpp    ****     LEAF_init(&leaf, 48000, leafMemory, 65535, randomNumber);
 611              		.loc 13 129 5 is_stmt 1 view .LVU176
 612              		.loc 13 129 14 is_stmt 0 view .LVU177
 613 002c 0A49     		ldr	r1, .L27+8
 614 002e 0B48     		ldr	r0, .L27+12
 615 0030 4FF6FF72 		movw	r2, #65535
 616 0034 0A4B     		ldr	r3, .L27+16
 617 0036 9FED0B0A 		vldr.32	s0, .L27+20
 618 003a FFF7FEFF 		bl	LEAF_init
 619              	.LVL34:
 130:MyProj.cpp    ****     tCycle_init(&mySine, &leaf);
 620              		.loc 13 130 5 is_stmt 1 view .LVU178
 621              		.loc 13 130 16 is_stmt 0 view .LVU179
 622 003e 0749     		ldr	r1, .L27+12
 623 0040 0948     		ldr	r0, .L27+24
 624 0042 FFF7FEFF 		bl	tCycle_init
 625              	.LVL35:
 626              	.L25:
 131:MyProj.cpp    ****    
 132:MyProj.cpp    ****     //blink that light! this endless while loop will be interrupted by the audio callback when the 
 133:MyProj.cpp    ****     while(1) {
 627              		.loc 13 133 5 is_stmt 1 discriminator 1 view .LVU180
 134:MyProj.cpp    ****         //you need to call this here to use the RGB LEDs on the pod.
 135:MyProj.cpp    ****         hw.UpdateLeds();
 628              		.loc 13 135 9 discriminator 1 view .LVU181
 629              		.loc 13 135 22 is_stmt 0 discriminator 1 view .LVU182
 630 0046 0248     		ldr	r0, .L27
 631 0048 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
 632              	.LVL36:
 133:MyProj.cpp    ****         //you need to call this here to use the RGB LEDs on the pod.
 633              		.loc 13 133 5 is_stmt 1 discriminator 1 view .LVU183
 634 004c FBE7     		b	.L25
 635              	.L28:
 636 004e 00BF     		.align	2
 637              	.L27:
 638 0050 00000000 		.word	hw
 639 0054 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 640 0058 00000000 		.word	leafMemory
 641 005c 00000000 		.word	.LANCHOR7
 642 0060 00000000 		.word	_Z12randomNumberv
 643 0064 00803B47 		.word	1195081728
 644 0068 00000000 		.word	.LANCHOR6
 645              		.cfi_endproc
 646              	.LFE2543:
 648              		.section	.text.startup._GLOBAL__sub_I_leaf,"ax",%progbits
 649              		.align	1
 650              		.p2align 2,,3
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 655              	_GLOBAL__sub_I_leaf:
 656              	.LFB2571:
 136:MyProj.cpp    ****     }
 137:MyProj.cpp    **** }
 657              		.loc 13 137 1 view -0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 28


 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661              	.LBB384:
 662              	.LBI384:
 663              		.loc 13 137 1 view .LVU185
 664              	.LVL37:
 665              	.LBB385:
 666              	.LBB386:
 667              	.LBI386:
  35:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
 668              		.loc 1 35 5 view .LVU186
 669              	.LBB387:
 670              	.LBB388:
 671              	.LBI388:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 672              		.loc 8 21 5 view .LVU187
 673              	.LBB389:
 674              	.LBB390:
 675              	.LBI390:
 676              		.file 14 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 29


  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 30


  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 31


 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 677              		.loc 14 166 5 view .LVU188
 678              	.LBB391:
 679              	.LBB392:
 680              		.loc 14 166 34 is_stmt 0 view .LVU189
 681 0000 1348     		ldr	r0, .L31
 682 0002 0022     		movs	r2, #0
 683              	.LBE392:
 684              	.LBE391:
 685              	.LBE390:
 686              	.LBE389:
 687              	.LBE388:
 688              	.LBB408:
 689              	.LBB409:
 690              	.LBB410:
 691              	.LBB411:
 692              	.LBB412:
 693              	.LBB413:
 694              	.LBB414:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 695              		.loc 2 37 20 view .LVU190
 696 0004 1349     		ldr	r1, .L31+4
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 697              		.loc 2 36 20 view .LVU191
 698 0006 00F51043 		add	r3, r0, #36864
  38:../../libDaisy//src/hid/midi.h ****         }
 699              		.loc 2 38 20 view .LVU192
 700 000a B1F804C0 		ldrh	ip, [r1, #4]
 701              	.LBE414:
 702              	.LBE413:
 703              	.LBE412:
 704              	.LBE411:
 705              	.LBE410:
 706              	.LBE409:
 707              	.LBE408:
 708              	.LBE387:
 709              	.LBE386:
 710              	.LBE385:
 711              	.LBE384:
 712              		.loc 13 137 1 view .LVU193
 713 000e 00B5     		push	{lr}
 714              		.cfi_def_cfa_offset 4
 715              		.cfi_offset 14, -4
 716              	.LBB469:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 32


 717              	.LBB467:
 718              	.LBB466:
 719              	.LBB465:
 720              	.LBB443:
 721              	.LBB440:
 722              	.LBB437:
 723              	.LBB424:
 724              	.LBB421:
 725              	.LBB418:
 726              	.LBB415:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 727              		.loc 2 37 20 view .LVU194
 728 0010 B1F800E0 		ldrh	lr, [r1]
 729              	.LBE415:
 730              	.LBE418:
 731              	.LBE421:
 732              	.LBE424:
 733              	.LBE437:
 734              	.LBE440:
 735              	.LBE443:
 736              	.LBB444:
 737              	.LBB406:
 738              	.LBB395:
 739              	.LBB394:
 740              	.LBB393:
 741              		.loc 14 166 34 view .LVU195
 742 0014 0260     		str	r2, [r0]
 743              	.LVL38:
 744              		.loc 14 166 34 view .LVU196
 745              	.LBE393:
 746              	.LBE394:
 747              	.LBE395:
 748              	.LBB396:
 749              	.LBI396:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 750              		.loc 12 95 5 is_stmt 1 view .LVU197
 751              	.LBE396:
 752              	.LBE406:
 753              	.LBE444:
 754              	.LBB445:
 755              	.LBB441:
 756              	.LBB438:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 757              		.loc 2 84 19 is_stmt 0 view .LVU198
 758 0016 1049     		ldr	r1, .L31+8
 759              	.LBE438:
 760              	.LBE441:
 761              	.LBE445:
 762              	.LBB446:
 763              	.LBB407:
 764              	.LBB399:
 765              	.LBB397:
 766              	.LBB398:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 767              		.loc 12 95 35 view .LVU199
 768 0018 4261     		str	r2, [r0, #20]
 769              	.LVL39:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 33


  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 770              		.loc 12 95 35 view .LVU200
 771              	.LBE398:
 772              	.LBE397:
 773              	.LBE399:
 774              	.LBB400:
 775              	.LBI400:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 776              		.loc 11 92 5 is_stmt 1 view .LVU201
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 777              		.loc 11 92 5 is_stmt 0 view .LVU202
 778              	.LBE400:
 779              	.LBB401:
 780              	.LBI401:
 781              		.file 15 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 34


  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 782              		.loc 15 84 5 is_stmt 1 view .LVU203
 783              	.LBB402:
 784              	.LBB403:
 785              		.loc 15 84 33 is_stmt 0 view .LVU204
 786 001a 0262     		str	r2, [r0, #32]
 787              	.LVL40:
 788              		.loc 15 84 33 view .LVU205
 789              	.LBE403:
 790              	.LBE402:
 791              	.LBE401:
 792              	.LBB404:
 793              	.LBI404:
  40:../../libDaisy//src/hid/usb.h **** 
 794              		.loc 10 40 5 is_stmt 1 view .LVU206
  40:../../libDaisy//src/hid/usb.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 35


 795              		.loc 10 40 5 is_stmt 0 view .LVU207
 796              	.LBE404:
 797              	.LBB405:
 798              	.LBI405:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 799              		.loc 9 77 5 is_stmt 1 view .LVU208
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 800              		.loc 9 77 5 is_stmt 0 view .LVU209
 801              	.LBE405:
 802              	.LBE407:
 803              	.LBE446:
 804              	.LBB447:
 805              	.LBI447:
  20:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 806              		.loc 7 20 5 is_stmt 1 view .LVU210
 807              	.LBB448:
 808              	.LBB449:
 809              	.LBI449:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 810              		.loc 5 41 5 view .LVU211
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 811              		.loc 5 41 5 is_stmt 0 view .LVU212
 812              	.LBE449:
 813              	.LBE448:
 814              	.LBE447:
 815              	.LBB450:
 816              	.LBI450:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 817              		.loc 6 21 5 is_stmt 1 view .LVU213
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 818              		.loc 6 21 5 is_stmt 0 view .LVU214
 819              	.LBE450:
 820              	.LBB451:
 821              	.LBI451:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 822              		.loc 6 21 5 is_stmt 1 view .LVU215
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 823              		.loc 6 21 5 is_stmt 0 view .LVU216
 824              	.LBE451:
 825              	.LBB452:
 826              	.LBI452:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 827              		.loc 5 41 5 is_stmt 1 view .LVU217
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 828              		.loc 5 41 5 is_stmt 0 view .LVU218
 829              	.LBE452:
 830              	.LBB453:
 831              	.LBI453:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 832              		.loc 5 41 5 is_stmt 1 view .LVU219
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 833              		.loc 5 41 5 is_stmt 0 view .LVU220
 834              	.LBE453:
 835              	.LBB454:
 836              	.LBI454:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 837              		.loc 3 17 5 is_stmt 1 view .LVU221
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 36


 838              	.LBB455:
 839              	.LBB456:
 840              	.LBI456:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 841              		.loc 4 24 5 view .LVU222
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 842              		.loc 4 24 5 is_stmt 0 view .LVU223
 843              	.LBE456:
 844              	.LBB457:
 845              	.LBI457:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 846              		.loc 4 24 5 is_stmt 1 view .LVU224
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 847              		.loc 4 24 5 is_stmt 0 view .LVU225
 848              	.LBE457:
 849              	.LBB458:
 850              	.LBI458:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 851              		.loc 4 24 5 is_stmt 1 view .LVU226
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 852              		.loc 4 24 5 is_stmt 0 view .LVU227
 853              	.LBE458:
 854              	.LBE455:
 855              	.LBE454:
 856              	.LBB459:
 857              	.LBI459:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 858              		.loc 3 17 5 is_stmt 1 view .LVU228
 859              	.LBB460:
 860              	.LBB461:
 861              	.LBI461:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 862              		.loc 4 24 5 view .LVU229
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 863              		.loc 4 24 5 is_stmt 0 view .LVU230
 864              	.LBE461:
 865              	.LBB462:
 866              	.LBI462:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 867              		.loc 4 24 5 is_stmt 1 view .LVU231
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 868              		.loc 4 24 5 is_stmt 0 view .LVU232
 869              	.LBE462:
 870              	.LBB463:
 871              	.LBI463:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 872              		.loc 4 24 5 is_stmt 1 view .LVU233
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 873              		.loc 4 24 5 is_stmt 0 view .LVU234
 874              	.LBE463:
 875              	.LBE460:
 876              	.LBE459:
 877              	.LBB464:
 878              	.LBI408:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 879              		.loc 2 84 5 is_stmt 1 view .LVU235
 880              	.LBB442:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 37


 881              	.LBB439:
 882              	.LBB425:
 883              	.LBI425:
 884              		.file 16 "../../libDaisy//src/per/uart.h"
   1:../../libDaisy//src/per/uart.h **** /* 
   2:../../libDaisy//src/per/uart.h **** TODO
   3:../../libDaisy//src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libDaisy//src/per/uart.h **** - Transmit function improvements.
   5:../../libDaisy//src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libDaisy//src/per/uart.h **** */
   7:../../libDaisy//src/per/uart.h **** 
   8:../../libDaisy//src/per/uart.h **** #pragma once
   9:../../libDaisy//src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libDaisy//src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libDaisy//src/per/uart.h **** #include "daisy_core.h"
  12:../../libDaisy//src/per/uart.h **** 
  13:../../libDaisy//src/per/uart.h **** 
  14:../../libDaisy//src/per/uart.h **** namespace daisy
  15:../../libDaisy//src/per/uart.h **** {
  16:../../libDaisy//src/per/uart.h **** /** @addtogroup serial
  17:../../libDaisy//src/per/uart.h ****     @{
  18:../../libDaisy//src/per/uart.h ****     */
  19:../../libDaisy//src/per/uart.h **** 
  20:../../libDaisy//src/per/uart.h **** /** 
  21:../../libDaisy//src/per/uart.h ****     Uart Peripheral
  22:../../libDaisy//src/per/uart.h ****     @author shensley
  23:../../libDaisy//src/per/uart.h ****     @date March 2020
  24:../../libDaisy//src/per/uart.h ****     */
  25:../../libDaisy//src/per/uart.h **** class UartHandler
  26:../../libDaisy//src/per/uart.h **** {
  27:../../libDaisy//src/per/uart.h ****   public:
  28:../../libDaisy//src/per/uart.h ****     struct Config
  29:../../libDaisy//src/per/uart.h ****     {
  30:../../libDaisy//src/per/uart.h ****         enum class Peripheral
  31:../../libDaisy//src/per/uart.h ****         {
  32:../../libDaisy//src/per/uart.h ****             USART_1,
  33:../../libDaisy//src/per/uart.h ****             USART_2,
  34:../../libDaisy//src/per/uart.h ****             USART_3,
  35:../../libDaisy//src/per/uart.h ****             UART_4,
  36:../../libDaisy//src/per/uart.h ****             UART_5,
  37:../../libDaisy//src/per/uart.h ****             USART_6,
  38:../../libDaisy//src/per/uart.h ****             UART_7,
  39:../../libDaisy//src/per/uart.h ****             UART_8,
  40:../../libDaisy//src/per/uart.h ****             LPUART_1,
  41:../../libDaisy//src/per/uart.h ****         };
  42:../../libDaisy//src/per/uart.h **** 
  43:../../libDaisy//src/per/uart.h ****         enum class StopBits
  44:../../libDaisy//src/per/uart.h ****         {
  45:../../libDaisy//src/per/uart.h ****             BITS_0_5,
  46:../../libDaisy//src/per/uart.h ****             BITS_1,
  47:../../libDaisy//src/per/uart.h ****             BITS_1_5,
  48:../../libDaisy//src/per/uart.h ****             BITS_2,
  49:../../libDaisy//src/per/uart.h ****         };
  50:../../libDaisy//src/per/uart.h **** 
  51:../../libDaisy//src/per/uart.h ****         enum class Parity
  52:../../libDaisy//src/per/uart.h ****         {
  53:../../libDaisy//src/per/uart.h ****             NONE,
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 38


  54:../../libDaisy//src/per/uart.h ****             EVEN,
  55:../../libDaisy//src/per/uart.h ****             ODD,
  56:../../libDaisy//src/per/uart.h ****         };
  57:../../libDaisy//src/per/uart.h **** 
  58:../../libDaisy//src/per/uart.h ****         enum class Mode
  59:../../libDaisy//src/per/uart.h ****         {
  60:../../libDaisy//src/per/uart.h ****             RX,
  61:../../libDaisy//src/per/uart.h ****             TX,
  62:../../libDaisy//src/per/uart.h ****             TX_RX,
  63:../../libDaisy//src/per/uart.h ****         };
  64:../../libDaisy//src/per/uart.h **** 
  65:../../libDaisy//src/per/uart.h ****         enum class WordLength
  66:../../libDaisy//src/per/uart.h ****         {
  67:../../libDaisy//src/per/uart.h ****             BITS_7,
  68:../../libDaisy//src/per/uart.h ****             BITS_8,
  69:../../libDaisy//src/per/uart.h ****             BITS_9,
  70:../../libDaisy//src/per/uart.h ****         };
  71:../../libDaisy//src/per/uart.h **** 
  72:../../libDaisy//src/per/uart.h ****         struct
  73:../../libDaisy//src/per/uart.h ****         {
  74:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libDaisy//src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libDaisy//src/per/uart.h **** 
  78:../../libDaisy//src/per/uart.h ****         Config()
  79:../../libDaisy//src/per/uart.h ****         {
  80:../../libDaisy//src/per/uart.h ****             // user must init periph, pin_config, and mode
  81:../../libDaisy//src/per/uart.h ****             stopbits   = StopBits::BITS_1;
  82:../../libDaisy//src/per/uart.h ****             parity     = Parity::NONE;
  83:../../libDaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
  84:../../libDaisy//src/per/uart.h ****             baudrate   = 4800;
  85:../../libDaisy//src/per/uart.h ****             // baudrate   = 31250;
  86:../../libDaisy//src/per/uart.h ****         }
  87:../../libDaisy//src/per/uart.h **** 
  88:../../libDaisy//src/per/uart.h ****         Peripheral periph;
  89:../../libDaisy//src/per/uart.h ****         StopBits   stopbits;
  90:../../libDaisy//src/per/uart.h ****         Parity     parity;
  91:../../libDaisy//src/per/uart.h ****         Mode       mode;
  92:../../libDaisy//src/per/uart.h ****         WordLength wordlength;
  93:../../libDaisy//src/per/uart.h ****         uint32_t   baudrate;
  94:../../libDaisy//src/per/uart.h ****     };
  95:../../libDaisy//src/per/uart.h **** 
  96:../../libDaisy//src/per/uart.h **** 
  97:../../libDaisy//src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 885              		.loc 16 97 5 view .LVU236
 886              	.LBB426:
 887              	.LBB427:
 888              		.loc 16 97 35 is_stmt 0 view .LVU237
 889 001c C0F87C21 		str	r2, [r0, #380]
 890              	.LVL41:
 891              		.loc 16 97 35 view .LVU238
 892              	.LBE427:
 893              	.LBE426:
 894              	.LBE425:
 895              	.LBB428:
 896              	.LBI428:
 897              		.file 17 "../../libDaisy//src/util/ringbuffer.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 39


   1:../../libDaisy//src/util/ringbuffer.h **** #pragma once
   2:../../libDaisy//src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libDaisy//src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libDaisy//src/util/ringbuffer.h **** 
   5:../../libDaisy//src/util/ringbuffer.h **** #include <algorithm>
   6:../../libDaisy//src/util/ringbuffer.h **** 
   7:../../libDaisy//src/util/ringbuffer.h **** namespace daisy
   8:../../libDaisy//src/util/ringbuffer.h **** {
   9:../../libDaisy//src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libDaisy//src/util/ringbuffer.h ****     @{
  11:../../libDaisy//src/util/ringbuffer.h **** */
  12:../../libDaisy//src/util/ringbuffer.h **** 
  13:../../libDaisy//src/util/ringbuffer.h **** /**
  14:../../libDaisy//src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libDaisy//src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libDaisy//src/util/ringbuffer.h **** */
  17:../../libDaisy//src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libDaisy//src/util/ringbuffer.h **** class RingBuffer
  19:../../libDaisy//src/util/ringbuffer.h **** {
  20:../../libDaisy//src/util/ringbuffer.h ****   public:
  21:../../libDaisy//src/util/ringbuffer.h ****     RingBuffer() {}
 898              		.loc 17 21 5 is_stmt 1 view .LVU239
 899              		.loc 17 21 5 is_stmt 0 view .LVU240
 900              	.LBE428:
 901              	.LBB429:
 902              	.LBI411:
  86:../../libDaisy//src/hid/midi.h **** 
  87:../../libDaisy//src/hid/midi.h ****     struct Config
 903              		.loc 2 87 12 is_stmt 1 view .LVU241
 904              	.LBB422:
 905              	.LBI412:
  34:../../libDaisy//src/hid/midi.h ****         {
 906              		.loc 2 34 9 view .LVU242
 907              	.LBB419:
 908              	.LBB416:
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 909              		.loc 2 36 13 view .LVU243
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 910              		.loc 2 36 20 is_stmt 0 view .LVU244
 911 0020 C3F82422 		str	r2, [r3, #548]
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 912              		.loc 2 37 13 is_stmt 1 view .LVU245
  38:../../libDaisy//src/hid/midi.h ****         }
 913              		.loc 2 38 20 is_stmt 0 view .LVU246
 914 0024 A3F82AC2 		strh	ip, [r3, #554]	@ movhi
 915              	.LBE416:
 916              	.LBE419:
 917              	.LBE422:
 918              	.LBE429:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 919              		.loc 2 84 19 view .LVU247
 920 0028 4FF0070C 		mov	ip, #7
 921              	.LBB430:
 922              	.LBB431:
 923              	.LBB432:
 924              	.LBB433:
 925              		.loc 16 97 35 view .LVU248
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 40


 926 002c C3F82C22 		str	r2, [r3, #556]
 927              	.LBE433:
 928              	.LBE432:
 929              	.LBE431:
 930              	.LBE430:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 931              		.loc 2 84 19 view .LVU249
 932 0030 4FF60F02 		movw	r2, #63503
 933 0034 C3F83012 		str	r1, [r3, #560]
 934 0038 A3F83422 		strh	r2, [r3, #564]	@ movhi
 935 003c 83F836C2 		strb	ip, [r3, #566]
 936              	.LBB435:
 937              	.LBB423:
 938              	.LBB420:
 939              	.LBB417:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 940              		.loc 2 37 20 view .LVU250
 941 0040 A3F828E2 		strh	lr, [r3, #552]	@ movhi
  38:../../libDaisy//src/hid/midi.h ****         }
 942              		.loc 2 38 13 is_stmt 1 view .LVU251
 943              	.LVL42:
  38:../../libDaisy//src/hid/midi.h ****         }
 944              		.loc 2 38 13 is_stmt 0 view .LVU252
 945              	.LBE417:
 946              	.LBE420:
 947              	.LBE423:
 948              	.LBE435:
 949              	.LBB436:
 950              	.LBI430:
  25:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
 951              		.loc 2 25 5 is_stmt 1 view .LVU253
 952              	.LBB434:
 953              	.LBI431:
 954              		.loc 16 97 5 view .LVU254
 955              		.loc 16 97 5 is_stmt 0 view .LVU255
 956              	.LBE434:
 957              	.LBE436:
 958              	.LBE439:
 959              	.LBE442:
 960              	.LBE464:
 961              	.LBE465:
 962              	.LBE466:
   6:MyProj.cpp    **** tCycle mySine;
 963              		.loc 13 6 10 view .LVU256
 964 0044 054A     		ldr	r2, .L31+12
 965 0046 0649     		ldr	r1, .L31+16
 966              	.LBE467:
 967              	.LBE469:
 968              		.loc 13 137 1 view .LVU257
 969 0048 5DF804EB 		ldr	lr, [sp], #4
 970              		.cfi_restore 14
 971              		.cfi_def_cfa_offset 0
 972              	.LBB470:
 973              	.LBB468:
   6:MyProj.cpp    **** tCycle mySine;
 974              		.loc 13 6 10 view .LVU258
 975 004c FFF7FEBF 		b	__aeabi_atexit
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 41


 976              	.LVL43:
 977              	.L32:
 978              		.align	2
 979              	.L31:
 980 0050 00000000 		.word	hw
 981 0054 00000000 		.word	.LANCHOR8
 982 0058 80707FF0 		.word	-260083584
 983 005c 00000000 		.word	__dso_handle
 984 0060 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 985              	.LBE468:
 986              	.LBE470:
 987              		.cfi_endproc
 988              	.LFE2571:
 990              		.section	.init_array,"aw",%init_array
 991              		.align	2
 992 0000 00000000 		.word	_GLOBAL__sub_I_leaf(target1)
 993              		.global	whichNoteInSequence
 994              		.global	mySequence
 995              		.global	myTempo
 996              		.global	sampleCounterMaxValue
 997              		.global	sampleCounter
 998              		.global	myFreq
 999              		.global	mySine
 1000              		.global	hw
 1001              		.global	leafMemory
 1002              		.global	leaf
 1003              		.section	.rodata
 1004              		.align	2
 1005              		.set	.LANCHOR8,. + 0
 1006              	.LC0:
 1007 0000 01       		.byte	1
 1008 0001 07       		.byte	7
 1009 0002 0000     		.space	2
 1010              	.LC1:
 1011 0004 01       		.byte	1
 1012 0005 06       		.byte	6
 1013              		.section	.bss.hw,"aw",%nobits
 1014              		.align	2
 1017              	hw:
 1018 0000 00000000 		.space	37432
 1018      00000000 
 1018      00000000 
 1018      00000000 
 1018      00000000 
 1019              		.section	.bss.leaf,"aw",%nobits
 1020              		.align	2
 1021              		.set	.LANCHOR7,. + 0
 1024              	leaf:
 1025 0000 00000000 		.space	80
 1025      00000000 
 1025      00000000 
 1025      00000000 
 1025      00000000 
 1026              		.section	.bss.leafMemory,"aw",%nobits
 1027              		.align	2
 1030              	leafMemory:
 1031 0000 00000000 		.space	65535
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 42


 1031      00000000 
 1031      00000000 
 1031      00000000 
 1031      00000000 
 1032              		.section	.bss.mySine,"aw",%nobits
 1033              		.align	2
 1034              		.set	.LANCHOR6,. + 0
 1037              	mySine:
 1038 0000 00000000 		.space	4
 1039              		.section	.bss.myTempo,"aw",%nobits
 1040              		.align	2
 1041              		.set	.LANCHOR0,. + 0
 1044              	myTempo:
 1045 0000 00000000 		.space	4
 1046              		.section	.bss.sampleCounter,"aw",%nobits
 1047              		.align	2
 1048              		.set	.LANCHOR3,. + 0
 1051              	sampleCounter:
 1052 0000 00000000 		.space	4
 1053              		.section	.bss.whichNoteInSequence,"aw",%nobits
 1054              		.align	2
 1055              		.set	.LANCHOR4,. + 0
 1058              	whichNoteInSequence:
 1059 0000 00000000 		.space	4
 1060              		.section	.data.myFreq,"aw"
 1061              		.align	2
 1062              		.set	.LANCHOR5,. + 0
 1065              	myFreq:
 1066 0000 00005C43 		.word	1130102784
 1067              		.section	.data.mySequence,"aw"
 1068              		.align	2
 1069              		.set	.LANCHOR2,. + 0
 1072              	mySequence:
 1073 0000 3C000000 		.word	60
 1074 0004 3F000000 		.word	63
 1075 0008 3E000000 		.word	62
 1076 000c 3C000000 		.word	60
 1077 0010 43000000 		.word	67
 1078 0014 41000000 		.word	65
 1079 0018 43000000 		.word	67
 1080 001c 3C000000 		.word	60
 1081 0020 3F000000 		.word	63
 1082 0024 3E000000 		.word	62
 1083 0028 3C000000 		.word	60
 1084 002c 43000000 		.word	67
 1085 0030 44000000 		.word	68
 1086 0034 43000000 		.word	67
 1087 0038 48000000 		.word	72
 1088 003c 30000000 		.word	48
 1089              		.section	.data.sampleCounterMaxValue,"aw"
 1090              		.align	2
 1091              		.set	.LANCHOR1,. + 0
 1094              	sampleCounterMaxValue:
 1095 0000 80BB0000 		.word	48000
 1096              		.text
 1097              	.Letext0:
 1098              		.file 18 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 43


 1099              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 1100              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 1101              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 1102              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 1103              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 1104              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 1105              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 1106              		.file 26 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 1107              		.file 27 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 1108              		.file 28 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 1109              		.file 29 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 1110              		.file 30 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 1111              		.file 31 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 1112              		.file 32 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 1113              		.file 33 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 1114              		.file 34 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 1115              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 1116              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 1117              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 1118              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 1119              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 1120              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 1121              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 1122              		.file 42 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 1123              		.file 43 "../../libDaisy//src/daisy_core.h"
 1124              		.file 44 "../../libDaisy//src/per/tim.h"
 1125              		.file 45 "../../libDaisy//src/per/sai.h"
 1126              		.file 46 "../../libDaisy//src/hid/MidiEvent.h"
 1127              		.file 47 "../../libDaisy//src/per/rng.h"
 1128              		.file 48 "../../libDaisy//src/util/wav_format.h"
 1129              		.file 49 "../../libDaisy//src/util/color.h"
 1130              		.file 50 "../../libDaisy//src/dev/max11300.h"
 1131              		.file 51 "../../libDaisy//src/per/gpio.h"
 1132              		.file 52 "../../libDaisy//src/dev/sdram.h"
 1133              		.file 53 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 1134              		.file 54 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 1135              		.file 55 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 1136              		.file 56 "../../../LEAF/leaf/./Inc/leaf-mempool.h"
 1137              		.file 57 "../../../LEAF/leaf/./Inc/leaf-global.h"
 1138              		.file 58 "../../../LEAF/leaf/./Inc/leaf-oscillators.h"
 1139              		.file 59 "../../../LEAF/leaf/leaf.h"
 1140              		.file 60 "../../../LEAF/leaf/./Inc/leaf-math.h"
 1141              		.file 61 "<built-in>"
 1142              		.file 62 "../../libDaisy//src/dev/sr_595.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 44


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MyProj.cpp
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:19     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD2Ev
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD1Ev
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:154    .text._Z12randomNumberv:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:161    .text._Z12randomNumberv:0000000000000000 _Z12randomNumberv
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:178    .text._Z12randomNumberv:000000000000000c $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:183    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:190    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:533    .text._Z13AudioCallbackPKPKfPPfj:0000000000000180 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1017   .bss.hw:0000000000000000 hw
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:559    .text.startup.main:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:566    .text.startup.main:0000000000000000 main
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:638    .text.startup.main:0000000000000050 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1030   .bss.leafMemory:0000000000000000 leafMemory
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:649    .text.startup._GLOBAL__sub_I_leaf:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:655    .text.startup._GLOBAL__sub_I_leaf:0000000000000000 _GLOBAL__sub_I_leaf
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:980    .text.startup._GLOBAL__sub_I_leaf:0000000000000050 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:991    .init_array:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1058   .bss.whichNoteInSequence:0000000000000000 whichNoteInSequence
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1072   .data.mySequence:0000000000000000 mySequence
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1044   .bss.myTempo:0000000000000000 myTempo
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1094   .data.sampleCounterMaxValue:0000000000000000 sampleCounterMaxValue
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1051   .bss.sampleCounter:0000000000000000 sampleCounter
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1065   .data.myFreq:0000000000000000 myFreq
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1037   .bss.mySine:0000000000000000 mySine
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1024   .bss.leaf:0000000000000000 leaf
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1004   .rodata:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1014   .bss.hw:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1020   .bss.leaf:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1027   .bss.leafMemory:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1033   .bss.mySine:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1040   .bss.myTempo:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1047   .bss.sampleCounter:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1054   .bss.whichNoteInSequence:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1061   .data.myFreq:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1068   .data.mySequence:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s:1090   .data.sampleCounterMaxValue:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy8DaisyPodD5Ev

UNDEFINED SYMBOLS
_ZN5daisy6Random8GetFloatEff
_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
mtof
tCycle_setFreq
_ZN5daisy6RgbLed3SetEfff
tCycle_tick
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy6Random4InitEv
_ZN5daisy8DaisyPod8StartAdcEv
_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
LEAF_init
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccuWvYDM.s 			page 45


tCycle_init
_ZN5daisy8DaisyPod10UpdateLedsEv
__aeabi_atexit
__dso_handle
