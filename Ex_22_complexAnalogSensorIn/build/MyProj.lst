ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"MyProj.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  19              		.align	1
  20              		.p2align 2,,3
  21              		.weak	_ZN5daisy8DaisyPodD2Ev
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN5daisy8DaisyPodD2Ev:
  27              	.LVL0:
  28              	.LFB2538:
  29              		.file 1 "../../libDaisy//src/daisy_pod.h"
   1:../../libDaisy//src/daisy_pod.h **** #pragma once
   2:../../libDaisy//src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../../libDaisy//src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../../libDaisy//src/daisy_pod.h **** 
   5:../../libDaisy//src/daisy_pod.h **** #include "daisy_seed.h"
   6:../../libDaisy//src/daisy_pod.h **** 
   7:../../libDaisy//src/daisy_pod.h **** namespace daisy
   8:../../libDaisy//src/daisy_pod.h **** {
   9:../../libDaisy//src/daisy_pod.h **** /**
  10:../../libDaisy//src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libDaisy//src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libDaisy//src/daisy_pod.h ****     @author Stephen Hensley
  13:../../libDaisy//src/daisy_pod.h ****     @date November 2019
  14:../../libDaisy//src/daisy_pod.h ****     @ingroup boards
  15:../../libDaisy//src/daisy_pod.h **** */
  16:../../libDaisy//src/daisy_pod.h **** class DaisyPod
  17:../../libDaisy//src/daisy_pod.h **** {
  18:../../libDaisy//src/daisy_pod.h ****   public:
  19:../../libDaisy//src/daisy_pod.h ****     /** Switches */
  20:../../libDaisy//src/daisy_pod.h ****     enum Sw
  21:../../libDaisy//src/daisy_pod.h ****     {
  22:../../libDaisy//src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../../libDaisy//src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../../libDaisy//src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../../libDaisy//src/daisy_pod.h ****     };
  26:../../libDaisy//src/daisy_pod.h **** 
  27:../../libDaisy//src/daisy_pod.h ****     /** Knobs */
  28:../../libDaisy//src/daisy_pod.h ****     enum Knob
  29:../../libDaisy//src/daisy_pod.h ****     {
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 2


  30:../../libDaisy//src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../../libDaisy//src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../../libDaisy//src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../../libDaisy//src/daisy_pod.h ****     };
  34:../../libDaisy//src/daisy_pod.h **** 
  35:../../libDaisy//src/daisy_pod.h ****     DaisyPod() {}
  36:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
  30              		.loc 1 36 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB270:
  36              	.LBI270:
  37              		.file 2 "../../libDaisy//src/hid/midi.h"
   1:../../libDaisy//src/hid/midi.h **** #pragma once
   2:../../libDaisy//src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libDaisy//src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libDaisy//src/hid/midi.h **** 
   5:../../libDaisy//src/hid/midi.h **** // TODO: make this adjustable
   6:../../libDaisy//src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libDaisy//src/hid/midi.h **** 
   8:../../libDaisy//src/hid/midi.h **** #include <stdint.h>
   9:../../libDaisy//src/hid/midi.h **** #include <stdlib.h>
  10:../../libDaisy//src/hid/midi.h **** #include "per/uart.h"
  11:../../libDaisy//src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libDaisy//src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libDaisy//src/hid/midi.h **** #include "hid/usb_midi.h"
  14:../../libDaisy//src/hid/midi.h **** #include "sys/system.h"
  15:../../libDaisy//src/hid/midi.h **** 
  16:../../libDaisy//src/hid/midi.h **** namespace daisy
  17:../../libDaisy//src/hid/midi.h **** {
  18:../../libDaisy//src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART 
  19:../../libDaisy//src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../../libDaisy//src/hid/midi.h ****  *  @ingroup midi
  21:../../libDaisy//src/hid/midi.h **** */
  22:../../libDaisy//src/hid/midi.h **** class MidiUartTransport
  23:../../libDaisy//src/hid/midi.h **** {
  24:../../libDaisy//src/hid/midi.h ****   public:
  25:../../libDaisy//src/hid/midi.h ****     MidiUartTransport() {}
  26:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
  27:../../libDaisy//src/hid/midi.h **** 
  28:../../libDaisy//src/hid/midi.h ****     struct Config
  29:../../libDaisy//src/hid/midi.h ****     {
  30:../../libDaisy//src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  31:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    rx;
  32:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    tx;
  33:../../libDaisy//src/hid/midi.h **** 
  34:../../libDaisy//src/hid/midi.h ****         Config()
  35:../../libDaisy//src/hid/midi.h ****         {
  36:../../libDaisy//src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  37:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  38:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  39:../../libDaisy//src/hid/midi.h ****         }
  40:../../libDaisy//src/hid/midi.h ****     };
  41:../../libDaisy//src/hid/midi.h **** 
  42:../../libDaisy//src/hid/midi.h ****     inline void Init(Config config)
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 3


  43:../../libDaisy//src/hid/midi.h ****     {
  44:../../libDaisy//src/hid/midi.h ****         UartHandler::Config uart_config;
  45:../../libDaisy//src/hid/midi.h **** 
  46:../../libDaisy//src/hid/midi.h ****         //defaults
  47:../../libDaisy//src/hid/midi.h ****         uart_config.baudrate   = 31250;
  48:../../libDaisy//src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  49:../../libDaisy//src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  50:../../libDaisy//src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  51:../../libDaisy//src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  52:../../libDaisy//src/hid/midi.h **** 
  53:../../libDaisy//src/hid/midi.h ****         //user settings
  54:../../libDaisy//src/hid/midi.h ****         uart_config.periph        = config.periph;
  55:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  56:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  57:../../libDaisy//src/hid/midi.h **** 
  58:../../libDaisy//src/hid/midi.h ****         uart_.Init(uart_config);
  59:../../libDaisy//src/hid/midi.h ****     }
  60:../../libDaisy//src/hid/midi.h **** 
  61:../../libDaisy//src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  62:../../libDaisy//src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  63:../../libDaisy//src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  64:../../libDaisy//src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  65:../../libDaisy//src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  66:../../libDaisy//src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  67:../../libDaisy//src/hid/midi.h **** 
  68:../../libDaisy//src/hid/midi.h ****   private:
  69:../../libDaisy//src/hid/midi.h ****     UartHandler uart_;
  70:../../libDaisy//src/hid/midi.h **** };
  71:../../libDaisy//src/hid/midi.h **** 
  72:../../libDaisy//src/hid/midi.h **** /** 
  73:../../libDaisy//src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  74:../../libDaisy//src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  75:../../libDaisy//src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  76:../../libDaisy//src/hid/midi.h ****     @author shensley
  77:../../libDaisy//src/hid/midi.h ****     @date March 2020
  78:../../libDaisy//src/hid/midi.h ****     @ingroup midi
  79:../../libDaisy//src/hid/midi.h **** */
  80:../../libDaisy//src/hid/midi.h **** template <typename Transport>
  81:../../libDaisy//src/hid/midi.h **** class MidiHandler
  82:../../libDaisy//src/hid/midi.h **** {
  83:../../libDaisy//src/hid/midi.h ****   public:
  84:../../libDaisy//src/hid/midi.h ****     MidiHandler() {}
  85:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
  38              		.loc 2 85 5 view .LVU1
  39              	.LBB271:
  40              	.LBI271:
  26:../../libDaisy//src/hid/midi.h **** 
  41              		.loc 2 26 5 view .LVU2
  26:../../libDaisy//src/hid/midi.h **** 
  42              		.loc 2 26 5 is_stmt 0 view .LVU3
  43              	.LBE271:
  44              	.LBE270:
  45              	.LBB272:
  46              	.LBI272:
  47              		.file 3 "../../libDaisy//src/hid/rgb_led.h"
   1:../../libDaisy//src/hid/rgb_led.h **** #pragma once
   2:../../libDaisy//src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 4


   3:../../libDaisy//src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../../libDaisy//src/hid/rgb_led.h **** #include "hid/led.h"
   5:../../libDaisy//src/hid/rgb_led.h **** #include "util/color.h"
   6:../../libDaisy//src/hid/rgb_led.h **** 
   7:../../libDaisy//src/hid/rgb_led.h **** namespace daisy
   8:../../libDaisy//src/hid/rgb_led.h **** {
   9:../../libDaisy//src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../../libDaisy//src/hid/rgb_led.h ****     @{
  11:../../libDaisy//src/hid/rgb_led.h **** */
  12:../../libDaisy//src/hid/rgb_led.h **** 
  13:../../libDaisy//src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../../libDaisy//src/hid/rgb_led.h **** class RgbLed
  15:../../libDaisy//src/hid/rgb_led.h **** {
  16:../../libDaisy//src/hid/rgb_led.h ****   public:
  17:../../libDaisy//src/hid/rgb_led.h ****     RgbLed() {}
  18:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
  48              		.loc 3 18 5 is_stmt 1 view .LVU4
  49              	.LBB273:
  50              	.LBI273:
  51              		.file 4 "../../libDaisy//src/hid/led.h"
   1:../../libDaisy//src/hid/led.h **** 
   2:../../libDaisy//src/hid/led.h **** #pragma once
   3:../../libDaisy//src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libDaisy//src/hid/led.h **** #define DSY_LED_H
   5:../../libDaisy//src/hid/led.h **** #include "daisy_core.h"
   6:../../libDaisy//src/hid/led.h **** #include "per/gpio.h"
   7:../../libDaisy//src/hid/led.h **** 
   8:../../libDaisy//src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libDaisy//src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libDaisy//src/hid/led.h **** */
  11:../../libDaisy//src/hid/led.h **** 
  12:../../libDaisy//src/hid/led.h **** namespace daisy
  13:../../libDaisy//src/hid/led.h **** {
  14:../../libDaisy//src/hid/led.h **** /**
  15:../../libDaisy//src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libDaisy//src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libDaisy//src/hid/led.h ****     @author shensley
  18:../../libDaisy//src/hid/led.h ****     @date March 2020
  19:../../libDaisy//src/hid/led.h ****     @ingroup feedback
  20:../../libDaisy//src/hid/led.h **** */
  21:../../libDaisy//src/hid/led.h **** class Led
  22:../../libDaisy//src/hid/led.h **** {
  23:../../libDaisy//src/hid/led.h ****   public:
  24:../../libDaisy//src/hid/led.h ****     Led() {}
  25:../../libDaisy//src/hid/led.h ****     ~Led() {}
  52              		.loc 4 25 5 view .LVU5
  53              		.loc 4 25 5 is_stmt 0 view .LVU6
  54              	.LBE273:
  55              	.LBB274:
  56              	.LBI274:
  57              		.loc 4 25 5 is_stmt 1 view .LVU7
  58              		.loc 4 25 5 is_stmt 0 view .LVU8
  59              	.LBE274:
  60              	.LBB275:
  61              	.LBI275:
  62              		.loc 4 25 5 is_stmt 1 view .LVU9
  63              		.loc 4 25 5 is_stmt 0 view .LVU10
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 5


  64              	.LBE275:
  65              	.LBE272:
  66              	.LBB276:
  67              	.LBI276:
  68              		.loc 3 18 5 is_stmt 1 view .LVU11
  69              	.LBB277:
  70              	.LBI277:
  71              		.loc 4 25 5 view .LVU12
  72              		.loc 4 25 5 is_stmt 0 view .LVU13
  73              	.LBE277:
  74              	.LBB278:
  75              	.LBI278:
  76              		.loc 4 25 5 is_stmt 1 view .LVU14
  77              		.loc 4 25 5 is_stmt 0 view .LVU15
  78              	.LBE278:
  79              	.LBB279:
  80              	.LBI279:
  81              		.loc 4 25 5 is_stmt 1 view .LVU16
  82              		.loc 4 25 5 is_stmt 0 view .LVU17
  83              	.LBE279:
  84              	.LBE276:
  85              	.LBB280:
  86              	.LBI280:
  87              		.file 5 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 6


  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  88              		.loc 5 42 5 is_stmt 1 view .LVU18
  89              		.loc 5 42 5 is_stmt 0 view .LVU19
  90              	.LBE280:
  91              	.LBB281:
  92              	.LBI281:
  93              		.loc 5 42 5 is_stmt 1 view .LVU20
  94              		.loc 5 42 5 is_stmt 0 view .LVU21
  95              	.LBE281:
  96              	.LBB282:
  97              	.LBI282:
  98              		.file 6 "../../libDaisy//src/hid/ctrl.h"
   1:../../libDaisy//src/hid/ctrl.h **** #pragma once
   2:../../libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/ctrl.h **** 
   6:../../libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libDaisy//src/hid/ctrl.h **** namespace daisy
   8:../../libDaisy//src/hid/ctrl.h **** {
   9:../../libDaisy//src/hid/ctrl.h **** /**
  10:../../libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../../libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../../libDaisy//src/hid/ctrl.h **** */
  17:../../libDaisy//src/hid/ctrl.h **** class AnalogControl
  18:../../libDaisy//src/hid/ctrl.h **** {
  19:../../libDaisy//src/hid/ctrl.h ****   public:
  20:../../libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../../libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../../libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
  99              		.loc 6 23 5 is_stmt 1 view .LVU22
 100              		.loc 6 23 5 is_stmt 0 view .LVU23
 101              	.LBE282:
 102              	.LBB283:
 103              	.LBI283:
 104              		.loc 6 23 5 is_stmt 1 view .LVU24
 105              		.loc 6 23 5 is_stmt 0 view .LVU25
 106              	.LBE283:
 107              	.LBB284:
 108              	.LBI284:
 109              		.file 7 "../../libDaisy//src/hid/encoder.h"
   1:../../libDaisy//src/hid/encoder.h **** #pragma once
   2:../../libDaisy//src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libDaisy//src/hid/encoder.h **** #define DSY_ENCODER_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 7


   4:../../libDaisy//src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libDaisy//src/hid/encoder.h **** 
   8:../../libDaisy//src/hid/encoder.h **** namespace daisy
   9:../../libDaisy//src/hid/encoder.h **** {
  10:../../libDaisy//src/hid/encoder.h **** /** 
  11:../../libDaisy//src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libDaisy//src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libDaisy//src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/encoder.h ****     @date December 2019
  15:../../libDaisy//src/hid/encoder.h ****     @ingroup controls
  16:../../libDaisy//src/hid/encoder.h **** */
  17:../../libDaisy//src/hid/encoder.h **** class Encoder
  18:../../libDaisy//src/hid/encoder.h **** {
  19:../../libDaisy//src/hid/encoder.h ****   public:
  20:../../libDaisy//src/hid/encoder.h ****     Encoder() {}
  21:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 110              		.loc 7 21 5 is_stmt 1 view .LVU26
 111              	.LBB285:
 112              	.LBI285:
 113              		.loc 5 42 5 view .LVU27
 114              		.loc 5 42 5 is_stmt 0 view .LVU28
 115              	.LBE285:
 116              	.LBE284:
 117              	.LBB286:
 118              	.LBI286:
 119              		.file 8 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 120              		.loc 8 22 5 is_stmt 1 view .LVU29
 121              	.LBB287:
 122              	.LBI287:
 123              		.file 9 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 8


   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 9


  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
 124              		.loc 9 78 5 view .LVU30
 125              		.loc 9 78 5 is_stmt 0 view .LVU31
 126              	.LBE287:
 127              	.LBB288:
 128              	.LBI288:
 129              		.file 10 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 10


  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 130              		.loc 10 42 5 is_stmt 1 view .LVU32
 131              		.loc 10 42 5 is_stmt 0 view .LVU33
 132              	.LBE288:
 133              	.LBB289:
 134              	.LBI289:
 135              		.file 11 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 11


  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 136              		.loc 11 93 5 is_stmt 1 view .LVU34
 137              		.loc 11 93 5 is_stmt 0 view .LVU35
 138              	.LBE289:
 139              	.LBB290:
 140              	.LBI290:
 141              		.file 12 "../../libDaisy//src/hid/audio.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 12


   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 13


  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 142              		.loc 12 96 5 is_stmt 1 view .LVU36
 143              		.loc 12 96 5 is_stmt 0 view .LVU37
 144              	.LBE290:
 145              	.LBE286:
 146              		.loc 1 36 18 view .LVU38
 147 0000 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE2538:
 151              		.weak	_ZN5daisy8DaisyPodD1Ev
 152              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 153 0002 00BF     		.section	.text._Z12randomNumberv,"ax",%progbits
 154              		.align	1
 155              		.p2align 2,,3
 156              		.global	_Z12randomNumberv
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	_Z12randomNumberv:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 14


 162              	.LFB2541:
 163              		.file 13 "MyProj.cpp"
   1:MyProj.cpp    **** #include "daisy_pod.h"
   2:MyProj.cpp    **** #include "leaf.h"
   3:MyProj.cpp    **** using namespace daisy;
   4:MyProj.cpp    **** LEAF leaf;
   5:MyProj.cpp    **** char leafMemory[65535];
   6:MyProj.cpp    **** DaisyPod hw;
   7:MyProj.cpp    **** dsy_gpio_pin A1Pin;
   8:MyProj.cpp    **** dsy_gpio_pin A7Pin;
   9:MyProj.cpp    **** 
  10:MyProj.cpp    **** //MORE COMPLEX SENSOR INPUT EXAMPLE
  11:MyProj.cpp    **** //CONNECT SENSORS TO A1 and A7 pins on the Daisy Pod
  12:MyProj.cpp    **** //this one adds the knobs doing FM (frequency modulation) to the pulse wave with a sawtooth wave
  13:MyProj.cpp    **** 
  14:MyProj.cpp    **** tPBPulse myOsc;
  15:MyProj.cpp    **** tPBSaw myMod;
  16:MyProj.cpp    **** 
  17:MyProj.cpp    **** //let's make some variables so we can peek at the sensor values in the debugger. Volatile so the co
  18:MyProj.cpp    **** volatile float sensor1;
  19:MyProj.cpp    **** volatile float sensor2;
  20:MyProj.cpp    **** 
  21:MyProj.cpp    **** float randomNumber()
  22:MyProj.cpp    **** {
 164              		.loc 13 22 1 is_stmt 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
  23:MyProj.cpp    ****     return Random::GetFloat(0.0f, 1.0f);
 169              		.loc 13 23 5 view .LVU40
 170              		.loc 13 23 28 is_stmt 0 view .LVU41
 171 0000 F7EE000A 		vmov.f32	s1, #1.0e+0
 172 0004 9FED010A 		vldr.32	s0, .L4
 173 0008 FFF7FEBF 		b	_ZN5daisy6Random8GetFloatEff
 174              	.LVL1:
 175              	.L5:
 176              		.align	2
 177              	.L4:
 178 000c 00000000 		.word	0
 179              		.cfi_endproc
 180              	.LFE2541:
 182              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 183              		.align	1
 184              		.p2align 2,,3
 185              		.global	_Z13AudioCallbackPKPKfPPfj
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	_Z13AudioCallbackPKPKfPPfj:
 191              	.LVL2:
 192              	.LFB2542:
  24:MyProj.cpp    **** }
  25:MyProj.cpp    **** 
  26:MyProj.cpp    **** 
  27:MyProj.cpp    **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  28:MyProj.cpp    **** {
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 15


 193              		.loc 13 28 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
  29:MyProj.cpp    ****     hw.ProcessAllControls();
 197              		.loc 13 29 5 view .LVU43
 198              	.LBB291:
 199              	.LBI291:
  37:../../libDaisy//src/daisy_pod.h **** 
  38:../../libDaisy//src/daisy_pod.h ****     /** Init related stuff. */
  39:../../libDaisy//src/daisy_pod.h ****     void Init(bool boost = false);
  40:../../libDaisy//src/daisy_pod.h **** 
  41:../../libDaisy//src/daisy_pod.h ****     /** Wait for a bit
  42:../../libDaisy//src/daisy_pod.h ****     \param del Time to wait in ms.
  43:../../libDaisy//src/daisy_pod.h ****     */
  44:../../libDaisy//src/daisy_pod.h ****     void DelayMs(size_t del);
  45:../../libDaisy//src/daisy_pod.h **** 
  46:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  47:../../libDaisy//src/daisy_pod.h ****     \param cb Interleaved callback function
  48:../../libDaisy//src/daisy_pod.h ****     */
  49:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  50:../../libDaisy//src/daisy_pod.h **** 
  51:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  52:../../libDaisy//src/daisy_pod.h ****     \param cb multichannel callback function
  53:../../libDaisy//src/daisy_pod.h ****     */
  54:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  55:../../libDaisy//src/daisy_pod.h **** 
  56:../../libDaisy//src/daisy_pod.h ****     /**
  57:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  58:../../libDaisy//src/daisy_pod.h ****        \param cb New interleaved callback function.
  59:../../libDaisy//src/daisy_pod.h ****     */
  60:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  61:../../libDaisy//src/daisy_pod.h **** 
  62:../../libDaisy//src/daisy_pod.h ****     /**
  63:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  64:../../libDaisy//src/daisy_pod.h ****        \param cb New multichannel callback function.
  65:../../libDaisy//src/daisy_pod.h ****     */
  66:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  67:../../libDaisy//src/daisy_pod.h **** 
  68:../../libDaisy//src/daisy_pod.h ****     /** Stops the audio if it is running. */
  69:../../libDaisy//src/daisy_pod.h ****     void StopAudio();
  70:../../libDaisy//src/daisy_pod.h **** 
  71:../../libDaisy//src/daisy_pod.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  72:../../libDaisy//src/daisy_pod.h ****      ** Audio must be stopped for this to work.
  73:../../libDaisy//src/daisy_pod.h ****      */
  74:../../libDaisy//src/daisy_pod.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  75:../../libDaisy//src/daisy_pod.h **** 
  76:../../libDaisy//src/daisy_pod.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  77:../../libDaisy//src/daisy_pod.h ****      */
  78:../../libDaisy//src/daisy_pod.h ****     float AudioSampleRate();
  79:../../libDaisy//src/daisy_pod.h **** 
  80:../../libDaisy//src/daisy_pod.h ****     /** Sets the number of samples processed per channel by the audio callback.
  81:../../libDaisy//src/daisy_pod.h ****      */
  82:../../libDaisy//src/daisy_pod.h ****     void SetAudioBlockSize(size_t blocksize);
  83:../../libDaisy//src/daisy_pod.h **** 
  84:../../libDaisy//src/daisy_pod.h ****     /** Returns the number of samples per channel in a block of audio. */
  85:../../libDaisy//src/daisy_pod.h ****     size_t AudioBlockSize();
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 16


  86:../../libDaisy//src/daisy_pod.h **** 
  87:../../libDaisy//src/daisy_pod.h ****     /** Returns the rate in Hz that the Audio callback is called */
  88:../../libDaisy//src/daisy_pod.h ****     float AudioCallbackRate();
  89:../../libDaisy//src/daisy_pod.h **** 
  90:../../libDaisy//src/daisy_pod.h ****     /**
  91:../../libDaisy//src/daisy_pod.h ****        Start analog to digital conversion.
  92:../../libDaisy//src/daisy_pod.h ****      */
  93:../../libDaisy//src/daisy_pod.h ****     void StartAdc();
  94:../../libDaisy//src/daisy_pod.h **** 
  95:../../libDaisy//src/daisy_pod.h ****     /** Stops Transfering data from the ADC */
  96:../../libDaisy//src/daisy_pod.h ****     void StopAdc();
  97:../../libDaisy//src/daisy_pod.h **** 
  98:../../libDaisy//src/daisy_pod.h ****     /** Call at same rate as analog reads for smooth reading.*/
  99:../../libDaisy//src/daisy_pod.h ****     void ProcessAnalogControls();
 100:../../libDaisy//src/daisy_pod.h **** 
 101:../../libDaisy//src/daisy_pod.h ****     /** Process Analog and Digital Controls */
 102:../../libDaisy//src/daisy_pod.h ****     inline void ProcessAllControls()
 200              		.loc 1 102 17 view .LVU44
 201              	.LBB292:
 103:../../libDaisy//src/daisy_pod.h ****     {
 104:../../libDaisy//src/daisy_pod.h ****         ProcessAnalogControls();
 202              		.loc 1 104 9 view .LVU45
 203              	.LBE292:
 204              	.LBE291:
  28:MyProj.cpp    ****     hw.ProcessAllControls();
 205              		.loc 13 28 1 is_stmt 0 view .LVU46
 206 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 207              		.cfi_def_cfa_offset 24
 208              		.cfi_offset 4, -24
 209              		.cfi_offset 5, -20
 210              		.cfi_offset 6, -16
 211              		.cfi_offset 7, -12
 212              		.cfi_offset 8, -8
 213              		.cfi_offset 14, -4
 214              	.LBB295:
 215              	.LBB293:
 216              		.loc 1 104 30 view .LVU47
 217 0004 2E48     		ldr	r0, .L14
 218              	.LVL3:
 219              		.loc 1 104 30 view .LVU48
 220              	.LBE293:
 221              	.LBE295:
  28:MyProj.cpp    ****     hw.ProcessAllControls();
 222              		.loc 13 28 1 view .LVU49
 223 0006 1746     		mov	r7, r2
 224 0008 8846     		mov	r8, r1
 225 000a 2DED048B 		vpush.64	{d8, d9}
 226              		.cfi_def_cfa_offset 40
 227              		.cfi_offset 80, -40
 228              		.cfi_offset 81, -36
 229              		.cfi_offset 82, -32
 230              		.cfi_offset 83, -28
 231              	.LBB296:
 232              	.LBB294:
 233              		.loc 1 104 30 view .LVU50
 234 000e FFF7FEFF 		bl	_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
 235              	.LVL4:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 17


 105:../../libDaisy//src/daisy_pod.h ****         ProcessDigitalControls();
 236              		.loc 1 105 9 is_stmt 1 view .LVU51
 237              		.loc 1 105 31 is_stmt 0 view .LVU52
 238 0012 2B48     		ldr	r0, .L14
 239 0014 FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
 240              	.LVL5:
 241              		.loc 1 105 31 view .LVU53
 242              	.LBE294:
 243              	.LBE296:
  30:MyProj.cpp    ****     //now here's the per sample stuff
  31:MyProj.cpp    ****     for (size_t i = 0; i < size; i++)
 244              		.loc 13 31 5 is_stmt 1 view .LVU54
 245              	.LBB297:
 246              		.loc 13 31 26 view .LVU55
 247 0018 002F     		cmp	r7, #0
 248 001a 4CD0     		beq	.L6
 249              		.loc 13 31 17 is_stmt 0 view .LVU56
 250 001c 0024     		movs	r4, #0
 251 001e 294E     		ldr	r6, .L14+4
 252 0020 294D     		ldr	r5, .L14+8
 253              	.LVL6:
 254              	.L8:
 255              	.LBB298:
  32:MyProj.cpp    ****     {
  33:MyProj.cpp    ****         float modFreq = hw.GetKnobValue(hw.KNOB_1) * 440.0f;
 256              		.loc 13 33 9 is_stmt 1 discriminator 2 view .LVU57
 257              		.loc 13 33 54 is_stmt 0 discriminator 2 view .LVU58
 258 0022 9FED2A9A 		vldr.32	s18, .L14+12
 259              		.loc 13 33 40 discriminator 2 view .LVU59
 260 0026 0021     		movs	r1, #0
 261 0028 2548     		ldr	r0, .L14
 262 002a FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 263              	.LVL7:
  34:MyProj.cpp    ****         tPBSaw_setFreq(&myMod, modFreq);
 264              		.loc 13 34 9 is_stmt 1 discriminator 2 view .LVU60
 265              		.loc 13 34 23 is_stmt 0 discriminator 2 view .LVU61
 266 002e 2848     		ldr	r0, .L14+16
 267 0030 20EE090A 		vmul.f32	s0, s0, s18
 268              	.LVL8:
 269              		.loc 13 34 23 discriminator 2 view .LVU62
 270 0034 FFF7FEFF 		bl	tPBSaw_setFreq
 271              	.LVL9:
  35:MyProj.cpp    ****         float sawOutput = tPBSaw_tick(&myMod);
 272              		.loc 13 35 9 is_stmt 1 discriminator 2 view .LVU63
 273              		.loc 13 35 38 is_stmt 0 discriminator 2 view .LVU64
 274 0038 2548     		ldr	r0, .L14+16
 275 003a FFF7FEFF 		bl	tPBSaw_tick
 276              	.LVL10:
  36:MyProj.cpp    ****         float modAmp = hw.GetKnobValue(hw.KNOB_2) * 2000.0f;
 277              		.loc 13 36 39 discriminator 2 view .LVU65
 278 003e 0121     		movs	r1, #1
 279 0040 1F48     		ldr	r0, .L14
  35:MyProj.cpp    ****         float sawOutput = tPBSaw_tick(&myMod);
 280              		.loc 13 35 38 discriminator 2 view .LVU66
 281 0042 F0EE408A 		vmov.f32	s17, s0
 282              	.LVL11:
 283              		.loc 13 36 9 is_stmt 1 discriminator 2 view .LVU67
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 18


 284              		.loc 13 36 39 is_stmt 0 discriminator 2 view .LVU68
 285 0046 FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 286              	.LVL12:
  37:MyProj.cpp    ****         sensor1 = hw.seed.adc.GetFloat(0);
 287              		.loc 13 37 39 discriminator 2 view .LVU69
 288 004a 0021     		movs	r1, #0
 289 004c 2148     		ldr	r0, .L14+20
  36:MyProj.cpp    ****         float modAmp = hw.GetKnobValue(hw.KNOB_2) * 2000.0f;
 290              		.loc 13 36 39 discriminator 2 view .LVU70
 291 004e B0EE408A 		vmov.f32	s16, s0
 292              	.LVL13:
 293              		.loc 13 37 9 is_stmt 1 discriminator 2 view .LVU71
 294              		.loc 13 37 39 is_stmt 0 discriminator 2 view .LVU72
 295 0052 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 296              	.LVL14:
  38:MyProj.cpp    ****         sensor2 = hw.seed.adc.GetFloat(1);
 297              		.loc 13 38 39 discriminator 2 view .LVU73
 298 0056 0121     		movs	r1, #1
 299 0058 1E48     		ldr	r0, .L14+20
  37:MyProj.cpp    ****         sensor1 = hw.seed.adc.GetFloat(0);
 300              		.loc 13 37 17 discriminator 2 view .LVU74
 301 005a 86ED000A 		vstr.32	s0, [r6]
 302              		.loc 13 38 9 is_stmt 1 discriminator 2 view .LVU75
 303              		.loc 13 38 39 is_stmt 0 discriminator 2 view .LVU76
 304 005e FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 305              	.LVL15:
  36:MyProj.cpp    ****         float modAmp = hw.GetKnobValue(hw.KNOB_2) * 2000.0f;
 306              		.loc 13 36 53 discriminator 2 view .LVU77
 307 0062 DFED1D7A 		vldr.32	s15, .L14+24
 308              		.loc 13 38 17 discriminator 2 view .LVU78
 309 0066 85ED000A 		vstr.32	s0, [r5]
  39:MyProj.cpp    ****         tPBPulse_setFreq(&myOsc, sensor1 * 440.0f + (sawOutput * modAmp));
 310              		.loc 13 39 9 is_stmt 1 discriminator 2 view .LVU79
  36:MyProj.cpp    ****         sensor1 = hw.seed.adc.GetFloat(0);
 311              		.loc 13 36 53 is_stmt 0 discriminator 2 view .LVU80
 312 006a 28EE278A 		vmul.f32	s16, s16, s15
 313              	.LVL16:
 314              		.loc 13 39 34 discriminator 2 view .LVU81
 315 006e D6ED007A 		vldr.32	s15, [r6]
 316              		.loc 13 39 25 discriminator 2 view .LVU82
 317 0072 1A48     		ldr	r0, .L14+28
 318              		.loc 13 39 64 discriminator 2 view .LVU83
 319 0074 28EE280A 		vmul.f32	s0, s16, s17
 320              		.loc 13 39 25 discriminator 2 view .LVU84
 321 0078 A7EE890A 		vfma.f32	s0, s15, s18
 322 007c FFF7FEFF 		bl	tPBPulse_setFreq
 323              	.LVL17:
  40:MyProj.cpp    ****         tPBPulse_setWidth(&myOsc, sensor2 * 0.9f + 0.05f);
 324              		.loc 13 40 9 is_stmt 1 discriminator 2 view .LVU85
 325              		.loc 13 40 35 is_stmt 0 discriminator 2 view .LVU86
 326 0080 95ED007A 		vldr.32	s14, [r5]
 327              		.loc 13 40 26 discriminator 2 view .LVU87
 328 0084 DFED167A 		vldr.32	s15, .L14+32
 329 0088 9FED160A 		vldr.32	s0, .L14+36
 330 008c 1348     		ldr	r0, .L14+28
 331 008e A7EE270A 		vfma.f32	s0, s14, s15
 332 0092 FFF7FEFF 		bl	tPBPulse_setWidth
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 19


 333              	.LVL18:
  41:MyProj.cpp    ****         float mySample = tPBPulse_tick(&myOsc);
 334              		.loc 13 41 9 is_stmt 1 discriminator 2 view .LVU88
 335              		.loc 13 41 39 is_stmt 0 discriminator 2 view .LVU89
 336 0096 1148     		ldr	r0, .L14+28
 337 0098 FFF7FEFF 		bl	tPBPulse_tick
 338              	.LVL19:
  42:MyProj.cpp    ****         
  43:MyProj.cpp    ****         //now set the audio outputs (left is [0] and right is [1] to be whatever value has been com
  44:MyProj.cpp    ****         out[0][i] = mySample;
  45:MyProj.cpp    ****         out[1][i] = mySample;
 339              		.loc 13 45 19 discriminator 2 view .LVU90
 340 009c D8E90003 		ldrd	r0, r3, [r8]
 341              	.LVL20:
  44:MyProj.cpp    ****         out[1][i] = mySample;
 342              		.loc 13 44 9 is_stmt 1 discriminator 2 view .LVU91
  44:MyProj.cpp    ****         out[1][i] = mySample;
 343              		.loc 13 44 19 is_stmt 0 discriminator 2 view .LVU92
 344 00a0 00EB8400 		add	r0, r0, r4, lsl #2
 345              		.loc 13 45 19 discriminator 2 view .LVU93
 346 00a4 03EB8403 		add	r3, r3, r4, lsl #2
 347              	.LBE298:
  31:MyProj.cpp    ****     {
 348              		.loc 13 31 5 discriminator 2 view .LVU94
 349 00a8 0134     		adds	r4, r4, #1
 350              	.LVL21:
 351              	.LBB299:
  44:MyProj.cpp    ****         out[1][i] = mySample;
 352              		.loc 13 44 19 discriminator 2 view .LVU95
 353 00aa 80ED000A 		vstr.32	s0, [r0]
 354              		.loc 13 45 9 is_stmt 1 discriminator 2 view .LVU96
 355              	.LBE299:
  31:MyProj.cpp    ****     {
 356              		.loc 13 31 26 is_stmt 0 discriminator 2 view .LVU97
 357 00ae A742     		cmp	r7, r4
 358              	.LBB300:
 359              		.loc 13 45 19 discriminator 2 view .LVU98
 360 00b0 83ED000A 		vstr.32	s0, [r3]
 361              	.LBE300:
  31:MyProj.cpp    ****     {
 362              		.loc 13 31 5 is_stmt 1 discriminator 2 view .LVU99
 363              	.LVL22:
  31:MyProj.cpp    ****     {
 364              		.loc 13 31 26 discriminator 2 view .LVU100
 365 00b4 B5D1     		bne	.L8
 366              	.LVL23:
 367              	.L6:
  31:MyProj.cpp    ****     {
 368              		.loc 13 31 26 is_stmt 0 discriminator 2 view .LVU101
 369              	.LBE297:
  46:MyProj.cpp    ****     }
  47:MyProj.cpp    **** }
 370              		.loc 13 47 1 view .LVU102
 371 00b6 BDEC048B 		vldm	sp!, {d8-d9}
 372              		.cfi_restore 82
 373              		.cfi_restore 83
 374              		.cfi_restore 80
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 20


 375              		.cfi_restore 81
 376              		.cfi_def_cfa_offset 24
 377 00ba BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 378              	.LVL24:
 379              	.L15:
 380              		.loc 13 47 1 view .LVU103
 381 00be 00BF     		.align	2
 382              	.L14:
 383 00c0 00000000 		.word	hw
 384 00c4 00000000 		.word	.LANCHOR1
 385 00c8 00000000 		.word	.LANCHOR2
 386 00cc 0000DC43 		.word	1138491392
 387 00d0 00000000 		.word	.LANCHOR0
 388 00d4 18000000 		.word	hw+24
 389 00d8 0000FA44 		.word	1157234688
 390 00dc 00000000 		.word	.LANCHOR3
 391 00e0 6666663F 		.word	1063675494
 392 00e4 CDCC4C3D 		.word	1028443341
 393              		.cfi_endproc
 394              	.LFE2542:
 396              		.section	.text.startup.main,"ax",%progbits
 397              		.align	1
 398              		.p2align 2,,3
 399              		.global	main
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 404              	main:
 405              	.LFB2543:
  48:MyProj.cpp    **** 
  49:MyProj.cpp    **** int main(void)
  50:MyProj.cpp    **** {
 406              		.loc 13 50 1 is_stmt 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 88
 409              		@ frame_needed = 0, uses_anonymous_args = 0
  51:MyProj.cpp    ****     hw.Init();
 410              		.loc 13 51 5 view .LVU105
  50:MyProj.cpp    ****     hw.Init();
 411              		.loc 13 50 1 is_stmt 0 view .LVU106
 412 0000 30B5     		push	{r4, r5, lr}
 413              		.cfi_def_cfa_offset 12
 414              		.cfi_offset 4, -12
 415              		.cfi_offset 5, -8
 416              		.cfi_offset 14, -4
 417              		.loc 13 51 12 view .LVU107
 418 0002 434C     		ldr	r4, .L19
  50:MyProj.cpp    ****     hw.Init();
 419              		.loc 13 50 1 view .LVU108
 420 0004 97B0     		sub	sp, sp, #92
 421              		.cfi_def_cfa_offset 104
 422              		.loc 13 51 12 view .LVU109
 423 0006 0021     		movs	r1, #0
  52:MyProj.cpp    ****    
  53:MyProj.cpp    ****    //here's some code that sets up those additional analog sensor inputs
  54:MyProj.cpp    ****    //I've copied out the internal Daisy code that sets up the knobs, and added the analog inputs to
  55:MyProj.cpp    ****    //we can now use the knobs as usual
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 21


  56:MyProj.cpp    ****    // but also we can get the new sensor channels as hw.seed.adc.GetFloat(0) and hw.seed.adc.GetFlo
  57:MyProj.cpp    **** 
  58:MyProj.cpp    ****     AdcChannelConfig ext_knob_init[4];
  59:MyProj.cpp    ****     A1Pin = dsy_pin(DSY_GPIOA, 3);
  60:MyProj.cpp    ****     A7Pin = dsy_pin(DSY_GPIOA, 5);
 424              		.loc 13 60 33 view .LVU110
 425 0008 424D     		ldr	r5, .L19+4
  51:MyProj.cpp    ****    
 426              		.loc 13 51 12 view .LVU111
 427 000a 2046     		mov	r0, r4
 428 000c FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
 429              	.LVL25:
  58:MyProj.cpp    ****     A1Pin = dsy_pin(DSY_GPIOA, 3);
 430              		.loc 13 58 5 is_stmt 1 view .LVU112
  59:MyProj.cpp    ****     A7Pin = dsy_pin(DSY_GPIOA, 5);
 431              		.loc 13 59 5 view .LVU113
 432              		.file 14 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 22


  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 23


  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 24


 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 25


 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 433              		.loc 14 219 5 view .LVU114
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 434              		.loc 14 220 5 view .LVU115
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 435              		.loc 14 221 5 view .LVU116
 222:../../libDaisy//src/daisy_core.h ****     return p;
 436              		.loc 14 222 5 view .LVU117
  59:MyProj.cpp    ****     A7Pin = dsy_pin(DSY_GPIOA, 5);
 437              		.loc 13 59 33 is_stmt 0 view .LVU118
 438 0010 414B     		ldr	r3, .L19+8
 439 0012 4FF44072 		mov	r2, #768
  61:MyProj.cpp    ****     ext_knob_init[0].InitSingle(A1Pin);
 440              		.loc 13 61 32 view .LVU119
 441 0016 05A8     		add	r0, sp, #20
  59:MyProj.cpp    ****     A7Pin = dsy_pin(DSY_GPIOA, 5);
 442              		.loc 13 59 33 view .LVU120
 443 0018 1A80     		strh	r2, [r3]	@ movhi
  60:MyProj.cpp    ****     ext_knob_init[0].InitSingle(A1Pin);
 444              		.loc 13 60 5 is_stmt 1 view .LVU121
 445              	.LVL26:
 219:../../libDaisy//src/daisy_core.h ****     p.port = port;
 446              		.loc 14 219 5 view .LVU122
 220:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 447              		.loc 14 220 5 view .LVU123
 221:../../libDaisy//src/daisy_core.h ****     return p;
 448              		.loc 14 221 5 view .LVU124
 449              		.loc 14 222 5 view .LVU125
  60:MyProj.cpp    ****     ext_knob_init[0].InitSingle(A1Pin);
 450              		.loc 13 60 33 is_stmt 0 view .LVU126
 451 001a 4FF4A062 		mov	r2, #1280
 452              		.loc 13 61 32 view .LVU127
 453 001e 1968     		ldr	r1, [r3]
  60:MyProj.cpp    ****     ext_knob_init[0].InitSingle(A1Pin);
 454              		.loc 13 60 33 view .LVU128
 455 0020 2A80     		strh	r2, [r5]	@ movhi
 456              		.loc 13 61 5 is_stmt 1 view .LVU129
 457              		.loc 13 61 32 is_stmt 0 view .LVU130
 458 0022 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 459              	.LVL27:
  62:MyProj.cpp    ****     ext_knob_init[1].InitSingle(A7Pin);
 460              		.loc 13 62 5 is_stmt 1 view .LVU131
 461              		.loc 13 62 32 is_stmt 0 view .LVU132
 462 0026 2968     		ldr	r1, [r5]
 463 0028 0DF12500 		add	r0, sp, #37
  63:MyProj.cpp    ****     ext_knob_init[2].InitSingle(hw.seed.GetPin(21));
  64:MyProj.cpp    ****     ext_knob_init[3].InitSingle(hw.seed.GetPin(15));
  65:MyProj.cpp    ****     // Initialize with the knob init struct w/ 4 members
  66:MyProj.cpp    ****     // Set Oversampling to 32x
  67:MyProj.cpp    ****     hw.seed.adc.Init(ext_knob_init, 4);
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 26


  68:MyProj.cpp    ****     // Make an array of pointers to the knobs.
  69:MyProj.cpp    ****     hw.knobs[0] = &hw.knob1;
 464              		.loc 13 69 17 view .LVU133
 465 002c 04F16405 		add	r5, r4, #100
  62:MyProj.cpp    ****     ext_knob_init[1].InitSingle(A7Pin);
 466              		.loc 13 62 32 view .LVU134
 467 0030 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 468              	.LVL28:
  63:MyProj.cpp    ****     ext_knob_init[2].InitSingle(hw.seed.GetPin(21));
 469              		.loc 13 63 5 is_stmt 1 view .LVU135
  63:MyProj.cpp    ****     ext_knob_init[2].InitSingle(hw.seed.GetPin(21));
 470              		.loc 13 63 32 is_stmt 0 view .LVU136
 471 0034 1520     		movs	r0, #21
 472 0036 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 473              	.LVL29:
 474 003a 0346     		mov	r3, r0	@ movhi
 475 003c 0DF13600 		add	r0, sp, #54
 476 0040 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 477 0044 0399     		ldr	r1, [sp, #12]
 478 0046 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 479              	.LVL30:
  64:MyProj.cpp    ****     // Initialize with the knob init struct w/ 4 members
 480              		.loc 13 64 5 is_stmt 1 view .LVU137
  64:MyProj.cpp    ****     // Initialize with the knob init struct w/ 4 members
 481              		.loc 13 64 32 is_stmt 0 view .LVU138
 482 004a 0F20     		movs	r0, #15
 483 004c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 484              	.LVL31:
 485 0050 0346     		mov	r3, r0	@ movhi
 486 0052 0DF14700 		add	r0, sp, #71
 487 0056 ADF81030 		strh	r3, [sp, #16]	@ movhi
 488 005a 0499     		ldr	r1, [sp, #16]
 489 005c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 490              	.LVL32:
  67:MyProj.cpp    ****     // Make an array of pointers to the knobs.
 491              		.loc 13 67 5 is_stmt 1 view .LVU139
  67:MyProj.cpp    ****     // Make an array of pointers to the knobs.
 492              		.loc 13 67 21 is_stmt 0 view .LVU140
 493 0060 0423     		movs	r3, #4
 494 0062 05A9     		add	r1, sp, #20
 495 0064 04F11800 		add	r0, r4, #24
 496 0068 1A46     		mov	r2, r3
 497 006a FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 498              	.LVL33:
 499              		.loc 13 69 5 is_stmt 1 view .LVU141
  70:MyProj.cpp    ****     hw.knobs[1] = &hw.knob2;
 500              		.loc 13 70 17 is_stmt 0 view .LVU142
 501 006e 04F18403 		add	r3, r4, #132
 502              	.LBB301:
  71:MyProj.cpp    ****     for(int i = 0; i < 2; i++)
  72:MyProj.cpp    ****     {
  73:MyProj.cpp    ****         hw.knobs[i]->Init(hw.seed.adc.GetPtr(i+2), hw.seed.AudioCallbackRate());
 503              		.loc 13 73 26 view .LVU143
 504 0072 0221     		movs	r1, #2
 505 0074 04F11800 		add	r0, r4, #24
 506              	.LBE301:
  70:MyProj.cpp    ****     hw.knobs[1] = &hw.knob2;
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 27


 507              		.loc 13 70 17 view .LVU144
 508 0078 C4E92953 		strd	r5, r3, [r4, #164]
  71:MyProj.cpp    ****     for(int i = 0; i < 2; i++)
 509              		.loc 13 71 5 is_stmt 1 view .LVU145
 510              	.LVL34:
 511              	.LBB302:
  71:MyProj.cpp    ****     for(int i = 0; i < 2; i++)
 512              		.loc 13 71 22 view .LVU146
 513              		.loc 13 73 9 view .LVU147
 514              		.loc 13 73 26 is_stmt 0 view .LVU148
 515 007c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle6GetPtrEh
 516              	.LVL35:
 517 0080 0146     		mov	r1, r0
 518 0082 2046     		mov	r0, r4
 519 0084 0191     		str	r1, [sp, #4]
 520 0086 FFF7FEFF 		bl	_ZNK5daisy9DaisySeed17AudioCallbackRateEv
 521              	.LVL36:
 522 008a 0023     		movs	r3, #0
 523 008c DFED230A 		vldr.32	s1, .L19+12
 524 0090 2846     		mov	r0, r5
 525 0092 0199     		ldr	r1, [sp, #4]
 526 0094 1A46     		mov	r2, r3
 527 0096 FFF7FEFF 		bl	_ZN5daisy13AnalogControl4InitEPtfbbf
 528              	.LVL37:
  71:MyProj.cpp    ****     for(int i = 0; i < 2; i++)
 529              		.loc 13 71 5 is_stmt 1 view .LVU149
  71:MyProj.cpp    ****     for(int i = 0; i < 2; i++)
 530              		.loc 13 71 22 view .LVU150
 531              		.loc 13 73 26 is_stmt 0 view .LVU151
 532 009a 0321     		movs	r1, #3
 533 009c 04F11800 		add	r0, r4, #24
 534              		.loc 13 73 19 view .LVU152
 535 00a0 D4F8A850 		ldr	r5, [r4, #168]
 536              		.loc 13 73 9 is_stmt 1 view .LVU153
 537              		.loc 13 73 26 is_stmt 0 view .LVU154
 538 00a4 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle6GetPtrEh
 539              	.LVL38:
 540 00a8 0146     		mov	r1, r0
 541 00aa 2046     		mov	r0, r4
 542 00ac 0191     		str	r1, [sp, #4]
 543 00ae FFF7FEFF 		bl	_ZNK5daisy9DaisySeed17AudioCallbackRateEv
 544              	.LVL39:
 545 00b2 0023     		movs	r3, #0
 546 00b4 DFED190A 		vldr.32	s1, .L19+12
 547 00b8 0199     		ldr	r1, [sp, #4]
 548 00ba 2846     		mov	r0, r5
 549 00bc 1A46     		mov	r2, r3
 550 00be FFF7FEFF 		bl	_ZN5daisy13AnalogControl4InitEPtfbbf
 551              	.LVL40:
  71:MyProj.cpp    ****     for(int i = 0; i < 2; i++)
 552              		.loc 13 71 5 is_stmt 1 view .LVU155
  71:MyProj.cpp    ****     for(int i = 0; i < 2; i++)
 553              		.loc 13 71 22 view .LVU156
 554              	.LBE302:
  74:MyProj.cpp    ****     }
  75:MyProj.cpp    ****     
  76:MyProj.cpp    ****     //OK that's done
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 28


  77:MyProj.cpp    ****     //now back to the usual boilerplate stuff
  78:MyProj.cpp    **** 
  79:MyProj.cpp    ****     hw.SetAudioBlockSize(4); // number of samples handled per callback
 555              		.loc 13 79 5 view .LVU157
 556              		.loc 13 79 25 is_stmt 0 view .LVU158
 557 00c2 0421     		movs	r1, #4
 558 00c4 2046     		mov	r0, r4
 559 00c6 FFF7FEFF 		bl	_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
 560              	.LVL41:
  80:MyProj.cpp    ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 561              		.loc 13 80 5 is_stmt 1 view .LVU159
 562              		.loc 13 80 26 is_stmt 0 view .LVU160
 563 00ca 0321     		movs	r1, #3
 564 00cc 2046     		mov	r0, r4
 565 00ce FFF7FEFF 		bl	_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 566              	.LVL42:
  81:MyProj.cpp    ****     Random::Init();
 567              		.loc 13 81 5 is_stmt 1 view .LVU161
 568              		.loc 13 81 17 is_stmt 0 view .LVU162
 569 00d2 FFF7FEFF 		bl	_ZN5daisy6Random4InitEv
 570              	.LVL43:
  82:MyProj.cpp    ****     hw.StartAdc();
 571              		.loc 13 82 5 is_stmt 1 view .LVU163
 572              		.loc 13 82 16 is_stmt 0 view .LVU164
 573 00d6 2046     		mov	r0, r4
 574 00d8 FFF7FEFF 		bl	_ZN5daisy8DaisyPod8StartAdcEv
 575              	.LVL44:
  83:MyProj.cpp    **** 
  84:MyProj.cpp    ****     LEAF_init(&leaf, 48000, leafMemory, 65535, randomNumber);
 576              		.loc 13 84 5 is_stmt 1 view .LVU165
 577              		.loc 13 84 14 is_stmt 0 view .LVU166
 578 00dc 104B     		ldr	r3, .L19+16
 579 00de 4FF6FF72 		movw	r2, #65535
 580 00e2 9FED100A 		vldr.32	s0, .L19+20
 581 00e6 1049     		ldr	r1, .L19+24
 582 00e8 1048     		ldr	r0, .L19+28
 583 00ea FFF7FEFF 		bl	LEAF_init
 584              	.LVL45:
  85:MyProj.cpp    **** 
  86:MyProj.cpp    ****     //for this example, let's set up a pulse wave
  87:MyProj.cpp    ****     tPBPulse_init(&myOsc, &leaf);
 585              		.loc 13 87 5 is_stmt 1 view .LVU167
 586              		.loc 13 87 18 is_stmt 0 view .LVU168
 587 00ee 0F49     		ldr	r1, .L19+28
 588 00f0 0F48     		ldr	r0, .L19+32
 589 00f2 FFF7FEFF 		bl	tPBPulse_init
 590              	.LVL46:
  88:MyProj.cpp    ****     tPBSaw_init(&myMod, &leaf);
 591              		.loc 13 88 5 is_stmt 1 view .LVU169
 592              		.loc 13 88 16 is_stmt 0 view .LVU170
 593 00f6 0D49     		ldr	r1, .L19+28
 594 00f8 0E48     		ldr	r0, .L19+36
 595 00fa FFF7FEFF 		bl	tPBSaw_init
 596              	.LVL47:
  89:MyProj.cpp    **** 
  90:MyProj.cpp    ****     hw.StartAudio(AudioCallback);
 597              		.loc 13 90 5 is_stmt 1 view .LVU171
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 29


 598              		.loc 13 90 18 is_stmt 0 view .LVU172
 599 00fe 0E49     		ldr	r1, .L19+40
 600 0100 2046     		mov	r0, r4
 601 0102 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
 602              	.LVL48:
 603              	.L17:
  91:MyProj.cpp    ****     while(1) {
 604              		.loc 13 91 5 is_stmt 1 discriminator 1 view .LVU173
  92:MyProj.cpp    ****         //the RGB leds on the pod need to be updated with the "update" function here to work
  93:MyProj.cpp    **** 
  94:MyProj.cpp    ****         hw.UpdateLeds();
 605              		.loc 13 94 9 discriminator 1 view .LVU174
 606              		.loc 13 94 22 is_stmt 0 discriminator 1 view .LVU175
 607 0106 0248     		ldr	r0, .L19
 608 0108 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
 609              	.LVL49:
  91:MyProj.cpp    ****     while(1) {
 610              		.loc 13 91 5 is_stmt 1 discriminator 1 view .LVU176
 611 010c FBE7     		b	.L17
 612              	.L20:
 613 010e 00BF     		.align	2
 614              	.L19:
 615 0110 00000000 		.word	hw
 616 0114 00000000 		.word	.LANCHOR5
 617 0118 00000000 		.word	.LANCHOR4
 618 011c 6F12033B 		.word	990057071
 619 0120 00000000 		.word	_Z12randomNumberv
 620 0124 00803B47 		.word	1195081728
 621 0128 00000000 		.word	leafMemory
 622 012c 00000000 		.word	.LANCHOR6
 623 0130 00000000 		.word	.LANCHOR3
 624 0134 00000000 		.word	.LANCHOR0
 625 0138 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 626              		.cfi_endproc
 627              	.LFE2543:
 629              		.section	.text.startup._GLOBAL__sub_I_leaf,"ax",%progbits
 630              		.align	1
 631              		.p2align 2,,3
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 636              	_GLOBAL__sub_I_leaf:
 637              	.LFB2571:
  95:MyProj.cpp    ****     }
  96:MyProj.cpp    **** }
 638              		.loc 13 96 1 view -0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              	.LBB368:
 643              	.LBI368:
 644              		.loc 13 96 1 view .LVU178
 645              	.LVL50:
 646              	.LBB369:
 647              	.LBB370:
 648              	.LBI370:
  35:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 30


 649              		.loc 1 35 5 view .LVU179
 650              	.LBB371:
 651              	.LBB372:
 652              	.LBI372:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 653              		.loc 8 21 5 view .LVU180
 654              	.LBB373:
 655              	.LBB374:
 656              	.LBI374:
 657              		.file 15 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 31


  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 32


 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 33


 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 658              		.loc 15 166 5 view .LVU181
 659              	.LBB375:
 660              	.LBB376:
 661              		.loc 15 166 34 is_stmt 0 view .LVU182
 662 0000 1348     		ldr	r0, .L23
 663 0002 0022     		movs	r2, #0
 664              	.LBE376:
 665              	.LBE375:
 666              	.LBE374:
 667              	.LBE373:
 668              	.LBE372:
 669              	.LBB392:
 670              	.LBB393:
 671              	.LBB394:
 672              	.LBB395:
 673              	.LBB396:
 674              	.LBB397:
 675              	.LBB398:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 676              		.loc 2 37 20 view .LVU183
 677 0004 1349     		ldr	r1, .L23+4
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 678              		.loc 2 36 20 view .LVU184
 679 0006 00F51043 		add	r3, r0, #36864
  38:../../libDaisy//src/hid/midi.h ****         }
 680              		.loc 2 38 20 view .LVU185
 681 000a B1F804C0 		ldrh	ip, [r1, #4]
 682              	.LBE398:
 683              	.LBE397:
 684              	.LBE396:
 685              	.LBE395:
 686              	.LBE394:
 687              	.LBE393:
 688              	.LBE392:
 689              	.LBE371:
 690              	.LBE370:
 691              	.LBE369:
 692              	.LBE368:
 693              		.loc 13 96 1 view .LVU186
 694 000e 00B5     		push	{lr}
 695              		.cfi_def_cfa_offset 4
 696              		.cfi_offset 14, -4
 697              	.LBB453:
 698              	.LBB451:
 699              	.LBB450:
 700              	.LBB449:
 701              	.LBB427:
 702              	.LBB424:
 703              	.LBB421:
 704              	.LBB408:
 705              	.LBB405:
 706              	.LBB402:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 34


 707              	.LBB399:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 708              		.loc 2 37 20 view .LVU187
 709 0010 B1F800E0 		ldrh	lr, [r1]
 710              	.LBE399:
 711              	.LBE402:
 712              	.LBE405:
 713              	.LBE408:
 714              	.LBE421:
 715              	.LBE424:
 716              	.LBE427:
 717              	.LBB428:
 718              	.LBB390:
 719              	.LBB379:
 720              	.LBB378:
 721              	.LBB377:
 722              		.loc 15 166 34 view .LVU188
 723 0014 0260     		str	r2, [r0]
 724              	.LVL51:
 725              		.loc 15 166 34 view .LVU189
 726              	.LBE377:
 727              	.LBE378:
 728              	.LBE379:
 729              	.LBB380:
 730              	.LBI380:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 731              		.loc 12 95 5 is_stmt 1 view .LVU190
 732              	.LBE380:
 733              	.LBE390:
 734              	.LBE428:
 735              	.LBB429:
 736              	.LBB425:
 737              	.LBB422:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 738              		.loc 2 84 19 is_stmt 0 view .LVU191
 739 0016 1049     		ldr	r1, .L23+8
 740              	.LBE422:
 741              	.LBE425:
 742              	.LBE429:
 743              	.LBB430:
 744              	.LBB391:
 745              	.LBB383:
 746              	.LBB381:
 747              	.LBB382:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 748              		.loc 12 95 35 view .LVU192
 749 0018 4261     		str	r2, [r0, #20]
 750              	.LVL52:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 751              		.loc 12 95 35 view .LVU193
 752              	.LBE382:
 753              	.LBE381:
 754              	.LBE383:
 755              	.LBB384:
 756              	.LBI384:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 757              		.loc 11 92 5 is_stmt 1 view .LVU194
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 35


  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 758              		.loc 11 92 5 is_stmt 0 view .LVU195
 759              	.LBE384:
 760              	.LBB385:
 761              	.LBI385:
 762              		.file 16 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 36


  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 763              		.loc 16 84 5 is_stmt 1 view .LVU196
 764              	.LBB386:
 765              	.LBB387:
 766              		.loc 16 84 33 is_stmt 0 view .LVU197
 767 001a 0262     		str	r2, [r0, #32]
 768              	.LVL53:
 769              		.loc 16 84 33 view .LVU198
 770              	.LBE387:
 771              	.LBE386:
 772              	.LBE385:
 773              	.LBB388:
 774              	.LBI388:
  40:../../libDaisy//src/hid/usb.h **** 
 775              		.loc 10 40 5 is_stmt 1 view .LVU199
  40:../../libDaisy//src/hid/usb.h **** 
 776              		.loc 10 40 5 is_stmt 0 view .LVU200
 777              	.LBE388:
 778              	.LBB389:
 779              	.LBI389:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 780              		.loc 9 77 5 is_stmt 1 view .LVU201
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 781              		.loc 9 77 5 is_stmt 0 view .LVU202
 782              	.LBE389:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 37


 783              	.LBE391:
 784              	.LBE430:
 785              	.LBB431:
 786              	.LBI431:
  20:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 787              		.loc 7 20 5 is_stmt 1 view .LVU203
 788              	.LBB432:
 789              	.LBB433:
 790              	.LBI433:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 791              		.loc 5 41 5 view .LVU204
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 792              		.loc 5 41 5 is_stmt 0 view .LVU205
 793              	.LBE433:
 794              	.LBE432:
 795              	.LBE431:
 796              	.LBB434:
 797              	.LBI434:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 798              		.loc 6 21 5 is_stmt 1 view .LVU206
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 799              		.loc 6 21 5 is_stmt 0 view .LVU207
 800              	.LBE434:
 801              	.LBB435:
 802              	.LBI435:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 803              		.loc 6 21 5 is_stmt 1 view .LVU208
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 804              		.loc 6 21 5 is_stmt 0 view .LVU209
 805              	.LBE435:
 806              	.LBB436:
 807              	.LBI436:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 808              		.loc 5 41 5 is_stmt 1 view .LVU210
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 809              		.loc 5 41 5 is_stmt 0 view .LVU211
 810              	.LBE436:
 811              	.LBB437:
 812              	.LBI437:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 813              		.loc 5 41 5 is_stmt 1 view .LVU212
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 814              		.loc 5 41 5 is_stmt 0 view .LVU213
 815              	.LBE437:
 816              	.LBB438:
 817              	.LBI438:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 818              		.loc 3 17 5 is_stmt 1 view .LVU214
 819              	.LBB439:
 820              	.LBB440:
 821              	.LBI440:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 822              		.loc 4 24 5 view .LVU215
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 823              		.loc 4 24 5 is_stmt 0 view .LVU216
 824              	.LBE440:
 825              	.LBB441:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 38


 826              	.LBI441:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 827              		.loc 4 24 5 is_stmt 1 view .LVU217
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 828              		.loc 4 24 5 is_stmt 0 view .LVU218
 829              	.LBE441:
 830              	.LBB442:
 831              	.LBI442:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 832              		.loc 4 24 5 is_stmt 1 view .LVU219
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 833              		.loc 4 24 5 is_stmt 0 view .LVU220
 834              	.LBE442:
 835              	.LBE439:
 836              	.LBE438:
 837              	.LBB443:
 838              	.LBI443:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 839              		.loc 3 17 5 is_stmt 1 view .LVU221
 840              	.LBB444:
 841              	.LBB445:
 842              	.LBI445:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 843              		.loc 4 24 5 view .LVU222
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 844              		.loc 4 24 5 is_stmt 0 view .LVU223
 845              	.LBE445:
 846              	.LBB446:
 847              	.LBI446:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 848              		.loc 4 24 5 is_stmt 1 view .LVU224
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 849              		.loc 4 24 5 is_stmt 0 view .LVU225
 850              	.LBE446:
 851              	.LBB447:
 852              	.LBI447:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 853              		.loc 4 24 5 is_stmt 1 view .LVU226
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 854              		.loc 4 24 5 is_stmt 0 view .LVU227
 855              	.LBE447:
 856              	.LBE444:
 857              	.LBE443:
 858              	.LBB448:
 859              	.LBI392:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 860              		.loc 2 84 5 is_stmt 1 view .LVU228
 861              	.LBB426:
 862              	.LBB423:
 863              	.LBB409:
 864              	.LBI409:
 865              		.file 17 "../../libDaisy//src/per/uart.h"
   1:../../libDaisy//src/per/uart.h **** /* 
   2:../../libDaisy//src/per/uart.h **** TODO
   3:../../libDaisy//src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libDaisy//src/per/uart.h **** - Transmit function improvements.
   5:../../libDaisy//src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 39


   6:../../libDaisy//src/per/uart.h **** */
   7:../../libDaisy//src/per/uart.h **** 
   8:../../libDaisy//src/per/uart.h **** #pragma once
   9:../../libDaisy//src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libDaisy//src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libDaisy//src/per/uart.h **** #include "daisy_core.h"
  12:../../libDaisy//src/per/uart.h **** 
  13:../../libDaisy//src/per/uart.h **** 
  14:../../libDaisy//src/per/uart.h **** namespace daisy
  15:../../libDaisy//src/per/uart.h **** {
  16:../../libDaisy//src/per/uart.h **** /** @addtogroup serial
  17:../../libDaisy//src/per/uart.h ****     @{
  18:../../libDaisy//src/per/uart.h ****     */
  19:../../libDaisy//src/per/uart.h **** 
  20:../../libDaisy//src/per/uart.h **** /** 
  21:../../libDaisy//src/per/uart.h ****     Uart Peripheral
  22:../../libDaisy//src/per/uart.h ****     @author shensley
  23:../../libDaisy//src/per/uart.h ****     @date March 2020
  24:../../libDaisy//src/per/uart.h ****     */
  25:../../libDaisy//src/per/uart.h **** class UartHandler
  26:../../libDaisy//src/per/uart.h **** {
  27:../../libDaisy//src/per/uart.h ****   public:
  28:../../libDaisy//src/per/uart.h ****     struct Config
  29:../../libDaisy//src/per/uart.h ****     {
  30:../../libDaisy//src/per/uart.h ****         enum class Peripheral
  31:../../libDaisy//src/per/uart.h ****         {
  32:../../libDaisy//src/per/uart.h ****             USART_1,
  33:../../libDaisy//src/per/uart.h ****             USART_2,
  34:../../libDaisy//src/per/uart.h ****             USART_3,
  35:../../libDaisy//src/per/uart.h ****             UART_4,
  36:../../libDaisy//src/per/uart.h ****             UART_5,
  37:../../libDaisy//src/per/uart.h ****             USART_6,
  38:../../libDaisy//src/per/uart.h ****             UART_7,
  39:../../libDaisy//src/per/uart.h ****             UART_8,
  40:../../libDaisy//src/per/uart.h ****             LPUART_1,
  41:../../libDaisy//src/per/uart.h ****         };
  42:../../libDaisy//src/per/uart.h **** 
  43:../../libDaisy//src/per/uart.h ****         enum class StopBits
  44:../../libDaisy//src/per/uart.h ****         {
  45:../../libDaisy//src/per/uart.h ****             BITS_0_5,
  46:../../libDaisy//src/per/uart.h ****             BITS_1,
  47:../../libDaisy//src/per/uart.h ****             BITS_1_5,
  48:../../libDaisy//src/per/uart.h ****             BITS_2,
  49:../../libDaisy//src/per/uart.h ****         };
  50:../../libDaisy//src/per/uart.h **** 
  51:../../libDaisy//src/per/uart.h ****         enum class Parity
  52:../../libDaisy//src/per/uart.h ****         {
  53:../../libDaisy//src/per/uart.h ****             NONE,
  54:../../libDaisy//src/per/uart.h ****             EVEN,
  55:../../libDaisy//src/per/uart.h ****             ODD,
  56:../../libDaisy//src/per/uart.h ****         };
  57:../../libDaisy//src/per/uart.h **** 
  58:../../libDaisy//src/per/uart.h ****         enum class Mode
  59:../../libDaisy//src/per/uart.h ****         {
  60:../../libDaisy//src/per/uart.h ****             RX,
  61:../../libDaisy//src/per/uart.h ****             TX,
  62:../../libDaisy//src/per/uart.h ****             TX_RX,
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 40


  63:../../libDaisy//src/per/uart.h ****         };
  64:../../libDaisy//src/per/uart.h **** 
  65:../../libDaisy//src/per/uart.h ****         enum class WordLength
  66:../../libDaisy//src/per/uart.h ****         {
  67:../../libDaisy//src/per/uart.h ****             BITS_7,
  68:../../libDaisy//src/per/uart.h ****             BITS_8,
  69:../../libDaisy//src/per/uart.h ****             BITS_9,
  70:../../libDaisy//src/per/uart.h ****         };
  71:../../libDaisy//src/per/uart.h **** 
  72:../../libDaisy//src/per/uart.h ****         struct
  73:../../libDaisy//src/per/uart.h ****         {
  74:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libDaisy//src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libDaisy//src/per/uart.h **** 
  78:../../libDaisy//src/per/uart.h ****         Config()
  79:../../libDaisy//src/per/uart.h ****         {
  80:../../libDaisy//src/per/uart.h ****             // user must init periph, pin_config, and mode
  81:../../libDaisy//src/per/uart.h ****             stopbits   = StopBits::BITS_1;
  82:../../libDaisy//src/per/uart.h ****             parity     = Parity::NONE;
  83:../../libDaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
  84:../../libDaisy//src/per/uart.h ****             baudrate   = 4800;
  85:../../libDaisy//src/per/uart.h ****             // baudrate   = 31250;
  86:../../libDaisy//src/per/uart.h ****         }
  87:../../libDaisy//src/per/uart.h **** 
  88:../../libDaisy//src/per/uart.h ****         Peripheral periph;
  89:../../libDaisy//src/per/uart.h ****         StopBits   stopbits;
  90:../../libDaisy//src/per/uart.h ****         Parity     parity;
  91:../../libDaisy//src/per/uart.h ****         Mode       mode;
  92:../../libDaisy//src/per/uart.h ****         WordLength wordlength;
  93:../../libDaisy//src/per/uart.h ****         uint32_t   baudrate;
  94:../../libDaisy//src/per/uart.h ****     };
  95:../../libDaisy//src/per/uart.h **** 
  96:../../libDaisy//src/per/uart.h **** 
  97:../../libDaisy//src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 866              		.loc 17 97 5 view .LVU229
 867              	.LBB410:
 868              	.LBB411:
 869              		.loc 17 97 35 is_stmt 0 view .LVU230
 870 001c C0F87C21 		str	r2, [r0, #380]
 871              	.LVL54:
 872              		.loc 17 97 35 view .LVU231
 873              	.LBE411:
 874              	.LBE410:
 875              	.LBE409:
 876              	.LBB412:
 877              	.LBI412:
 878              		.file 18 "../../libDaisy//src/util/ringbuffer.h"
   1:../../libDaisy//src/util/ringbuffer.h **** #pragma once
   2:../../libDaisy//src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libDaisy//src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libDaisy//src/util/ringbuffer.h **** 
   5:../../libDaisy//src/util/ringbuffer.h **** #include <algorithm>
   6:../../libDaisy//src/util/ringbuffer.h **** 
   7:../../libDaisy//src/util/ringbuffer.h **** namespace daisy
   8:../../libDaisy//src/util/ringbuffer.h **** {
   9:../../libDaisy//src/util/ringbuffer.h **** /** @addtogroup utility
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 41


  10:../../libDaisy//src/util/ringbuffer.h ****     @{
  11:../../libDaisy//src/util/ringbuffer.h **** */
  12:../../libDaisy//src/util/ringbuffer.h **** 
  13:../../libDaisy//src/util/ringbuffer.h **** /**
  14:../../libDaisy//src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libDaisy//src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libDaisy//src/util/ringbuffer.h **** */
  17:../../libDaisy//src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libDaisy//src/util/ringbuffer.h **** class RingBuffer
  19:../../libDaisy//src/util/ringbuffer.h **** {
  20:../../libDaisy//src/util/ringbuffer.h ****   public:
  21:../../libDaisy//src/util/ringbuffer.h ****     RingBuffer() {}
 879              		.loc 18 21 5 is_stmt 1 view .LVU232
 880              		.loc 18 21 5 is_stmt 0 view .LVU233
 881              	.LBE412:
 882              	.LBB413:
 883              	.LBI395:
  86:../../libDaisy//src/hid/midi.h **** 
  87:../../libDaisy//src/hid/midi.h ****     struct Config
 884              		.loc 2 87 12 is_stmt 1 view .LVU234
 885              	.LBB406:
 886              	.LBI396:
  34:../../libDaisy//src/hid/midi.h ****         {
 887              		.loc 2 34 9 view .LVU235
 888              	.LBB403:
 889              	.LBB400:
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 890              		.loc 2 36 13 view .LVU236
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 891              		.loc 2 36 20 is_stmt 0 view .LVU237
 892 0020 C3F82422 		str	r2, [r3, #548]
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 893              		.loc 2 37 13 is_stmt 1 view .LVU238
  38:../../libDaisy//src/hid/midi.h ****         }
 894              		.loc 2 38 20 is_stmt 0 view .LVU239
 895 0024 A3F82AC2 		strh	ip, [r3, #554]	@ movhi
 896              	.LBE400:
 897              	.LBE403:
 898              	.LBE406:
 899              	.LBE413:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 900              		.loc 2 84 19 view .LVU240
 901 0028 4FF0070C 		mov	ip, #7
 902              	.LBB414:
 903              	.LBB415:
 904              	.LBB416:
 905              	.LBB417:
 906              		.loc 17 97 35 view .LVU241
 907 002c C3F82C22 		str	r2, [r3, #556]
 908              	.LBE417:
 909              	.LBE416:
 910              	.LBE415:
 911              	.LBE414:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 912              		.loc 2 84 19 view .LVU242
 913 0030 4FF60F02 		movw	r2, #63503
 914 0034 C3F83012 		str	r1, [r3, #560]
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 42


 915 0038 A3F83422 		strh	r2, [r3, #564]	@ movhi
 916 003c 83F836C2 		strb	ip, [r3, #566]
 917              	.LBB419:
 918              	.LBB407:
 919              	.LBB404:
 920              	.LBB401:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 921              		.loc 2 37 20 view .LVU243
 922 0040 A3F828E2 		strh	lr, [r3, #552]	@ movhi
  38:../../libDaisy//src/hid/midi.h ****         }
 923              		.loc 2 38 13 is_stmt 1 view .LVU244
 924              	.LVL55:
  38:../../libDaisy//src/hid/midi.h ****         }
 925              		.loc 2 38 13 is_stmt 0 view .LVU245
 926              	.LBE401:
 927              	.LBE404:
 928              	.LBE407:
 929              	.LBE419:
 930              	.LBB420:
 931              	.LBI414:
  25:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
 932              		.loc 2 25 5 is_stmt 1 view .LVU246
 933              	.LBB418:
 934              	.LBI415:
 935              		.loc 17 97 5 view .LVU247
 936              		.loc 17 97 5 is_stmt 0 view .LVU248
 937              	.LBE418:
 938              	.LBE420:
 939              	.LBE423:
 940              	.LBE426:
 941              	.LBE448:
 942              	.LBE449:
 943              	.LBE450:
   6:MyProj.cpp    **** dsy_gpio_pin A1Pin;
 944              		.loc 13 6 10 view .LVU249
 945 0044 054A     		ldr	r2, .L23+12
 946 0046 0649     		ldr	r1, .L23+16
 947              	.LBE451:
 948              	.LBE453:
 949              		.loc 13 96 1 view .LVU250
 950 0048 5DF804EB 		ldr	lr, [sp], #4
 951              		.cfi_restore 14
 952              		.cfi_def_cfa_offset 0
 953              	.LBB454:
 954              	.LBB452:
   6:MyProj.cpp    **** dsy_gpio_pin A1Pin;
 955              		.loc 13 6 10 view .LVU251
 956 004c FFF7FEBF 		b	__aeabi_atexit
 957              	.LVL56:
 958              	.L24:
 959              		.align	2
 960              	.L23:
 961 0050 00000000 		.word	hw
 962 0054 00000000 		.word	.LANCHOR7
 963 0058 80707FF0 		.word	-260083584
 964 005c 00000000 		.word	__dso_handle
 965 0060 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 43


 966              	.LBE452:
 967              	.LBE454:
 968              		.cfi_endproc
 969              	.LFE2571:
 971              		.section	.init_array,"aw",%init_array
 972              		.align	2
 973 0000 00000000 		.word	_GLOBAL__sub_I_leaf(target1)
 974              		.global	sensor2
 975              		.global	sensor1
 976              		.global	myMod
 977              		.global	myOsc
 978              		.global	A7Pin
 979              		.global	A1Pin
 980              		.global	hw
 981              		.global	leafMemory
 982              		.global	leaf
 983              		.section	.rodata
 984              		.align	2
 985              		.set	.LANCHOR7,. + 0
 986              	.LC0:
 987 0000 01       		.byte	1
 988 0001 07       		.byte	7
 989 0002 0000     		.space	2
 990              	.LC1:
 991 0004 01       		.byte	1
 992 0005 06       		.byte	6
 993              		.section	.bss.A1Pin,"aw",%nobits
 994              		.align	2
 995              		.set	.LANCHOR4,. + 0
 998              	A1Pin:
 999 0000 0000     		.space	2
 1000              		.section	.bss.A7Pin,"aw",%nobits
 1001              		.align	2
 1002              		.set	.LANCHOR5,. + 0
 1005              	A7Pin:
 1006 0000 0000     		.space	2
 1007              		.section	.bss.hw,"aw",%nobits
 1008              		.align	2
 1011              	hw:
 1012 0000 00000000 		.space	37432
 1012      00000000 
 1012      00000000 
 1012      00000000 
 1012      00000000 
 1013              		.section	.bss.leaf,"aw",%nobits
 1014              		.align	2
 1015              		.set	.LANCHOR6,. + 0
 1018              	leaf:
 1019 0000 00000000 		.space	80
 1019      00000000 
 1019      00000000 
 1019      00000000 
 1019      00000000 
 1020              		.section	.bss.leafMemory,"aw",%nobits
 1021              		.align	2
 1024              	leafMemory:
 1025 0000 00000000 		.space	65535
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 44


 1025      00000000 
 1025      00000000 
 1025      00000000 
 1025      00000000 
 1026              		.section	.bss.myMod,"aw",%nobits
 1027              		.align	2
 1028              		.set	.LANCHOR0,. + 0
 1031              	myMod:
 1032 0000 00000000 		.space	4
 1033              		.section	.bss.myOsc,"aw",%nobits
 1034              		.align	2
 1035              		.set	.LANCHOR3,. + 0
 1038              	myOsc:
 1039 0000 00000000 		.space	4
 1040              		.section	.bss.sensor1,"aw",%nobits
 1041              		.align	2
 1042              		.set	.LANCHOR1,. + 0
 1045              	sensor1:
 1046 0000 00000000 		.space	4
 1047              		.section	.bss.sensor2,"aw",%nobits
 1048              		.align	2
 1049              		.set	.LANCHOR2,. + 0
 1052              	sensor2:
 1053 0000 00000000 		.space	4
 1054              		.text
 1055              	.Letext0:
 1056              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 1057              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 1058              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 1059              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 1060              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 1061              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 1062              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 1063              		.file 26 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 1064              		.file 27 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 1065              		.file 28 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 1066              		.file 29 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 1067              		.file 30 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 1068              		.file 31 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 1069              		.file 32 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 1070              		.file 33 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 1071              		.file 34 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 1072              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 1073              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 1074              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 1075              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 1076              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 1077              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 1078              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 1079              		.file 42 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 1080              		.file 43 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 1081              		.file 44 "../../libDaisy//src/per/tim.h"
 1082              		.file 45 "../../libDaisy//src/per/sai.h"
 1083              		.file 46 "../../libDaisy//src/hid/MidiEvent.h"
 1084              		.file 47 "../../libDaisy//src/per/rng.h"
 1085              		.file 48 "../../libDaisy//src/util/wav_format.h"
 1086              		.file 49 "../../libDaisy//src/util/color.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 45


 1087              		.file 50 "../../libDaisy//src/dev/max11300.h"
 1088              		.file 51 "../../libDaisy//src/per/gpio.h"
 1089              		.file 52 "../../libDaisy//src/dev/sdram.h"
 1090              		.file 53 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 1091              		.file 54 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 1092              		.file 55 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 1093              		.file 56 "../../../LEAF/leaf/./Inc/leaf-mempool.h"
 1094              		.file 57 "../../../LEAF/leaf/./Inc/leaf-global.h"
 1095              		.file 58 "../../../LEAF/leaf/./Inc/leaf-oscillators.h"
 1096              		.file 59 "../../libDaisy//src/dev/sr_595.h"
 1097              		.file 60 "../../../LEAF/leaf/leaf.h"
 1098              		.file 61 "<built-in>"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 46


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MyProj.cpp
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:19     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD2Ev
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD1Ev
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:154    .text._Z12randomNumberv:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:161    .text._Z12randomNumberv:0000000000000000 _Z12randomNumberv
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:178    .text._Z12randomNumberv:000000000000000c $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:183    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:190    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:383    .text._Z13AudioCallbackPKPKfPPfj:00000000000000c0 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:1011   .bss.hw:0000000000000000 hw
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:397    .text.startup.main:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:404    .text.startup.main:0000000000000000 main
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:615    .text.startup.main:0000000000000110 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:1024   .bss.leafMemory:0000000000000000 leafMemory
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:630    .text.startup._GLOBAL__sub_I_leaf:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:636    .text.startup._GLOBAL__sub_I_leaf:0000000000000000 _GLOBAL__sub_I_leaf
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:961    .text.startup._GLOBAL__sub_I_leaf:0000000000000050 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:972    .init_array:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:1052   .bss.sensor2:0000000000000000 sensor2
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:1045   .bss.sensor1:0000000000000000 sensor1
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:1031   .bss.myMod:0000000000000000 myMod
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:1038   .bss.myOsc:0000000000000000 myOsc
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:1005   .bss.A7Pin:0000000000000000 A7Pin
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:998    .bss.A1Pin:0000000000000000 A1Pin
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:1018   .bss.leaf:0000000000000000 leaf
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:984    .rodata:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:994    .bss.A1Pin:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:1001   .bss.A7Pin:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:1008   .bss.hw:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:1014   .bss.leaf:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:1021   .bss.leafMemory:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:1027   .bss.myMod:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:1034   .bss.myOsc:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:1041   .bss.sensor1:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s:1048   .bss.sensor2:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy8DaisyPodD5Ev

UNDEFINED SYMBOLS
_ZN5daisy6Random8GetFloatEff
_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
tPBSaw_setFreq
tPBSaw_tick
_ZNK5daisy9AdcHandle8GetFloatEh
tPBPulse_setFreq
tPBPulse_setWidth
tPBPulse_tick
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZNK5daisy9AdcHandle6GetPtrEh
_ZNK5daisy9DaisySeed17AudioCallbackRateEv
_ZN5daisy13AnalogControl4InitEPtfbbf
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccSDicWF.s 			page 47


_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy6Random4InitEv
_ZN5daisy8DaisyPod8StartAdcEv
LEAF_init
tPBPulse_init
tPBSaw_init
_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
_ZN5daisy8DaisyPod10UpdateLedsEv
__aeabi_atexit
__dso_handle
