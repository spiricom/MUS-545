ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"MyProj.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  19              		.align	1
  20              		.p2align 2,,3
  21              		.weak	_ZN5daisy8DaisyPodD2Ev
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN5daisy8DaisyPodD2Ev:
  27              	.LVL0:
  28              	.LFB2538:
  29              		.file 1 "../../libDaisy//src/daisy_pod.h"
   1:../../libDaisy//src/daisy_pod.h **** #pragma once
   2:../../libDaisy//src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../../libDaisy//src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../../libDaisy//src/daisy_pod.h **** 
   5:../../libDaisy//src/daisy_pod.h **** #include "daisy_seed.h"
   6:../../libDaisy//src/daisy_pod.h **** 
   7:../../libDaisy//src/daisy_pod.h **** namespace daisy
   8:../../libDaisy//src/daisy_pod.h **** {
   9:../../libDaisy//src/daisy_pod.h **** /**
  10:../../libDaisy//src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libDaisy//src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libDaisy//src/daisy_pod.h ****     @author Stephen Hensley
  13:../../libDaisy//src/daisy_pod.h ****     @date November 2019
  14:../../libDaisy//src/daisy_pod.h ****     @ingroup boards
  15:../../libDaisy//src/daisy_pod.h **** */
  16:../../libDaisy//src/daisy_pod.h **** class DaisyPod
  17:../../libDaisy//src/daisy_pod.h **** {
  18:../../libDaisy//src/daisy_pod.h ****   public:
  19:../../libDaisy//src/daisy_pod.h ****     /** Switches */
  20:../../libDaisy//src/daisy_pod.h ****     enum Sw
  21:../../libDaisy//src/daisy_pod.h ****     {
  22:../../libDaisy//src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../../libDaisy//src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../../libDaisy//src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../../libDaisy//src/daisy_pod.h ****     };
  26:../../libDaisy//src/daisy_pod.h **** 
  27:../../libDaisy//src/daisy_pod.h ****     /** Knobs */
  28:../../libDaisy//src/daisy_pod.h ****     enum Knob
  29:../../libDaisy//src/daisy_pod.h ****     {
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 2


  30:../../libDaisy//src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../../libDaisy//src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../../libDaisy//src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../../libDaisy//src/daisy_pod.h ****     };
  34:../../libDaisy//src/daisy_pod.h **** 
  35:../../libDaisy//src/daisy_pod.h ****     DaisyPod() {}
  36:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
  30              		.loc 1 36 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB265:
  36              	.LBI265:
  37              		.file 2 "../../libDaisy//src/hid/midi.h"
   1:../../libDaisy//src/hid/midi.h **** #pragma once
   2:../../libDaisy//src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libDaisy//src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libDaisy//src/hid/midi.h **** 
   5:../../libDaisy//src/hid/midi.h **** // TODO: make this adjustable
   6:../../libDaisy//src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libDaisy//src/hid/midi.h **** 
   8:../../libDaisy//src/hid/midi.h **** #include <stdint.h>
   9:../../libDaisy//src/hid/midi.h **** #include <stdlib.h>
  10:../../libDaisy//src/hid/midi.h **** #include "per/uart.h"
  11:../../libDaisy//src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libDaisy//src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libDaisy//src/hid/midi.h **** #include "hid/usb_midi.h"
  14:../../libDaisy//src/hid/midi.h **** #include "sys/system.h"
  15:../../libDaisy//src/hid/midi.h **** 
  16:../../libDaisy//src/hid/midi.h **** namespace daisy
  17:../../libDaisy//src/hid/midi.h **** {
  18:../../libDaisy//src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART 
  19:../../libDaisy//src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../../libDaisy//src/hid/midi.h ****  *  @ingroup midi
  21:../../libDaisy//src/hid/midi.h **** */
  22:../../libDaisy//src/hid/midi.h **** class MidiUartTransport
  23:../../libDaisy//src/hid/midi.h **** {
  24:../../libDaisy//src/hid/midi.h ****   public:
  25:../../libDaisy//src/hid/midi.h ****     MidiUartTransport() {}
  26:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
  27:../../libDaisy//src/hid/midi.h **** 
  28:../../libDaisy//src/hid/midi.h ****     struct Config
  29:../../libDaisy//src/hid/midi.h ****     {
  30:../../libDaisy//src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  31:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    rx;
  32:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    tx;
  33:../../libDaisy//src/hid/midi.h **** 
  34:../../libDaisy//src/hid/midi.h ****         Config()
  35:../../libDaisy//src/hid/midi.h ****         {
  36:../../libDaisy//src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  37:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  38:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  39:../../libDaisy//src/hid/midi.h ****         }
  40:../../libDaisy//src/hid/midi.h ****     };
  41:../../libDaisy//src/hid/midi.h **** 
  42:../../libDaisy//src/hid/midi.h ****     inline void Init(Config config)
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 3


  43:../../libDaisy//src/hid/midi.h ****     {
  44:../../libDaisy//src/hid/midi.h ****         UartHandler::Config uart_config;
  45:../../libDaisy//src/hid/midi.h **** 
  46:../../libDaisy//src/hid/midi.h ****         //defaults
  47:../../libDaisy//src/hid/midi.h ****         uart_config.baudrate   = 31250;
  48:../../libDaisy//src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  49:../../libDaisy//src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  50:../../libDaisy//src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  51:../../libDaisy//src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  52:../../libDaisy//src/hid/midi.h **** 
  53:../../libDaisy//src/hid/midi.h ****         //user settings
  54:../../libDaisy//src/hid/midi.h ****         uart_config.periph        = config.periph;
  55:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  56:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  57:../../libDaisy//src/hid/midi.h **** 
  58:../../libDaisy//src/hid/midi.h ****         uart_.Init(uart_config);
  59:../../libDaisy//src/hid/midi.h ****     }
  60:../../libDaisy//src/hid/midi.h **** 
  61:../../libDaisy//src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  62:../../libDaisy//src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  63:../../libDaisy//src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  64:../../libDaisy//src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  65:../../libDaisy//src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  66:../../libDaisy//src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  67:../../libDaisy//src/hid/midi.h **** 
  68:../../libDaisy//src/hid/midi.h ****   private:
  69:../../libDaisy//src/hid/midi.h ****     UartHandler uart_;
  70:../../libDaisy//src/hid/midi.h **** };
  71:../../libDaisy//src/hid/midi.h **** 
  72:../../libDaisy//src/hid/midi.h **** /** 
  73:../../libDaisy//src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  74:../../libDaisy//src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  75:../../libDaisy//src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  76:../../libDaisy//src/hid/midi.h ****     @author shensley
  77:../../libDaisy//src/hid/midi.h ****     @date March 2020
  78:../../libDaisy//src/hid/midi.h ****     @ingroup midi
  79:../../libDaisy//src/hid/midi.h **** */
  80:../../libDaisy//src/hid/midi.h **** template <typename Transport>
  81:../../libDaisy//src/hid/midi.h **** class MidiHandler
  82:../../libDaisy//src/hid/midi.h **** {
  83:../../libDaisy//src/hid/midi.h ****   public:
  84:../../libDaisy//src/hid/midi.h ****     MidiHandler() {}
  85:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
  38              		.loc 2 85 5 view .LVU1
  39              	.LBB266:
  40              	.LBI266:
  26:../../libDaisy//src/hid/midi.h **** 
  41              		.loc 2 26 5 view .LVU2
  26:../../libDaisy//src/hid/midi.h **** 
  42              		.loc 2 26 5 is_stmt 0 view .LVU3
  43              	.LBE266:
  44              	.LBE265:
  45              	.LBB267:
  46              	.LBI267:
  47              		.file 3 "../../libDaisy//src/hid/rgb_led.h"
   1:../../libDaisy//src/hid/rgb_led.h **** #pragma once
   2:../../libDaisy//src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 4


   3:../../libDaisy//src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../../libDaisy//src/hid/rgb_led.h **** #include "hid/led.h"
   5:../../libDaisy//src/hid/rgb_led.h **** #include "util/color.h"
   6:../../libDaisy//src/hid/rgb_led.h **** 
   7:../../libDaisy//src/hid/rgb_led.h **** namespace daisy
   8:../../libDaisy//src/hid/rgb_led.h **** {
   9:../../libDaisy//src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../../libDaisy//src/hid/rgb_led.h ****     @{
  11:../../libDaisy//src/hid/rgb_led.h **** */
  12:../../libDaisy//src/hid/rgb_led.h **** 
  13:../../libDaisy//src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../../libDaisy//src/hid/rgb_led.h **** class RgbLed
  15:../../libDaisy//src/hid/rgb_led.h **** {
  16:../../libDaisy//src/hid/rgb_led.h ****   public:
  17:../../libDaisy//src/hid/rgb_led.h ****     RgbLed() {}
  18:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
  48              		.loc 3 18 5 is_stmt 1 view .LVU4
  49              	.LBB268:
  50              	.LBI268:
  51              		.file 4 "../../libDaisy//src/hid/led.h"
   1:../../libDaisy//src/hid/led.h **** 
   2:../../libDaisy//src/hid/led.h **** #pragma once
   3:../../libDaisy//src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libDaisy//src/hid/led.h **** #define DSY_LED_H
   5:../../libDaisy//src/hid/led.h **** #include "daisy_core.h"
   6:../../libDaisy//src/hid/led.h **** #include "per/gpio.h"
   7:../../libDaisy//src/hid/led.h **** 
   8:../../libDaisy//src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libDaisy//src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libDaisy//src/hid/led.h **** */
  11:../../libDaisy//src/hid/led.h **** 
  12:../../libDaisy//src/hid/led.h **** namespace daisy
  13:../../libDaisy//src/hid/led.h **** {
  14:../../libDaisy//src/hid/led.h **** /**
  15:../../libDaisy//src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libDaisy//src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libDaisy//src/hid/led.h ****     @author shensley
  18:../../libDaisy//src/hid/led.h ****     @date March 2020
  19:../../libDaisy//src/hid/led.h ****     @ingroup feedback
  20:../../libDaisy//src/hid/led.h **** */
  21:../../libDaisy//src/hid/led.h **** class Led
  22:../../libDaisy//src/hid/led.h **** {
  23:../../libDaisy//src/hid/led.h ****   public:
  24:../../libDaisy//src/hid/led.h ****     Led() {}
  25:../../libDaisy//src/hid/led.h ****     ~Led() {}
  52              		.loc 4 25 5 view .LVU5
  53              		.loc 4 25 5 is_stmt 0 view .LVU6
  54              	.LBE268:
  55              	.LBB269:
  56              	.LBI269:
  57              		.loc 4 25 5 is_stmt 1 view .LVU7
  58              		.loc 4 25 5 is_stmt 0 view .LVU8
  59              	.LBE269:
  60              	.LBB270:
  61              	.LBI270:
  62              		.loc 4 25 5 is_stmt 1 view .LVU9
  63              		.loc 4 25 5 is_stmt 0 view .LVU10
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 5


  64              	.LBE270:
  65              	.LBE267:
  66              	.LBB271:
  67              	.LBI271:
  68              		.loc 3 18 5 is_stmt 1 view .LVU11
  69              	.LBB272:
  70              	.LBI272:
  71              		.loc 4 25 5 view .LVU12
  72              		.loc 4 25 5 is_stmt 0 view .LVU13
  73              	.LBE272:
  74              	.LBB273:
  75              	.LBI273:
  76              		.loc 4 25 5 is_stmt 1 view .LVU14
  77              		.loc 4 25 5 is_stmt 0 view .LVU15
  78              	.LBE273:
  79              	.LBB274:
  80              	.LBI274:
  81              		.loc 4 25 5 is_stmt 1 view .LVU16
  82              		.loc 4 25 5 is_stmt 0 view .LVU17
  83              	.LBE274:
  84              	.LBE271:
  85              	.LBB275:
  86              	.LBI275:
  87              		.file 5 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 6


  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  88              		.loc 5 42 5 is_stmt 1 view .LVU18
  89              		.loc 5 42 5 is_stmt 0 view .LVU19
  90              	.LBE275:
  91              	.LBB276:
  92              	.LBI276:
  93              		.loc 5 42 5 is_stmt 1 view .LVU20
  94              		.loc 5 42 5 is_stmt 0 view .LVU21
  95              	.LBE276:
  96              	.LBB277:
  97              	.LBI277:
  98              		.file 6 "../../libDaisy//src/hid/ctrl.h"
   1:../../libDaisy//src/hid/ctrl.h **** #pragma once
   2:../../libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/ctrl.h **** 
   6:../../libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libDaisy//src/hid/ctrl.h **** namespace daisy
   8:../../libDaisy//src/hid/ctrl.h **** {
   9:../../libDaisy//src/hid/ctrl.h **** /**
  10:../../libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../../libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../../libDaisy//src/hid/ctrl.h **** */
  17:../../libDaisy//src/hid/ctrl.h **** class AnalogControl
  18:../../libDaisy//src/hid/ctrl.h **** {
  19:../../libDaisy//src/hid/ctrl.h ****   public:
  20:../../libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../../libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../../libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
  99              		.loc 6 23 5 is_stmt 1 view .LVU22
 100              		.loc 6 23 5 is_stmt 0 view .LVU23
 101              	.LBE277:
 102              	.LBB278:
 103              	.LBI278:
 104              		.loc 6 23 5 is_stmt 1 view .LVU24
 105              		.loc 6 23 5 is_stmt 0 view .LVU25
 106              	.LBE278:
 107              	.LBB279:
 108              	.LBI279:
 109              		.file 7 "../../libDaisy//src/hid/encoder.h"
   1:../../libDaisy//src/hid/encoder.h **** #pragma once
   2:../../libDaisy//src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libDaisy//src/hid/encoder.h **** #define DSY_ENCODER_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 7


   4:../../libDaisy//src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libDaisy//src/hid/encoder.h **** 
   8:../../libDaisy//src/hid/encoder.h **** namespace daisy
   9:../../libDaisy//src/hid/encoder.h **** {
  10:../../libDaisy//src/hid/encoder.h **** /** 
  11:../../libDaisy//src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libDaisy//src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libDaisy//src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/encoder.h ****     @date December 2019
  15:../../libDaisy//src/hid/encoder.h ****     @ingroup controls
  16:../../libDaisy//src/hid/encoder.h **** */
  17:../../libDaisy//src/hid/encoder.h **** class Encoder
  18:../../libDaisy//src/hid/encoder.h **** {
  19:../../libDaisy//src/hid/encoder.h ****   public:
  20:../../libDaisy//src/hid/encoder.h ****     Encoder() {}
  21:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 110              		.loc 7 21 5 is_stmt 1 view .LVU26
 111              	.LBB280:
 112              	.LBI280:
 113              		.loc 5 42 5 view .LVU27
 114              		.loc 5 42 5 is_stmt 0 view .LVU28
 115              	.LBE280:
 116              	.LBE279:
 117              	.LBB281:
 118              	.LBI281:
 119              		.file 8 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 120              		.loc 8 22 5 is_stmt 1 view .LVU29
 121              	.LBB282:
 122              	.LBI282:
 123              		.file 9 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 8


   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 9


  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
 124              		.loc 9 78 5 view .LVU30
 125              		.loc 9 78 5 is_stmt 0 view .LVU31
 126              	.LBE282:
 127              	.LBB283:
 128              	.LBI283:
 129              		.file 10 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 10


  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 130              		.loc 10 42 5 is_stmt 1 view .LVU32
 131              		.loc 10 42 5 is_stmt 0 view .LVU33
 132              	.LBE283:
 133              	.LBB284:
 134              	.LBI284:
 135              		.file 11 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 11


  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 136              		.loc 11 93 5 is_stmt 1 view .LVU34
 137              		.loc 11 93 5 is_stmt 0 view .LVU35
 138              	.LBE284:
 139              	.LBB285:
 140              	.LBI285:
 141              		.file 12 "../../libDaisy//src/hid/audio.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 12


   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 13


  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 142              		.loc 12 96 5 is_stmt 1 view .LVU36
 143              		.loc 12 96 5 is_stmt 0 view .LVU37
 144              	.LBE285:
 145              	.LBE281:
 146              		.loc 1 36 18 view .LVU38
 147 0000 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE2538:
 151              		.weak	_ZN5daisy8DaisyPodD1Ev
 152              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 153 0002 00BF     		.section	.text._Z12randomNumberv,"ax",%progbits
 154              		.align	1
 155              		.p2align 2,,3
 156              		.global	_Z12randomNumberv
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	_Z12randomNumberv:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 14


 162              	.LFB2541:
 163              		.file 13 "MyProj.cpp"
   1:MyProj.cpp    **** #include "daisy_pod.h"
   2:MyProj.cpp    **** #include "leaf.h"
   3:MyProj.cpp    **** using namespace daisy;
   4:MyProj.cpp    **** LEAF leaf;
   5:MyProj.cpp    **** char leafMemory[65535];
   6:MyProj.cpp    **** DaisyPod hw;
   7:MyProj.cpp    **** tCycle mySine;
   8:MyProj.cpp    **** //let's define a global variable to store the frequency so we can easily mess with it in our progra
   9:MyProj.cpp    **** float myFreq = 220.0f;
  10:MyProj.cpp    **** //let's store the semitone offsets for the notes of a major (counting semitones from the tonic for 
  11:MyProj.cpp    **** //we are storing it in an "array" of integers, which we define by using the [] square bracket notat
  12:MyProj.cpp    **** // majorScale[8], and the number in the square brackets means how many integers in the array.
  13:MyProj.cpp    **** // then we can, in the same line if we want, set the values of the integers in the array by writing
  14:MyProj.cpp    **** // separated by commas, and framed by curly braces. ={x,y,z}  and end it with a semicolon as usual
  15:MyProj.cpp    **** int majorScale[8] = {0,2,4,5,7,9,11,12};
  16:MyProj.cpp    **** 
  17:MyProj.cpp    **** //COMPLICATED WHY WOULD YOU DO THAT
  18:MyProj.cpp    **** //this example uses a knob to play a scale instead of just a glissando.
  19:MyProj.cpp    **** // I wanted to demonstrate using midi-to-frequency conversion and arrays.
  20:MyProj.cpp    **** 
  21:MyProj.cpp    **** 
  22:MyProj.cpp    **** float randomNumber()
  23:MyProj.cpp    **** {
 164              		.loc 13 23 1 is_stmt 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
  24:MyProj.cpp    ****     return Random::GetFloat(0.0f, 1.0f);
 169              		.loc 13 24 5 view .LVU40
 170              		.loc 13 24 28 is_stmt 0 view .LVU41
 171 0000 F7EE000A 		vmov.f32	s1, #1.0e+0
 172 0004 9FED010A 		vldr.32	s0, .L4
 173 0008 FFF7FEBF 		b	_ZN5daisy6Random8GetFloatEff
 174              	.LVL1:
 175              	.L5:
 176              		.align	2
 177              	.L4:
 178 000c 00000000 		.word	0
 179              		.cfi_endproc
 180              	.LFE2541:
 182              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 183              		.align	1
 184              		.p2align 2,,3
 185              		.global	_Z13AudioCallbackPKPKfPPfj
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	_Z13AudioCallbackPKPKfPPfj:
 191              	.LVL2:
 192              	.LFB2542:
  25:MyProj.cpp    **** }
  26:MyProj.cpp    **** 
  27:MyProj.cpp    **** 
  28:MyProj.cpp    **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 15


  29:MyProj.cpp    **** {
 193              		.loc 13 29 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
  30:MyProj.cpp    ****     hw.ProcessAllControls();
 197              		.loc 13 30 5 view .LVU43
 198              	.LBB286:
 199              	.LBI286:
  37:../../libDaisy//src/daisy_pod.h **** 
  38:../../libDaisy//src/daisy_pod.h ****     /** Init related stuff. */
  39:../../libDaisy//src/daisy_pod.h ****     void Init(bool boost = false);
  40:../../libDaisy//src/daisy_pod.h **** 
  41:../../libDaisy//src/daisy_pod.h ****     /** Wait for a bit
  42:../../libDaisy//src/daisy_pod.h ****     \param del Time to wait in ms.
  43:../../libDaisy//src/daisy_pod.h ****     */
  44:../../libDaisy//src/daisy_pod.h ****     void DelayMs(size_t del);
  45:../../libDaisy//src/daisy_pod.h **** 
  46:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  47:../../libDaisy//src/daisy_pod.h ****     \param cb Interleaved callback function
  48:../../libDaisy//src/daisy_pod.h ****     */
  49:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  50:../../libDaisy//src/daisy_pod.h **** 
  51:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  52:../../libDaisy//src/daisy_pod.h ****     \param cb multichannel callback function
  53:../../libDaisy//src/daisy_pod.h ****     */
  54:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  55:../../libDaisy//src/daisy_pod.h **** 
  56:../../libDaisy//src/daisy_pod.h ****     /**
  57:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  58:../../libDaisy//src/daisy_pod.h ****        \param cb New interleaved callback function.
  59:../../libDaisy//src/daisy_pod.h ****     */
  60:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  61:../../libDaisy//src/daisy_pod.h **** 
  62:../../libDaisy//src/daisy_pod.h ****     /**
  63:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  64:../../libDaisy//src/daisy_pod.h ****        \param cb New multichannel callback function.
  65:../../libDaisy//src/daisy_pod.h ****     */
  66:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  67:../../libDaisy//src/daisy_pod.h **** 
  68:../../libDaisy//src/daisy_pod.h ****     /** Stops the audio if it is running. */
  69:../../libDaisy//src/daisy_pod.h ****     void StopAudio();
  70:../../libDaisy//src/daisy_pod.h **** 
  71:../../libDaisy//src/daisy_pod.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  72:../../libDaisy//src/daisy_pod.h ****      ** Audio must be stopped for this to work.
  73:../../libDaisy//src/daisy_pod.h ****      */
  74:../../libDaisy//src/daisy_pod.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  75:../../libDaisy//src/daisy_pod.h **** 
  76:../../libDaisy//src/daisy_pod.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  77:../../libDaisy//src/daisy_pod.h ****      */
  78:../../libDaisy//src/daisy_pod.h ****     float AudioSampleRate();
  79:../../libDaisy//src/daisy_pod.h **** 
  80:../../libDaisy//src/daisy_pod.h ****     /** Sets the number of samples processed per channel by the audio callback.
  81:../../libDaisy//src/daisy_pod.h ****      */
  82:../../libDaisy//src/daisy_pod.h ****     void SetAudioBlockSize(size_t blocksize);
  83:../../libDaisy//src/daisy_pod.h **** 
  84:../../libDaisy//src/daisy_pod.h ****     /** Returns the number of samples per channel in a block of audio. */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 16


  85:../../libDaisy//src/daisy_pod.h ****     size_t AudioBlockSize();
  86:../../libDaisy//src/daisy_pod.h **** 
  87:../../libDaisy//src/daisy_pod.h ****     /** Returns the rate in Hz that the Audio callback is called */
  88:../../libDaisy//src/daisy_pod.h ****     float AudioCallbackRate();
  89:../../libDaisy//src/daisy_pod.h **** 
  90:../../libDaisy//src/daisy_pod.h ****     /**
  91:../../libDaisy//src/daisy_pod.h ****        Start analog to digital conversion.
  92:../../libDaisy//src/daisy_pod.h ****      */
  93:../../libDaisy//src/daisy_pod.h ****     void StartAdc();
  94:../../libDaisy//src/daisy_pod.h **** 
  95:../../libDaisy//src/daisy_pod.h ****     /** Stops Transfering data from the ADC */
  96:../../libDaisy//src/daisy_pod.h ****     void StopAdc();
  97:../../libDaisy//src/daisy_pod.h **** 
  98:../../libDaisy//src/daisy_pod.h ****     /** Call at same rate as analog reads for smooth reading.*/
  99:../../libDaisy//src/daisy_pod.h ****     void ProcessAnalogControls();
 100:../../libDaisy//src/daisy_pod.h **** 
 101:../../libDaisy//src/daisy_pod.h ****     /** Process Analog and Digital Controls */
 102:../../libDaisy//src/daisy_pod.h ****     inline void ProcessAllControls()
 200              		.loc 1 102 17 view .LVU44
 201              	.LBB287:
 103:../../libDaisy//src/daisy_pod.h ****     {
 104:../../libDaisy//src/daisy_pod.h ****         ProcessAnalogControls();
 202              		.loc 1 104 9 view .LVU45
 203              	.LBE287:
 204              	.LBE286:
  29:MyProj.cpp    ****     hw.ProcessAllControls();
 205              		.loc 13 29 1 is_stmt 0 view .LVU46
 206 0000 70B5     		push	{r4, r5, r6, lr}
 207              		.cfi_def_cfa_offset 16
 208              		.cfi_offset 4, -16
 209              		.cfi_offset 5, -12
 210              		.cfi_offset 6, -8
 211              		.cfi_offset 14, -4
 212              	.LBB290:
 213              	.LBB288:
 214              		.loc 1 104 30 view .LVU47
 215 0002 2248     		ldr	r0, .L14
 216              	.LVL3:
 217              		.loc 1 104 30 view .LVU48
 218              	.LBE288:
 219              	.LBE290:
  29:MyProj.cpp    ****     hw.ProcessAllControls();
 220              		.loc 13 29 1 view .LVU49
 221 0004 1646     		mov	r6, r2
 222 0006 0D46     		mov	r5, r1
 223              	.LBB291:
 224              	.LBB289:
 225              		.loc 1 104 30 view .LVU50
 226 0008 FFF7FEFF 		bl	_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
 227              	.LVL4:
 105:../../libDaisy//src/daisy_pod.h ****         ProcessDigitalControls();
 228              		.loc 1 105 9 is_stmt 1 view .LVU51
 229              		.loc 1 105 31 is_stmt 0 view .LVU52
 230 000c 1F48     		ldr	r0, .L14
 231 000e FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
 232              	.LVL5:
 233              		.loc 1 105 31 view .LVU53
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 17


 234              	.LBE289:
 235              	.LBE291:
  31:MyProj.cpp    ****     
  32:MyProj.cpp    ****     //let's make a temporary variable to figure out what note to play. 
  33:MyProj.cpp    ****     //how about knob1 sets which note of the major scale, and knob2 sets what the root of the scale
  34:MyProj.cpp    ****     //we can calculate things using midi notes (just treating the piano notes as numbers). Then we 
  35:MyProj.cpp    ****     //to turn that into frequencies, which the tCycle object needs. 
  36:MyProj.cpp    **** 
  37:MyProj.cpp    ****     //let's make a variable we'll use as the midi note value.
  38:MyProj.cpp    ****     int theNote;
 236              		.loc 13 38 5 is_stmt 1 view .LVU54
  39:MyProj.cpp    **** 
  40:MyProj.cpp    ****     //now let's try to get the knob data to be a number between zero and 7. We've got 8 notes (coun
  41:MyProj.cpp    ****     // so let's turn our 0-1 values from the knob into 0-7. If we multiply by 7, that would sort of
  42:MyProj.cpp    ****     // appear at the extreme end of the knob's range. Instead, let's multiply 0-1 by 7.99. Then we 
  43:MyProj.cpp    ****     // distribution of the numbers. Let's make another temporary variable to store that, just to ke
  44:MyProj.cpp    ****     int scaleDegree = hw.GetKnobValue(hw.KNOB_1) * 7.999f;
 237              		.loc 13 44 5 view .LVU55
 238              		.loc 13 44 38 is_stmt 0 view .LVU56
 239 0012 0021     		movs	r1, #0
 240 0014 1D48     		ldr	r0, .L14
 241 0016 FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 242              	.LVL6:
  45:MyProj.cpp    ****     //how can we trust it'll get truncated to just the integer values? by storing it in an integer 
  46:MyProj.cpp    ****     //note that it doesn't round. It just loses everything after the decimal point. So 7.9999 is 7.
  47:MyProj.cpp    **** 
  48:MyProj.cpp    ****     //now let's use that "scaleDegree" as an index into the array we defined up top. 
  49:MyProj.cpp    ****     //how do we do that?
  50:MyProj.cpp    ****     // you can retrieve a value from an element of an array by typing arrayName[whichIndex]. 
  51:MyProj.cpp    ****     //So majorScale[0] will give us 0, and majorScale[1] will give us 2, and majorScale[2] will giv
  52:MyProj.cpp    ****     int scaleNote = majorScale[scaleDegree];
 243              		.loc 13 52 5 is_stmt 1 view .LVU57
  44:MyProj.cpp    ****     //how can we trust it'll get truncated to just the integer values? by storing it in an integer 
 244              		.loc 13 44 50 is_stmt 0 view .LVU58
 245 001a DFED1D7A 		vldr.32	s15, .L14+4
 246              		.loc 13 52 9 view .LVU59
 247 001e 1D4B     		ldr	r3, .L14+8
  53:MyProj.cpp    ****     //now theNote has a value that is either 0, 2, 4, 5, 7, 9, 11 or 12, depending on the position 
  54:MyProj.cpp    **** 
  55:MyProj.cpp    ****     // let's add some offset to this to set what pitch our major scale starts on. midinote 60 is mi
  56:MyProj.cpp    ****     int startingNote = hw.GetKnobValue(hw.KNOB_2) * 12.99f;
 248              		.loc 13 56 39 view .LVU60
 249 0020 0121     		movs	r1, #1
  44:MyProj.cpp    ****     //how can we trust it'll get truncated to just the integer values? by storing it in an integer 
 250              		.loc 13 44 50 view .LVU61
 251 0022 20EE270A 		vmul.f32	s0, s0, s15
 252              	.LVL7:
 253              		.loc 13 56 39 view .LVU62
 254 0026 1948     		ldr	r0, .L14
  44:MyProj.cpp    ****     //how can we trust it'll get truncated to just the integer values? by storing it in an integer 
 255              		.loc 13 44 52 view .LVU63
 256 0028 BDEEC00A 		vcvt.s32.f32	s0, s0
  52:MyProj.cpp    ****     //now theNote has a value that is either 0, 2, 4, 5, 7, 9, 11 or 12, depending on the position 
 257              		.loc 13 52 9 view .LVU64
 258 002c 10EE102A 		vmov	r2, s0	@ int
 259 0030 53F82240 		ldr	r4, [r3, r2, lsl #2]
 260              	.LVL8:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 18


 261              		.loc 13 56 5 is_stmt 1 view .LVU65
 262              		.loc 13 56 39 is_stmt 0 view .LVU66
 263 0034 FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 264              	.LVL9:
 265              		.loc 13 56 51 view .LVU67
 266 0038 DFED177A 		vldr.32	s15, .L14+12
 267 003c 20EE270A 		vmul.f32	s0, s0, s15
 268              		.loc 13 56 53 view .LVU68
 269 0040 BDEEC00A 		vcvt.s32.f32	s0, s0
 270              	.LVL10:
  57:MyProj.cpp    ****     //this one will give us a chromatic scale within an octave. 
  58:MyProj.cpp    ****     //let's add 60 to that so it starts on middle c and goes up to high c.
  59:MyProj.cpp    ****     //note that we don't put the "int" in front of startingNote this time because it's already been
  60:MyProj.cpp    ****     startingNote = startingNote + 60;
 271              		.loc 13 60 5 is_stmt 1 view .LVU69
  61:MyProj.cpp    **** 
  62:MyProj.cpp    ****     //now let's put the starting note and the scale note together to get our final midinote
  63:MyProj.cpp    ****     theNote = startingNote + scaleNote;
 272              		.loc 13 63 5 view .LVU70
  64:MyProj.cpp    **** 
  65:MyProj.cpp    ****     //OK, but it's still not a frequency. Let's make it one with the mtof function that's built int
  66:MyProj.cpp    ****     myFreq = mtof(theNote);
 273              		.loc 13 66 5 view .LVU71
  60:MyProj.cpp    **** 
 274              		.loc 13 60 18 is_stmt 0 view .LVU72
 275 0044 10EE103A 		vmov	r3, s0	@ int
 276 0048 3C33     		adds	r3, r3, #60
 277              	.LVL11:
  63:MyProj.cpp    **** 
 278              		.loc 13 63 13 view .LVU73
 279 004a 2344     		add	r3, r3, r4
 280              	.LVL12:
  63:MyProj.cpp    **** 
 281              		.loc 13 63 13 view .LVU74
 282 004c 00EE103A 		vmov	s0, r3	@ int
 283              	.LVL13:
 284              		.loc 13 66 18 view .LVU75
 285 0050 B8EEC00A 		vcvt.f32.s32	s0, s0
 286 0054 FFF7FEFF 		bl	mtof
 287              	.LVL14:
 288              		.loc 13 66 12 view .LVU76
 289 0058 104B     		ldr	r3, .L14+16
  67:MyProj.cpp    **** 
  68:MyProj.cpp    ****     // now pass myFreq as the value we pass to the setFreq function on the mySine object
  69:MyProj.cpp    ****     tCycle_setFreq(&mySine, myFreq);
 290              		.loc 13 69 19 view .LVU77
 291 005a 1148     		ldr	r0, .L14+20
  66:MyProj.cpp    **** 
 292              		.loc 13 66 12 view .LVU78
 293 005c 83ED000A 		vstr.32	s0, [r3]
 294              		.loc 13 69 5 is_stmt 1 view .LVU79
 295              		.loc 13 69 19 is_stmt 0 view .LVU80
 296 0060 FFF7FEFF 		bl	tCycle_setFreq
 297              	.LVL15:
  70:MyProj.cpp    **** 
  71:MyProj.cpp    ****     //now here's the per sample stuff
  72:MyProj.cpp    ****     for (size_t i = 0; i < size; i++)
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 19


 298              		.loc 13 72 5 is_stmt 1 view .LVU81
 299              	.LBB292:
 300              		.loc 13 72 26 view .LVU82
 301 0064 86B1     		cbz	r6, .L6
 302              		.loc 13 72 17 is_stmt 0 view .LVU83
 303 0066 0024     		movs	r4, #0
 304              	.LVL16:
 305              	.L8:
 306              	.LBB293:
  73:MyProj.cpp    ****     {
  74:MyProj.cpp    ****         //get the next sample from the sine wave object mySine and store it in a temporary variable
  75:MyProj.cpp    ****         float mySample = tCycle_tick(&mySine);
 307              		.loc 13 75 9 is_stmt 1 discriminator 2 view .LVU84
 308              		.loc 13 75 37 is_stmt 0 discriminator 2 view .LVU85
 309 0068 0D48     		ldr	r0, .L14+20
 310 006a FFF7FEFF 		bl	tCycle_tick
 311              	.LVL17:
  76:MyProj.cpp    **** 
  77:MyProj.cpp    ****         //now set the audio outputs (left is [0] and right is [1] to be whatever value has been com
  78:MyProj.cpp    ****         out[0][i] = mySample;
  79:MyProj.cpp    ****         out[1][i] = mySample;
 312              		.loc 13 79 19 discriminator 2 view .LVU86
 313 006e D5E90003 		ldrd	r0, r3, [r5]
 314              	.LVL18:
  78:MyProj.cpp    ****         out[1][i] = mySample;
 315              		.loc 13 78 9 is_stmt 1 discriminator 2 view .LVU87
  78:MyProj.cpp    ****         out[1][i] = mySample;
 316              		.loc 13 78 19 is_stmt 0 discriminator 2 view .LVU88
 317 0072 00EB8400 		add	r0, r0, r4, lsl #2
 318              		.loc 13 79 19 discriminator 2 view .LVU89
 319 0076 03EB8403 		add	r3, r3, r4, lsl #2
 320              	.LBE293:
  72:MyProj.cpp    ****     {
 321              		.loc 13 72 5 discriminator 2 view .LVU90
 322 007a 0134     		adds	r4, r4, #1
 323              	.LVL19:
 324              	.LBB294:
  78:MyProj.cpp    ****         out[1][i] = mySample;
 325              		.loc 13 78 19 discriminator 2 view .LVU91
 326 007c 80ED000A 		vstr.32	s0, [r0]
 327              		.loc 13 79 9 is_stmt 1 discriminator 2 view .LVU92
 328              	.LBE294:
  72:MyProj.cpp    ****     {
 329              		.loc 13 72 26 is_stmt 0 discriminator 2 view .LVU93
 330 0080 A642     		cmp	r6, r4
 331              	.LBB295:
 332              		.loc 13 79 19 discriminator 2 view .LVU94
 333 0082 83ED000A 		vstr.32	s0, [r3]
 334              	.LBE295:
  72:MyProj.cpp    ****     {
 335              		.loc 13 72 5 is_stmt 1 discriminator 2 view .LVU95
 336              	.LVL20:
  72:MyProj.cpp    ****     {
 337              		.loc 13 72 26 discriminator 2 view .LVU96
 338 0086 EFD1     		bne	.L8
 339              	.LVL21:
 340              	.L6:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 20


  72:MyProj.cpp    ****     {
 341              		.loc 13 72 26 is_stmt 0 discriminator 2 view .LVU97
 342              	.LBE292:
  80:MyProj.cpp    ****     }
  81:MyProj.cpp    **** }
 343              		.loc 13 81 1 view .LVU98
 344 0088 70BD     		pop	{r4, r5, r6, pc}
 345              	.LVL22:
 346              	.L15:
 347              		.loc 13 81 1 view .LVU99
 348 008a 00BF     		.align	2
 349              	.L14:
 350 008c 00000000 		.word	hw
 351 0090 CFF7FF40 		.word	1090516943
 352 0094 00000000 		.word	.LANCHOR0
 353 0098 0AD74F41 		.word	1095751434
 354 009c 00000000 		.word	.LANCHOR1
 355 00a0 00000000 		.word	.LANCHOR2
 356              		.cfi_endproc
 357              	.LFE2542:
 359              		.section	.text.startup.main,"ax",%progbits
 360              		.align	1
 361              		.p2align 2,,3
 362              		.global	main
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 367              	main:
 368              	.LFB2543:
  82:MyProj.cpp    **** 
  83:MyProj.cpp    **** int main(void)
  84:MyProj.cpp    **** {
 369              		.loc 13 84 1 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
  85:MyProj.cpp    ****     hw.Init();
 373              		.loc 13 85 5 view .LVU101
  84:MyProj.cpp    ****     hw.Init();
 374              		.loc 13 84 1 is_stmt 0 view .LVU102
 375 0000 08B5     		push	{r3, lr}
 376              		.cfi_def_cfa_offset 8
 377              		.cfi_offset 3, -8
 378              		.cfi_offset 14, -4
 379              		.loc 13 85 12 view .LVU103
 380 0002 0021     		movs	r1, #0
 381 0004 4248     		ldr	r0, .L21
  84:MyProj.cpp    ****     hw.Init();
 382              		.loc 13 84 1 view .LVU104
 383 0006 2DED048B 		vpush.64	{d8, d9}
 384              		.cfi_def_cfa_offset 24
 385              		.cfi_offset 80, -24
 386              		.cfi_offset 81, -20
 387              		.cfi_offset 82, -16
 388              		.cfi_offset 83, -12
 389              		.loc 13 85 12 view .LVU105
 390 000a FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 21


 391              	.LVL23:
  86:MyProj.cpp    ****     hw.SetAudioBlockSize(4); // number of samples handled per callback
 392              		.loc 13 86 5 is_stmt 1 view .LVU106
 393              		.loc 13 86 25 is_stmt 0 view .LVU107
 394 000e 0421     		movs	r1, #4
 395 0010 3F48     		ldr	r0, .L21
 396 0012 FFF7FEFF 		bl	_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
 397              	.LVL24:
  87:MyProj.cpp    ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 398              		.loc 13 87 5 is_stmt 1 view .LVU108
 399              		.loc 13 87 26 is_stmt 0 view .LVU109
 400 0016 0321     		movs	r1, #3
 401 0018 3D48     		ldr	r0, .L21
 402 001a FFF7FEFF 		bl	_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 403              	.LVL25:
  88:MyProj.cpp    ****     Random::Init();
 404              		.loc 13 88 5 is_stmt 1 view .LVU110
  89:MyProj.cpp    ****     hw.StartAdc();
  90:MyProj.cpp    ****     hw.StartAudio(AudioCallback);
  91:MyProj.cpp    ****     LEAF_init(&leaf, 48000, leafMemory, 65535, randomNumber);
  92:MyProj.cpp    ****     tCycle_init(&mySine, &leaf);
  93:MyProj.cpp    **** 
  94:MyProj.cpp    ****     float blueness = 0.0f;
  95:MyProj.cpp    **** 
  96:MyProj.cpp    ****     //this time, let's do something stranger with the LEDs. 
  97:MyProj.cpp    ****     while(1) {
  98:MyProj.cpp    ****         //set the red value of led1 to knob1 value, the green value to knob2 value, and the blue va
  99:MyProj.cpp    ****         hw.led1.Set(hw.GetKnobValue(hw.KNOB_1), hw.GetKnobValue(hw.KNOB_2), blueness);
 100:MyProj.cpp    ****         //make led2 just be the inverse of each value, so when knob1 red is 0 knob2 red will be 1, 
 101:MyProj.cpp    ****         hw.led2.Set(1.0f - hw.GetKnobValue(hw.KNOB_1), 1.0f - hw.GetKnobValue(hw.KNOB_2), 1.0f - bl
 102:MyProj.cpp    ****         blueness = blueness + 0.000005f; //increment blueness a little bit each loop
 405              		.loc 13 102 18 is_stmt 0 view .LVU111
 406 001e 9FED3D8A 		vldr.32	s16, .L21+4
  88:MyProj.cpp    ****     Random::Init();
 407              		.loc 13 88 17 view .LVU112
 408 0022 FFF7FEFF 		bl	_ZN5daisy6Random4InitEv
 409              	.LVL26:
  89:MyProj.cpp    ****     hw.StartAdc();
 410              		.loc 13 89 5 is_stmt 1 view .LVU113
  89:MyProj.cpp    ****     hw.StartAdc();
 411              		.loc 13 89 16 is_stmt 0 view .LVU114
 412 0026 3A48     		ldr	r0, .L21
 413 0028 FFF7FEFF 		bl	_ZN5daisy8DaisyPod8StartAdcEv
 414              	.LVL27:
  90:MyProj.cpp    ****     LEAF_init(&leaf, 48000, leafMemory, 65535, randomNumber);
 415              		.loc 13 90 5 is_stmt 1 view .LVU115
  90:MyProj.cpp    ****     LEAF_init(&leaf, 48000, leafMemory, 65535, randomNumber);
 416              		.loc 13 90 18 is_stmt 0 view .LVU116
 417 002c 3A49     		ldr	r1, .L21+8
 418 002e 3848     		ldr	r0, .L21
 419 0030 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
 420              	.LVL28:
  91:MyProj.cpp    ****     tCycle_init(&mySine, &leaf);
 421              		.loc 13 91 5 is_stmt 1 view .LVU117
  91:MyProj.cpp    ****     tCycle_init(&mySine, &leaf);
 422              		.loc 13 91 14 is_stmt 0 view .LVU118
 423 0034 394B     		ldr	r3, .L21+12
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 22


 424 0036 4FF6FF72 		movw	r2, #65535
 425 003a 9FED390A 		vldr.32	s0, .L21+16
 426 003e 3949     		ldr	r1, .L21+20
 427 0040 3948     		ldr	r0, .L21+24
 428 0042 FFF7FEFF 		bl	LEAF_init
 429              	.LVL29:
  92:MyProj.cpp    **** 
 430              		.loc 13 92 5 is_stmt 1 view .LVU119
  92:MyProj.cpp    **** 
 431              		.loc 13 92 16 is_stmt 0 view .LVU120
 432 0046 3849     		ldr	r1, .L21+24
 433 0048 3848     		ldr	r0, .L21+28
 434 004a FFF7FEFF 		bl	tCycle_init
 435              	.LVL30:
  94:MyProj.cpp    **** 
 436              		.loc 13 94 5 is_stmt 1 view .LVU121
  97:MyProj.cpp    ****         //set the red value of led1 to knob1 value, the green value to knob2 value, and the blue va
 437              		.loc 13 97 5 view .LVU122
  99:MyProj.cpp    ****         //make led2 just be the inverse of each value, so when knob1 red is 0 knob2 red will be 1, 
 438              		.loc 13 99 9 view .LVU123
  99:MyProj.cpp    ****         //make led2 just be the inverse of each value, so when knob1 red is 0 knob2 red will be 1, 
 439              		.loc 13 99 20 is_stmt 0 view .LVU124
 440 004e 0021     		movs	r1, #0
 441 0050 2F48     		ldr	r0, .L21
 442 0052 FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 443              	.LVL31:
 444 0056 F0EE408A 		vmov.f32	s17, s0
 445 005a 0121     		movs	r1, #1
 446 005c 2C48     		ldr	r0, .L21
 447 005e FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 448              	.LVL32:
 449 0062 9FED331A 		vldr.32	s2, .L21+32
 450 0066 F0EE400A 		vmov.f32	s1, s0
 451 006a 3248     		ldr	r0, .L21+36
 452 006c B0EE680A 		vmov.f32	s0, s17
 453 0070 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 454              	.LVL33:
 101:MyProj.cpp    ****         blueness = blueness + 0.000005f; //increment blueness a little bit each loop
 455              		.loc 13 101 9 is_stmt 1 view .LVU125
 101:MyProj.cpp    ****         blueness = blueness + 0.000005f; //increment blueness a little bit each loop
 456              		.loc 13 101 43 is_stmt 0 view .LVU126
 457 0074 0021     		movs	r1, #0
 458 0076 2648     		ldr	r0, .L21
 459 0078 FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 460              	.LVL34:
 101:MyProj.cpp    ****         blueness = blueness + 0.000005f; //increment blueness a little bit each loop
 461              		.loc 13 101 78 view .LVU127
 462 007c 2448     		ldr	r0, .L21
 463 007e 0121     		movs	r1, #1
 101:MyProj.cpp    ****         blueness = blueness + 0.000005f; //increment blueness a little bit each loop
 464              		.loc 13 101 43 view .LVU128
 465 0080 F0EE408A 		vmov.f32	s17, s0
 101:MyProj.cpp    ****         blueness = blueness + 0.000005f; //increment blueness a little bit each loop
 466              		.loc 13 101 78 view .LVU129
 467 0084 FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 468              	.LVL35:
 101:MyProj.cpp    ****         blueness = blueness + 0.000005f; //increment blueness a little bit each loop
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 23


 469              		.loc 13 101 20 view .LVU130
 470 0088 B7EE001A 		vmov.f32	s2, #1.0e+0
 471 008c 2A48     		ldr	r0, .L21+40
 472 008e 71EE400A 		vsub.f32	s1, s2, s0
 473 0092 31EE680A 		vsub.f32	s0, s2, s17
 474 0096 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 475              	.LVL36:
 476              		.loc 13 102 9 is_stmt 1 view .LVU131
 103:MyProj.cpp    ****         //if blueness gets to the maximum (1) then loop back around to 0
 104:MyProj.cpp    ****         if (blueness > 1.0f)
 477              		.loc 13 104 9 view .LVU132
 478              	.L17:
 105:MyProj.cpp    ****         {
 106:MyProj.cpp    ****             blueness = 0.0f;
 107:MyProj.cpp    ****         }
 108:MyProj.cpp    **** 
 109:MyProj.cpp    ****         //the RGB leds on the pod need to be updated with the "update" function here to work
 110:MyProj.cpp    ****         hw.UpdateLeds();
 479              		.loc 13 110 9 view .LVU133
 480              		.loc 13 110 22 is_stmt 0 view .LVU134
 481 009a 1D48     		ldr	r0, .L21
 101:MyProj.cpp    ****         blueness = blueness + 0.000005f; //increment blueness a little bit each loop
 482              		.loc 13 101 20 view .LVU135
 483 009c F7EE008A 		vmov.f32	s17, #1.0e+0
 484              		.loc 13 110 22 view .LVU136
 485 00a0 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
 486              	.LVL37:
  97:MyProj.cpp    ****         //set the red value of led1 to knob1 value, the green value to knob2 value, and the blue va
 487              		.loc 13 97 5 is_stmt 1 view .LVU137
  97:MyProj.cpp    ****         //set the red value of led1 to knob1 value, the green value to knob2 value, and the blue va
 488              		.loc 13 97 5 view .LVU138
  99:MyProj.cpp    ****         //make led2 just be the inverse of each value, so when knob1 red is 0 knob2 red will be 1, 
 489              		.loc 13 99 9 view .LVU139
  99:MyProj.cpp    ****         //make led2 just be the inverse of each value, so when knob1 red is 0 knob2 red will be 1, 
 490              		.loc 13 99 20 is_stmt 0 view .LVU140
 491 00a4 0021     		movs	r1, #0
 492 00a6 1A48     		ldr	r0, .L21
 493 00a8 FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 494              	.LVL38:
 495 00ac B0EE409A 		vmov.f32	s18, s0
 496 00b0 0121     		movs	r1, #1
 497 00b2 1748     		ldr	r0, .L21
 498 00b4 FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 499              	.LVL39:
 500 00b8 B0EE481A 		vmov.f32	s2, s16
 501 00bc F0EE400A 		vmov.f32	s1, s0
 502 00c0 1C48     		ldr	r0, .L21+36
 503 00c2 B0EE490A 		vmov.f32	s0, s18
 504 00c6 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 505              	.LVL40:
 101:MyProj.cpp    ****         blueness = blueness + 0.000005f; //increment blueness a little bit each loop
 506              		.loc 13 101 9 is_stmt 1 view .LVU141
 101:MyProj.cpp    ****         blueness = blueness + 0.000005f; //increment blueness a little bit each loop
 507              		.loc 13 101 43 is_stmt 0 view .LVU142
 508 00ca 0021     		movs	r1, #0
 509 00cc 1048     		ldr	r0, .L21
 510 00ce FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 24


 511              	.LVL41:
 101:MyProj.cpp    ****         blueness = blueness + 0.000005f; //increment blueness a little bit each loop
 512              		.loc 13 101 78 view .LVU143
 513 00d2 0121     		movs	r1, #1
 514 00d4 0E48     		ldr	r0, .L21
 101:MyProj.cpp    ****         blueness = blueness + 0.000005f; //increment blueness a little bit each loop
 515              		.loc 13 101 43 view .LVU144
 516 00d6 B0EE409A 		vmov.f32	s18, s0
 101:MyProj.cpp    ****         blueness = blueness + 0.000005f; //increment blueness a little bit each loop
 517              		.loc 13 101 78 view .LVU145
 518 00da FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 519              	.LVL42:
 520 00de F0EE400A 		vmov.f32	s1, s0
 101:MyProj.cpp    ****         blueness = blueness + 0.000005f; //increment blueness a little bit each loop
 521              		.loc 13 101 20 view .LVU146
 522 00e2 38EEC81A 		vsub.f32	s2, s17, s16
 523 00e6 1448     		ldr	r0, .L21+40
 524 00e8 38EEC90A 		vsub.f32	s0, s17, s18
 525 00ec 78EEE00A 		vsub.f32	s1, s17, s1
 526 00f0 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 527              	.LVL43:
 102:MyProj.cpp    ****         //if blueness gets to the maximum (1) then loop back around to 0
 528              		.loc 13 102 9 is_stmt 1 view .LVU147
 102:MyProj.cpp    ****         //if blueness gets to the maximum (1) then loop back around to 0
 529              		.loc 13 102 18 is_stmt 0 view .LVU148
 530 00f4 9FED077A 		vldr.32	s14, .L21+4
 106:MyProj.cpp    ****         }
 531              		.loc 13 106 22 view .LVU149
 532 00f8 DFED0D7A 		vldr.32	s15, .L21+32
 102:MyProj.cpp    ****         //if blueness gets to the maximum (1) then loop back around to 0
 533              		.loc 13 102 18 view .LVU150
 534 00fc 38EE078A 		vadd.f32	s16, s16, s14
 535              	.LVL44:
 104:MyProj.cpp    ****         {
 536              		.loc 13 104 9 is_stmt 1 view .LVU151
 106:MyProj.cpp    ****         }
 537              		.loc 13 106 22 is_stmt 0 view .LVU152
 538 0100 B4EE688A 		vcmp.f32	s16, s17
 539 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 540 0108 37FE888A 		vselgt.f32	s16, s15, s16
 541              	.LVL45:
 106:MyProj.cpp    ****         }
 542              		.loc 13 106 22 view .LVU153
 543 010c C5E7     		b	.L17
 544              	.L22:
 545 010e 00BF     		.align	2
 546              	.L21:
 547 0110 00000000 		.word	hw
 548 0114 ACC5A736 		.word	916964780
 549 0118 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 550 011c 00000000 		.word	_Z12randomNumberv
 551 0120 00803B47 		.word	1195081728
 552 0124 00000000 		.word	leafMemory
 553 0128 00000000 		.word	.LANCHOR3
 554 012c 00000000 		.word	.LANCHOR2
 555 0130 00000000 		.word	0
 556 0134 D4000000 		.word	hw+212
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 25


 557 0138 28010000 		.word	hw+296
 558              		.cfi_endproc
 559              	.LFE2543:
 561              		.section	.text.startup._GLOBAL__sub_I_leaf,"ax",%progbits
 562              		.align	1
 563              		.p2align 2,,3
 564              		.syntax unified
 565              		.thumb
 566              		.thumb_func
 568              	_GLOBAL__sub_I_leaf:
 569              	.LFB2571:
 111:MyProj.cpp    ****     }
 112:MyProj.cpp    **** }
 570              		.loc 13 112 1 is_stmt 1 view -0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              	.LBB361:
 575              	.LBI361:
 576              		.loc 13 112 1 view .LVU155
 577              	.LVL46:
 578              	.LBB362:
 579              	.LBB363:
 580              	.LBI363:
  35:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
 581              		.loc 1 35 5 view .LVU156
 582              	.LBB364:
 583              	.LBB365:
 584              	.LBI365:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 585              		.loc 8 21 5 view .LVU157
 586              	.LBB366:
 587              	.LBB367:
 588              	.LBI367:
 589              		.file 14 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 26


  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 27


  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 28


 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 590              		.loc 14 166 5 view .LVU158
 591              	.LBB368:
 592              	.LBB369:
 593              		.loc 14 166 34 is_stmt 0 view .LVU159
 594 0000 1348     		ldr	r0, .L25
 595 0002 0022     		movs	r2, #0
 596              	.LBE369:
 597              	.LBE368:
 598              	.LBE367:
 599              	.LBE366:
 600              	.LBE365:
 601              	.LBB385:
 602              	.LBB386:
 603              	.LBB387:
 604              	.LBB388:
 605              	.LBB389:
 606              	.LBB390:
 607              	.LBB391:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 608              		.loc 2 37 20 view .LVU160
 609 0004 1349     		ldr	r1, .L25+4
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 610              		.loc 2 36 20 view .LVU161
 611 0006 00F51043 		add	r3, r0, #36864
  38:../../libDaisy//src/hid/midi.h ****         }
 612              		.loc 2 38 20 view .LVU162
 613 000a B1F804C0 		ldrh	ip, [r1, #4]
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 29


 614              	.LBE391:
 615              	.LBE390:
 616              	.LBE389:
 617              	.LBE388:
 618              	.LBE387:
 619              	.LBE386:
 620              	.LBE385:
 621              	.LBE364:
 622              	.LBE363:
 623              	.LBE362:
 624              	.LBE361:
 625              		.loc 13 112 1 view .LVU163
 626 000e 00B5     		push	{lr}
 627              		.cfi_def_cfa_offset 4
 628              		.cfi_offset 14, -4
 629              	.LBB446:
 630              	.LBB444:
 631              	.LBB443:
 632              	.LBB442:
 633              	.LBB420:
 634              	.LBB417:
 635              	.LBB414:
 636              	.LBB401:
 637              	.LBB398:
 638              	.LBB395:
 639              	.LBB392:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 640              		.loc 2 37 20 view .LVU164
 641 0010 B1F800E0 		ldrh	lr, [r1]
 642              	.LBE392:
 643              	.LBE395:
 644              	.LBE398:
 645              	.LBE401:
 646              	.LBE414:
 647              	.LBE417:
 648              	.LBE420:
 649              	.LBB421:
 650              	.LBB383:
 651              	.LBB372:
 652              	.LBB371:
 653              	.LBB370:
 654              		.loc 14 166 34 view .LVU165
 655 0014 0260     		str	r2, [r0]
 656              	.LVL47:
 657              		.loc 14 166 34 view .LVU166
 658              	.LBE370:
 659              	.LBE371:
 660              	.LBE372:
 661              	.LBB373:
 662              	.LBI373:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 663              		.loc 12 95 5 is_stmt 1 view .LVU167
 664              	.LBE373:
 665              	.LBE383:
 666              	.LBE421:
 667              	.LBB422:
 668              	.LBB418:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 30


 669              	.LBB415:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 670              		.loc 2 84 19 is_stmt 0 view .LVU168
 671 0016 1049     		ldr	r1, .L25+8
 672              	.LBE415:
 673              	.LBE418:
 674              	.LBE422:
 675              	.LBB423:
 676              	.LBB384:
 677              	.LBB376:
 678              	.LBB374:
 679              	.LBB375:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 680              		.loc 12 95 35 view .LVU169
 681 0018 4261     		str	r2, [r0, #20]
 682              	.LVL48:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 683              		.loc 12 95 35 view .LVU170
 684              	.LBE375:
 685              	.LBE374:
 686              	.LBE376:
 687              	.LBB377:
 688              	.LBI377:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 689              		.loc 11 92 5 is_stmt 1 view .LVU171
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 690              		.loc 11 92 5 is_stmt 0 view .LVU172
 691              	.LBE377:
 692              	.LBB378:
 693              	.LBI378:
 694              		.file 15 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 31


  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 32


  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 695              		.loc 15 84 5 is_stmt 1 view .LVU173
 696              	.LBB379:
 697              	.LBB380:
 698              		.loc 15 84 33 is_stmt 0 view .LVU174
 699 001a 0262     		str	r2, [r0, #32]
 700              	.LVL49:
 701              		.loc 15 84 33 view .LVU175
 702              	.LBE380:
 703              	.LBE379:
 704              	.LBE378:
 705              	.LBB381:
 706              	.LBI381:
  40:../../libDaisy//src/hid/usb.h **** 
 707              		.loc 10 40 5 is_stmt 1 view .LVU176
  40:../../libDaisy//src/hid/usb.h **** 
 708              		.loc 10 40 5 is_stmt 0 view .LVU177
 709              	.LBE381:
 710              	.LBB382:
 711              	.LBI382:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 712              		.loc 9 77 5 is_stmt 1 view .LVU178
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 713              		.loc 9 77 5 is_stmt 0 view .LVU179
 714              	.LBE382:
 715              	.LBE384:
 716              	.LBE423:
 717              	.LBB424:
 718              	.LBI424:
  20:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 719              		.loc 7 20 5 is_stmt 1 view .LVU180
 720              	.LBB425:
 721              	.LBB426:
 722              	.LBI426:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 723              		.loc 5 41 5 view .LVU181
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 724              		.loc 5 41 5 is_stmt 0 view .LVU182
 725              	.LBE426:
 726              	.LBE425:
 727              	.LBE424:
 728              	.LBB427:
 729              	.LBI427:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 730              		.loc 6 21 5 is_stmt 1 view .LVU183
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 731              		.loc 6 21 5 is_stmt 0 view .LVU184
 732              	.LBE427:
 733              	.LBB428:
 734              	.LBI428:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 735              		.loc 6 21 5 is_stmt 1 view .LVU185
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 736              		.loc 6 21 5 is_stmt 0 view .LVU186
 737              	.LBE428:
 738              	.LBB429:
 739              	.LBI429:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 33


  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 740              		.loc 5 41 5 is_stmt 1 view .LVU187
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 741              		.loc 5 41 5 is_stmt 0 view .LVU188
 742              	.LBE429:
 743              	.LBB430:
 744              	.LBI430:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 745              		.loc 5 41 5 is_stmt 1 view .LVU189
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 746              		.loc 5 41 5 is_stmt 0 view .LVU190
 747              	.LBE430:
 748              	.LBB431:
 749              	.LBI431:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 750              		.loc 3 17 5 is_stmt 1 view .LVU191
 751              	.LBB432:
 752              	.LBB433:
 753              	.LBI433:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 754              		.loc 4 24 5 view .LVU192
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 755              		.loc 4 24 5 is_stmt 0 view .LVU193
 756              	.LBE433:
 757              	.LBB434:
 758              	.LBI434:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 759              		.loc 4 24 5 is_stmt 1 view .LVU194
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 760              		.loc 4 24 5 is_stmt 0 view .LVU195
 761              	.LBE434:
 762              	.LBB435:
 763              	.LBI435:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 764              		.loc 4 24 5 is_stmt 1 view .LVU196
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 765              		.loc 4 24 5 is_stmt 0 view .LVU197
 766              	.LBE435:
 767              	.LBE432:
 768              	.LBE431:
 769              	.LBB436:
 770              	.LBI436:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 771              		.loc 3 17 5 is_stmt 1 view .LVU198
 772              	.LBB437:
 773              	.LBB438:
 774              	.LBI438:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 775              		.loc 4 24 5 view .LVU199
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 776              		.loc 4 24 5 is_stmt 0 view .LVU200
 777              	.LBE438:
 778              	.LBB439:
 779              	.LBI439:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 780              		.loc 4 24 5 is_stmt 1 view .LVU201
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 34


 781              		.loc 4 24 5 is_stmt 0 view .LVU202
 782              	.LBE439:
 783              	.LBB440:
 784              	.LBI440:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 785              		.loc 4 24 5 is_stmt 1 view .LVU203
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 786              		.loc 4 24 5 is_stmt 0 view .LVU204
 787              	.LBE440:
 788              	.LBE437:
 789              	.LBE436:
 790              	.LBB441:
 791              	.LBI385:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 792              		.loc 2 84 5 is_stmt 1 view .LVU205
 793              	.LBB419:
 794              	.LBB416:
 795              	.LBB402:
 796              	.LBI402:
 797              		.file 16 "../../libDaisy//src/per/uart.h"
   1:../../libDaisy//src/per/uart.h **** /* 
   2:../../libDaisy//src/per/uart.h **** TODO
   3:../../libDaisy//src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libDaisy//src/per/uart.h **** - Transmit function improvements.
   5:../../libDaisy//src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libDaisy//src/per/uart.h **** */
   7:../../libDaisy//src/per/uart.h **** 
   8:../../libDaisy//src/per/uart.h **** #pragma once
   9:../../libDaisy//src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libDaisy//src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libDaisy//src/per/uart.h **** #include "daisy_core.h"
  12:../../libDaisy//src/per/uart.h **** 
  13:../../libDaisy//src/per/uart.h **** 
  14:../../libDaisy//src/per/uart.h **** namespace daisy
  15:../../libDaisy//src/per/uart.h **** {
  16:../../libDaisy//src/per/uart.h **** /** @addtogroup serial
  17:../../libDaisy//src/per/uart.h ****     @{
  18:../../libDaisy//src/per/uart.h ****     */
  19:../../libDaisy//src/per/uart.h **** 
  20:../../libDaisy//src/per/uart.h **** /** 
  21:../../libDaisy//src/per/uart.h ****     Uart Peripheral
  22:../../libDaisy//src/per/uart.h ****     @author shensley
  23:../../libDaisy//src/per/uart.h ****     @date March 2020
  24:../../libDaisy//src/per/uart.h ****     */
  25:../../libDaisy//src/per/uart.h **** class UartHandler
  26:../../libDaisy//src/per/uart.h **** {
  27:../../libDaisy//src/per/uart.h ****   public:
  28:../../libDaisy//src/per/uart.h ****     struct Config
  29:../../libDaisy//src/per/uart.h ****     {
  30:../../libDaisy//src/per/uart.h ****         enum class Peripheral
  31:../../libDaisy//src/per/uart.h ****         {
  32:../../libDaisy//src/per/uart.h ****             USART_1,
  33:../../libDaisy//src/per/uart.h ****             USART_2,
  34:../../libDaisy//src/per/uart.h ****             USART_3,
  35:../../libDaisy//src/per/uart.h ****             UART_4,
  36:../../libDaisy//src/per/uart.h ****             UART_5,
  37:../../libDaisy//src/per/uart.h ****             USART_6,
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 35


  38:../../libDaisy//src/per/uart.h ****             UART_7,
  39:../../libDaisy//src/per/uart.h ****             UART_8,
  40:../../libDaisy//src/per/uart.h ****             LPUART_1,
  41:../../libDaisy//src/per/uart.h ****         };
  42:../../libDaisy//src/per/uart.h **** 
  43:../../libDaisy//src/per/uart.h ****         enum class StopBits
  44:../../libDaisy//src/per/uart.h ****         {
  45:../../libDaisy//src/per/uart.h ****             BITS_0_5,
  46:../../libDaisy//src/per/uart.h ****             BITS_1,
  47:../../libDaisy//src/per/uart.h ****             BITS_1_5,
  48:../../libDaisy//src/per/uart.h ****             BITS_2,
  49:../../libDaisy//src/per/uart.h ****         };
  50:../../libDaisy//src/per/uart.h **** 
  51:../../libDaisy//src/per/uart.h ****         enum class Parity
  52:../../libDaisy//src/per/uart.h ****         {
  53:../../libDaisy//src/per/uart.h ****             NONE,
  54:../../libDaisy//src/per/uart.h ****             EVEN,
  55:../../libDaisy//src/per/uart.h ****             ODD,
  56:../../libDaisy//src/per/uart.h ****         };
  57:../../libDaisy//src/per/uart.h **** 
  58:../../libDaisy//src/per/uart.h ****         enum class Mode
  59:../../libDaisy//src/per/uart.h ****         {
  60:../../libDaisy//src/per/uart.h ****             RX,
  61:../../libDaisy//src/per/uart.h ****             TX,
  62:../../libDaisy//src/per/uart.h ****             TX_RX,
  63:../../libDaisy//src/per/uart.h ****         };
  64:../../libDaisy//src/per/uart.h **** 
  65:../../libDaisy//src/per/uart.h ****         enum class WordLength
  66:../../libDaisy//src/per/uart.h ****         {
  67:../../libDaisy//src/per/uart.h ****             BITS_7,
  68:../../libDaisy//src/per/uart.h ****             BITS_8,
  69:../../libDaisy//src/per/uart.h ****             BITS_9,
  70:../../libDaisy//src/per/uart.h ****         };
  71:../../libDaisy//src/per/uart.h **** 
  72:../../libDaisy//src/per/uart.h ****         struct
  73:../../libDaisy//src/per/uart.h ****         {
  74:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libDaisy//src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libDaisy//src/per/uart.h **** 
  78:../../libDaisy//src/per/uart.h ****         Config()
  79:../../libDaisy//src/per/uart.h ****         {
  80:../../libDaisy//src/per/uart.h ****             // user must init periph, pin_config, and mode
  81:../../libDaisy//src/per/uart.h ****             stopbits   = StopBits::BITS_1;
  82:../../libDaisy//src/per/uart.h ****             parity     = Parity::NONE;
  83:../../libDaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
  84:../../libDaisy//src/per/uart.h ****             baudrate   = 4800;
  85:../../libDaisy//src/per/uart.h ****             // baudrate   = 31250;
  86:../../libDaisy//src/per/uart.h ****         }
  87:../../libDaisy//src/per/uart.h **** 
  88:../../libDaisy//src/per/uart.h ****         Peripheral periph;
  89:../../libDaisy//src/per/uart.h ****         StopBits   stopbits;
  90:../../libDaisy//src/per/uart.h ****         Parity     parity;
  91:../../libDaisy//src/per/uart.h ****         Mode       mode;
  92:../../libDaisy//src/per/uart.h ****         WordLength wordlength;
  93:../../libDaisy//src/per/uart.h ****         uint32_t   baudrate;
  94:../../libDaisy//src/per/uart.h ****     };
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 36


  95:../../libDaisy//src/per/uart.h **** 
  96:../../libDaisy//src/per/uart.h **** 
  97:../../libDaisy//src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 798              		.loc 16 97 5 view .LVU206
 799              	.LBB403:
 800              	.LBB404:
 801              		.loc 16 97 35 is_stmt 0 view .LVU207
 802 001c C0F87C21 		str	r2, [r0, #380]
 803              	.LVL50:
 804              		.loc 16 97 35 view .LVU208
 805              	.LBE404:
 806              	.LBE403:
 807              	.LBE402:
 808              	.LBB405:
 809              	.LBI405:
 810              		.file 17 "../../libDaisy//src/util/ringbuffer.h"
   1:../../libDaisy//src/util/ringbuffer.h **** #pragma once
   2:../../libDaisy//src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libDaisy//src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libDaisy//src/util/ringbuffer.h **** 
   5:../../libDaisy//src/util/ringbuffer.h **** #include <algorithm>
   6:../../libDaisy//src/util/ringbuffer.h **** 
   7:../../libDaisy//src/util/ringbuffer.h **** namespace daisy
   8:../../libDaisy//src/util/ringbuffer.h **** {
   9:../../libDaisy//src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libDaisy//src/util/ringbuffer.h ****     @{
  11:../../libDaisy//src/util/ringbuffer.h **** */
  12:../../libDaisy//src/util/ringbuffer.h **** 
  13:../../libDaisy//src/util/ringbuffer.h **** /**
  14:../../libDaisy//src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libDaisy//src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libDaisy//src/util/ringbuffer.h **** */
  17:../../libDaisy//src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libDaisy//src/util/ringbuffer.h **** class RingBuffer
  19:../../libDaisy//src/util/ringbuffer.h **** {
  20:../../libDaisy//src/util/ringbuffer.h ****   public:
  21:../../libDaisy//src/util/ringbuffer.h ****     RingBuffer() {}
 811              		.loc 17 21 5 is_stmt 1 view .LVU209
 812              		.loc 17 21 5 is_stmt 0 view .LVU210
 813              	.LBE405:
 814              	.LBB406:
 815              	.LBI388:
  86:../../libDaisy//src/hid/midi.h **** 
  87:../../libDaisy//src/hid/midi.h ****     struct Config
 816              		.loc 2 87 12 is_stmt 1 view .LVU211
 817              	.LBB399:
 818              	.LBI389:
  34:../../libDaisy//src/hid/midi.h ****         {
 819              		.loc 2 34 9 view .LVU212
 820              	.LBB396:
 821              	.LBB393:
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 822              		.loc 2 36 13 view .LVU213
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 823              		.loc 2 36 20 is_stmt 0 view .LVU214
 824 0020 C3F82422 		str	r2, [r3, #548]
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 37


 825              		.loc 2 37 13 is_stmt 1 view .LVU215
  38:../../libDaisy//src/hid/midi.h ****         }
 826              		.loc 2 38 20 is_stmt 0 view .LVU216
 827 0024 A3F82AC2 		strh	ip, [r3, #554]	@ movhi
 828              	.LBE393:
 829              	.LBE396:
 830              	.LBE399:
 831              	.LBE406:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 832              		.loc 2 84 19 view .LVU217
 833 0028 4FF0070C 		mov	ip, #7
 834              	.LBB407:
 835              	.LBB408:
 836              	.LBB409:
 837              	.LBB410:
 838              		.loc 16 97 35 view .LVU218
 839 002c C3F82C22 		str	r2, [r3, #556]
 840              	.LBE410:
 841              	.LBE409:
 842              	.LBE408:
 843              	.LBE407:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 844              		.loc 2 84 19 view .LVU219
 845 0030 4FF60F02 		movw	r2, #63503
 846 0034 C3F83012 		str	r1, [r3, #560]
 847 0038 A3F83422 		strh	r2, [r3, #564]	@ movhi
 848 003c 83F836C2 		strb	ip, [r3, #566]
 849              	.LBB412:
 850              	.LBB400:
 851              	.LBB397:
 852              	.LBB394:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 853              		.loc 2 37 20 view .LVU220
 854 0040 A3F828E2 		strh	lr, [r3, #552]	@ movhi
  38:../../libDaisy//src/hid/midi.h ****         }
 855              		.loc 2 38 13 is_stmt 1 view .LVU221
 856              	.LVL51:
  38:../../libDaisy//src/hid/midi.h ****         }
 857              		.loc 2 38 13 is_stmt 0 view .LVU222
 858              	.LBE394:
 859              	.LBE397:
 860              	.LBE400:
 861              	.LBE412:
 862              	.LBB413:
 863              	.LBI407:
  25:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
 864              		.loc 2 25 5 is_stmt 1 view .LVU223
 865              	.LBB411:
 866              	.LBI408:
 867              		.loc 16 97 5 view .LVU224
 868              		.loc 16 97 5 is_stmt 0 view .LVU225
 869              	.LBE411:
 870              	.LBE413:
 871              	.LBE416:
 872              	.LBE419:
 873              	.LBE441:
 874              	.LBE442:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 38


 875              	.LBE443:
   6:MyProj.cpp    **** tCycle mySine;
 876              		.loc 13 6 10 view .LVU226
 877 0044 054A     		ldr	r2, .L25+12
 878 0046 0649     		ldr	r1, .L25+16
 879              	.LBE444:
 880              	.LBE446:
 881              		.loc 13 112 1 view .LVU227
 882 0048 5DF804EB 		ldr	lr, [sp], #4
 883              		.cfi_restore 14
 884              		.cfi_def_cfa_offset 0
 885              	.LBB447:
 886              	.LBB445:
   6:MyProj.cpp    **** tCycle mySine;
 887              		.loc 13 6 10 view .LVU228
 888 004c FFF7FEBF 		b	__aeabi_atexit
 889              	.LVL52:
 890              	.L26:
 891              		.align	2
 892              	.L25:
 893 0050 00000000 		.word	hw
 894 0054 00000000 		.word	.LANCHOR4
 895 0058 80707FF0 		.word	-260083584
 896 005c 00000000 		.word	__dso_handle
 897 0060 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 898              	.LBE445:
 899              	.LBE447:
 900              		.cfi_endproc
 901              	.LFE2571:
 903              		.section	.init_array,"aw",%init_array
 904              		.align	2
 905 0000 00000000 		.word	_GLOBAL__sub_I_leaf(target1)
 906              		.global	majorScale
 907              		.global	myFreq
 908              		.global	mySine
 909              		.global	hw
 910              		.global	leafMemory
 911              		.global	leaf
 912              		.section	.rodata
 913              		.align	2
 914              		.set	.LANCHOR4,. + 0
 915              	.LC0:
 916 0000 01       		.byte	1
 917 0001 07       		.byte	7
 918 0002 0000     		.space	2
 919              	.LC1:
 920 0004 01       		.byte	1
 921 0005 06       		.byte	6
 922              		.section	.bss.hw,"aw",%nobits
 923              		.align	2
 926              	hw:
 927 0000 00000000 		.space	37432
 927      00000000 
 927      00000000 
 927      00000000 
 927      00000000 
 928              		.section	.bss.leaf,"aw",%nobits
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 39


 929              		.align	2
 930              		.set	.LANCHOR3,. + 0
 933              	leaf:
 934 0000 00000000 		.space	80
 934      00000000 
 934      00000000 
 934      00000000 
 934      00000000 
 935              		.section	.bss.leafMemory,"aw",%nobits
 936              		.align	2
 939              	leafMemory:
 940 0000 00000000 		.space	65535
 940      00000000 
 940      00000000 
 940      00000000 
 940      00000000 
 941              		.section	.bss.mySine,"aw",%nobits
 942              		.align	2
 943              		.set	.LANCHOR2,. + 0
 946              	mySine:
 947 0000 00000000 		.space	4
 948              		.section	.data.majorScale,"aw"
 949              		.align	2
 950              		.set	.LANCHOR0,. + 0
 953              	majorScale:
 954 0000 00000000 		.word	0
 955 0004 02000000 		.word	2
 956 0008 04000000 		.word	4
 957 000c 05000000 		.word	5
 958 0010 07000000 		.word	7
 959 0014 09000000 		.word	9
 960 0018 0B000000 		.word	11
 961 001c 0C000000 		.word	12
 962              		.section	.data.myFreq,"aw"
 963              		.align	2
 964              		.set	.LANCHOR1,. + 0
 967              	myFreq:
 968 0000 00005C43 		.word	1130102784
 969              		.text
 970              	.Letext0:
 971              		.file 18 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 972              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 973              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 974              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 975              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 976              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 977              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 978              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 979              		.file 26 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 980              		.file 27 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 981              		.file 28 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 982              		.file 29 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 983              		.file 30 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 984              		.file 31 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 985              		.file 32 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 986              		.file 33 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 987              		.file 34 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 40


 988              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 989              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 990              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 991              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 992              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 993              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 994              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 995              		.file 42 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 996              		.file 43 "../../libDaisy//src/daisy_core.h"
 997              		.file 44 "../../libDaisy//src/per/tim.h"
 998              		.file 45 "../../libDaisy//src/per/sai.h"
 999              		.file 46 "../../libDaisy//src/hid/MidiEvent.h"
 1000              		.file 47 "../../libDaisy//src/per/rng.h"
 1001              		.file 48 "../../libDaisy//src/util/wav_format.h"
 1002              		.file 49 "../../libDaisy//src/util/color.h"
 1003              		.file 50 "../../libDaisy//src/dev/max11300.h"
 1004              		.file 51 "../../libDaisy//src/per/gpio.h"
 1005              		.file 52 "../../libDaisy//src/dev/sdram.h"
 1006              		.file 53 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 1007              		.file 54 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 1008              		.file 55 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 1009              		.file 56 "../../../LEAF/leaf/./Inc/leaf-mempool.h"
 1010              		.file 57 "../../../LEAF/leaf/./Inc/leaf-global.h"
 1011              		.file 58 "../../../LEAF/leaf/./Inc/leaf-oscillators.h"
 1012              		.file 59 "../../../LEAF/leaf/leaf.h"
 1013              		.file 60 "../../../LEAF/leaf/./Inc/leaf-math.h"
 1014              		.file 61 "<built-in>"
 1015              		.file 62 "../../libDaisy//src/dev/sr_595.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MyProj.cpp
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:19     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD2Ev
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD1Ev
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:154    .text._Z12randomNumberv:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:161    .text._Z12randomNumberv:0000000000000000 _Z12randomNumberv
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:178    .text._Z12randomNumberv:000000000000000c $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:183    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:190    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:350    .text._Z13AudioCallbackPKPKfPPfj:000000000000008c $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:926    .bss.hw:0000000000000000 hw
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:360    .text.startup.main:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:367    .text.startup.main:0000000000000000 main
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:547    .text.startup.main:0000000000000110 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:939    .bss.leafMemory:0000000000000000 leafMemory
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:562    .text.startup._GLOBAL__sub_I_leaf:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:568    .text.startup._GLOBAL__sub_I_leaf:0000000000000000 _GLOBAL__sub_I_leaf
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:893    .text.startup._GLOBAL__sub_I_leaf:0000000000000050 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:904    .init_array:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:953    .data.majorScale:0000000000000000 majorScale
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:967    .data.myFreq:0000000000000000 myFreq
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:946    .bss.mySine:0000000000000000 mySine
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:933    .bss.leaf:0000000000000000 leaf
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:913    .rodata:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:923    .bss.hw:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:929    .bss.leaf:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:936    .bss.leafMemory:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:942    .bss.mySine:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:949    .data.majorScale:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccR1y6gk.s:963    .data.myFreq:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy8DaisyPodD5Ev

UNDEFINED SYMBOLS
_ZN5daisy6Random8GetFloatEff
_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
mtof
tCycle_setFreq
tCycle_tick
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy6Random4InitEv
_ZN5daisy8DaisyPod8StartAdcEv
_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
LEAF_init
tCycle_init
_ZN5daisy6RgbLed3SetEfff
_ZN5daisy8DaisyPod10UpdateLedsEv
__aeabi_atexit
__dso_handle
