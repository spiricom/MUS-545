ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"MyProj.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  19              		.align	1
  20              		.p2align 2,,3
  21              		.weak	_ZN5daisy8DaisyPodD2Ev
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN5daisy8DaisyPodD2Ev:
  27              	.LVL0:
  28              	.LFB2538:
  29              		.file 1 "../../libDaisy//src/daisy_pod.h"
   1:../../libDaisy//src/daisy_pod.h **** #pragma once
   2:../../libDaisy//src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../../libDaisy//src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../../libDaisy//src/daisy_pod.h **** 
   5:../../libDaisy//src/daisy_pod.h **** #include "daisy_seed.h"
   6:../../libDaisy//src/daisy_pod.h **** 
   7:../../libDaisy//src/daisy_pod.h **** namespace daisy
   8:../../libDaisy//src/daisy_pod.h **** {
   9:../../libDaisy//src/daisy_pod.h **** /**
  10:../../libDaisy//src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libDaisy//src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libDaisy//src/daisy_pod.h ****     @author Stephen Hensley
  13:../../libDaisy//src/daisy_pod.h ****     @date November 2019
  14:../../libDaisy//src/daisy_pod.h ****     @ingroup boards
  15:../../libDaisy//src/daisy_pod.h **** */
  16:../../libDaisy//src/daisy_pod.h **** class DaisyPod
  17:../../libDaisy//src/daisy_pod.h **** {
  18:../../libDaisy//src/daisy_pod.h ****   public:
  19:../../libDaisy//src/daisy_pod.h ****     /** Switches */
  20:../../libDaisy//src/daisy_pod.h ****     enum Sw
  21:../../libDaisy//src/daisy_pod.h ****     {
  22:../../libDaisy//src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../../libDaisy//src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../../libDaisy//src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../../libDaisy//src/daisy_pod.h ****     };
  26:../../libDaisy//src/daisy_pod.h **** 
  27:../../libDaisy//src/daisy_pod.h ****     /** Knobs */
  28:../../libDaisy//src/daisy_pod.h ****     enum Knob
  29:../../libDaisy//src/daisy_pod.h ****     {
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 2


  30:../../libDaisy//src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../../libDaisy//src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../../libDaisy//src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../../libDaisy//src/daisy_pod.h ****     };
  34:../../libDaisy//src/daisy_pod.h **** 
  35:../../libDaisy//src/daisy_pod.h ****     DaisyPod() {}
  36:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
  30              		.loc 1 36 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB277:
  36              	.LBI277:
  37              		.file 2 "../../libDaisy//src/hid/midi.h"
   1:../../libDaisy//src/hid/midi.h **** #pragma once
   2:../../libDaisy//src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libDaisy//src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libDaisy//src/hid/midi.h **** 
   5:../../libDaisy//src/hid/midi.h **** // TODO: make this adjustable
   6:../../libDaisy//src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libDaisy//src/hid/midi.h **** 
   8:../../libDaisy//src/hid/midi.h **** #include <stdint.h>
   9:../../libDaisy//src/hid/midi.h **** #include <stdlib.h>
  10:../../libDaisy//src/hid/midi.h **** #include "per/uart.h"
  11:../../libDaisy//src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libDaisy//src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libDaisy//src/hid/midi.h **** #include "hid/usb_midi.h"
  14:../../libDaisy//src/hid/midi.h **** #include "sys/system.h"
  15:../../libDaisy//src/hid/midi.h **** 
  16:../../libDaisy//src/hid/midi.h **** namespace daisy
  17:../../libDaisy//src/hid/midi.h **** {
  18:../../libDaisy//src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART 
  19:../../libDaisy//src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../../libDaisy//src/hid/midi.h ****  *  @ingroup midi
  21:../../libDaisy//src/hid/midi.h **** */
  22:../../libDaisy//src/hid/midi.h **** class MidiUartTransport
  23:../../libDaisy//src/hid/midi.h **** {
  24:../../libDaisy//src/hid/midi.h ****   public:
  25:../../libDaisy//src/hid/midi.h ****     MidiUartTransport() {}
  26:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
  27:../../libDaisy//src/hid/midi.h **** 
  28:../../libDaisy//src/hid/midi.h ****     struct Config
  29:../../libDaisy//src/hid/midi.h ****     {
  30:../../libDaisy//src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  31:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    rx;
  32:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    tx;
  33:../../libDaisy//src/hid/midi.h **** 
  34:../../libDaisy//src/hid/midi.h ****         Config()
  35:../../libDaisy//src/hid/midi.h ****         {
  36:../../libDaisy//src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  37:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  38:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  39:../../libDaisy//src/hid/midi.h ****         }
  40:../../libDaisy//src/hid/midi.h ****     };
  41:../../libDaisy//src/hid/midi.h **** 
  42:../../libDaisy//src/hid/midi.h ****     inline void Init(Config config)
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 3


  43:../../libDaisy//src/hid/midi.h ****     {
  44:../../libDaisy//src/hid/midi.h ****         UartHandler::Config uart_config;
  45:../../libDaisy//src/hid/midi.h **** 
  46:../../libDaisy//src/hid/midi.h ****         //defaults
  47:../../libDaisy//src/hid/midi.h ****         uart_config.baudrate   = 31250;
  48:../../libDaisy//src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  49:../../libDaisy//src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  50:../../libDaisy//src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  51:../../libDaisy//src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  52:../../libDaisy//src/hid/midi.h **** 
  53:../../libDaisy//src/hid/midi.h ****         //user settings
  54:../../libDaisy//src/hid/midi.h ****         uart_config.periph        = config.periph;
  55:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  56:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  57:../../libDaisy//src/hid/midi.h **** 
  58:../../libDaisy//src/hid/midi.h ****         uart_.Init(uart_config);
  59:../../libDaisy//src/hid/midi.h ****     }
  60:../../libDaisy//src/hid/midi.h **** 
  61:../../libDaisy//src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  62:../../libDaisy//src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  63:../../libDaisy//src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  64:../../libDaisy//src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  65:../../libDaisy//src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  66:../../libDaisy//src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  67:../../libDaisy//src/hid/midi.h **** 
  68:../../libDaisy//src/hid/midi.h ****   private:
  69:../../libDaisy//src/hid/midi.h ****     UartHandler uart_;
  70:../../libDaisy//src/hid/midi.h **** };
  71:../../libDaisy//src/hid/midi.h **** 
  72:../../libDaisy//src/hid/midi.h **** /** 
  73:../../libDaisy//src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  74:../../libDaisy//src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  75:../../libDaisy//src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  76:../../libDaisy//src/hid/midi.h ****     @author shensley
  77:../../libDaisy//src/hid/midi.h ****     @date March 2020
  78:../../libDaisy//src/hid/midi.h ****     @ingroup midi
  79:../../libDaisy//src/hid/midi.h **** */
  80:../../libDaisy//src/hid/midi.h **** template <typename Transport>
  81:../../libDaisy//src/hid/midi.h **** class MidiHandler
  82:../../libDaisy//src/hid/midi.h **** {
  83:../../libDaisy//src/hid/midi.h ****   public:
  84:../../libDaisy//src/hid/midi.h ****     MidiHandler() {}
  85:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
  38              		.loc 2 85 5 view .LVU1
  39              	.LBB278:
  40              	.LBI278:
  26:../../libDaisy//src/hid/midi.h **** 
  41              		.loc 2 26 5 view .LVU2
  26:../../libDaisy//src/hid/midi.h **** 
  42              		.loc 2 26 5 is_stmt 0 view .LVU3
  43              	.LBE278:
  44              	.LBE277:
  45              	.LBB279:
  46              	.LBI279:
  47              		.file 3 "../../libDaisy//src/hid/rgb_led.h"
   1:../../libDaisy//src/hid/rgb_led.h **** #pragma once
   2:../../libDaisy//src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 4


   3:../../libDaisy//src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../../libDaisy//src/hid/rgb_led.h **** #include "hid/led.h"
   5:../../libDaisy//src/hid/rgb_led.h **** #include "util/color.h"
   6:../../libDaisy//src/hid/rgb_led.h **** 
   7:../../libDaisy//src/hid/rgb_led.h **** namespace daisy
   8:../../libDaisy//src/hid/rgb_led.h **** {
   9:../../libDaisy//src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../../libDaisy//src/hid/rgb_led.h ****     @{
  11:../../libDaisy//src/hid/rgb_led.h **** */
  12:../../libDaisy//src/hid/rgb_led.h **** 
  13:../../libDaisy//src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../../libDaisy//src/hid/rgb_led.h **** class RgbLed
  15:../../libDaisy//src/hid/rgb_led.h **** {
  16:../../libDaisy//src/hid/rgb_led.h ****   public:
  17:../../libDaisy//src/hid/rgb_led.h ****     RgbLed() {}
  18:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
  48              		.loc 3 18 5 is_stmt 1 view .LVU4
  49              	.LBB280:
  50              	.LBI280:
  51              		.file 4 "../../libDaisy//src/hid/led.h"
   1:../../libDaisy//src/hid/led.h **** 
   2:../../libDaisy//src/hid/led.h **** #pragma once
   3:../../libDaisy//src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libDaisy//src/hid/led.h **** #define DSY_LED_H
   5:../../libDaisy//src/hid/led.h **** #include "daisy_core.h"
   6:../../libDaisy//src/hid/led.h **** #include "per/gpio.h"
   7:../../libDaisy//src/hid/led.h **** 
   8:../../libDaisy//src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libDaisy//src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libDaisy//src/hid/led.h **** */
  11:../../libDaisy//src/hid/led.h **** 
  12:../../libDaisy//src/hid/led.h **** namespace daisy
  13:../../libDaisy//src/hid/led.h **** {
  14:../../libDaisy//src/hid/led.h **** /**
  15:../../libDaisy//src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libDaisy//src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libDaisy//src/hid/led.h ****     @author shensley
  18:../../libDaisy//src/hid/led.h ****     @date March 2020
  19:../../libDaisy//src/hid/led.h ****     @ingroup feedback
  20:../../libDaisy//src/hid/led.h **** */
  21:../../libDaisy//src/hid/led.h **** class Led
  22:../../libDaisy//src/hid/led.h **** {
  23:../../libDaisy//src/hid/led.h ****   public:
  24:../../libDaisy//src/hid/led.h ****     Led() {}
  25:../../libDaisy//src/hid/led.h ****     ~Led() {}
  52              		.loc 4 25 5 view .LVU5
  53              		.loc 4 25 5 is_stmt 0 view .LVU6
  54              	.LBE280:
  55              	.LBB281:
  56              	.LBI281:
  57              		.loc 4 25 5 is_stmt 1 view .LVU7
  58              		.loc 4 25 5 is_stmt 0 view .LVU8
  59              	.LBE281:
  60              	.LBB282:
  61              	.LBI282:
  62              		.loc 4 25 5 is_stmt 1 view .LVU9
  63              		.loc 4 25 5 is_stmt 0 view .LVU10
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 5


  64              	.LBE282:
  65              	.LBE279:
  66              	.LBB283:
  67              	.LBI283:
  68              		.loc 3 18 5 is_stmt 1 view .LVU11
  69              	.LBB284:
  70              	.LBI284:
  71              		.loc 4 25 5 view .LVU12
  72              		.loc 4 25 5 is_stmt 0 view .LVU13
  73              	.LBE284:
  74              	.LBB285:
  75              	.LBI285:
  76              		.loc 4 25 5 is_stmt 1 view .LVU14
  77              		.loc 4 25 5 is_stmt 0 view .LVU15
  78              	.LBE285:
  79              	.LBB286:
  80              	.LBI286:
  81              		.loc 4 25 5 is_stmt 1 view .LVU16
  82              		.loc 4 25 5 is_stmt 0 view .LVU17
  83              	.LBE286:
  84              	.LBE283:
  85              	.LBB287:
  86              	.LBI287:
  87              		.file 5 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 6


  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  88              		.loc 5 42 5 is_stmt 1 view .LVU18
  89              		.loc 5 42 5 is_stmt 0 view .LVU19
  90              	.LBE287:
  91              	.LBB288:
  92              	.LBI288:
  93              		.loc 5 42 5 is_stmt 1 view .LVU20
  94              		.loc 5 42 5 is_stmt 0 view .LVU21
  95              	.LBE288:
  96              	.LBB289:
  97              	.LBI289:
  98              		.file 6 "../../libDaisy//src/hid/ctrl.h"
   1:../../libDaisy//src/hid/ctrl.h **** #pragma once
   2:../../libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/ctrl.h **** 
   6:../../libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libDaisy//src/hid/ctrl.h **** namespace daisy
   8:../../libDaisy//src/hid/ctrl.h **** {
   9:../../libDaisy//src/hid/ctrl.h **** /**
  10:../../libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../../libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../../libDaisy//src/hid/ctrl.h **** */
  17:../../libDaisy//src/hid/ctrl.h **** class AnalogControl
  18:../../libDaisy//src/hid/ctrl.h **** {
  19:../../libDaisy//src/hid/ctrl.h ****   public:
  20:../../libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../../libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../../libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
  99              		.loc 6 23 5 is_stmt 1 view .LVU22
 100              		.loc 6 23 5 is_stmt 0 view .LVU23
 101              	.LBE289:
 102              	.LBB290:
 103              	.LBI290:
 104              		.loc 6 23 5 is_stmt 1 view .LVU24
 105              		.loc 6 23 5 is_stmt 0 view .LVU25
 106              	.LBE290:
 107              	.LBB291:
 108              	.LBI291:
 109              		.file 7 "../../libDaisy//src/hid/encoder.h"
   1:../../libDaisy//src/hid/encoder.h **** #pragma once
   2:../../libDaisy//src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libDaisy//src/hid/encoder.h **** #define DSY_ENCODER_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 7


   4:../../libDaisy//src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libDaisy//src/hid/encoder.h **** 
   8:../../libDaisy//src/hid/encoder.h **** namespace daisy
   9:../../libDaisy//src/hid/encoder.h **** {
  10:../../libDaisy//src/hid/encoder.h **** /** 
  11:../../libDaisy//src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libDaisy//src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libDaisy//src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/encoder.h ****     @date December 2019
  15:../../libDaisy//src/hid/encoder.h ****     @ingroup controls
  16:../../libDaisy//src/hid/encoder.h **** */
  17:../../libDaisy//src/hid/encoder.h **** class Encoder
  18:../../libDaisy//src/hid/encoder.h **** {
  19:../../libDaisy//src/hid/encoder.h ****   public:
  20:../../libDaisy//src/hid/encoder.h ****     Encoder() {}
  21:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 110              		.loc 7 21 5 is_stmt 1 view .LVU26
 111              	.LBB292:
 112              	.LBI292:
 113              		.loc 5 42 5 view .LVU27
 114              		.loc 5 42 5 is_stmt 0 view .LVU28
 115              	.LBE292:
 116              	.LBE291:
 117              	.LBB293:
 118              	.LBI293:
 119              		.file 8 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 120              		.loc 8 22 5 is_stmt 1 view .LVU29
 121              	.LBB294:
 122              	.LBI294:
 123              		.file 9 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 8


   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 9


  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
 124              		.loc 9 78 5 view .LVU30
 125              		.loc 9 78 5 is_stmt 0 view .LVU31
 126              	.LBE294:
 127              	.LBB295:
 128              	.LBI295:
 129              		.file 10 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 10


  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 130              		.loc 10 42 5 is_stmt 1 view .LVU32
 131              		.loc 10 42 5 is_stmt 0 view .LVU33
 132              	.LBE295:
 133              	.LBB296:
 134              	.LBI296:
 135              		.file 11 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 11


  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 136              		.loc 11 93 5 is_stmt 1 view .LVU34
 137              		.loc 11 93 5 is_stmt 0 view .LVU35
 138              	.LBE296:
 139              	.LBB297:
 140              	.LBI297:
 141              		.file 12 "../../libDaisy//src/hid/audio.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 12


   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 13


  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 142              		.loc 12 96 5 is_stmt 1 view .LVU36
 143              		.loc 12 96 5 is_stmt 0 view .LVU37
 144              	.LBE297:
 145              	.LBE293:
 146              		.loc 1 36 18 view .LVU38
 147 0000 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE2538:
 151              		.weak	_ZN5daisy8DaisyPodD1Ev
 152              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 153 0002 00BF     		.section	.text._Z12randomNumberv,"ax",%progbits
 154              		.align	1
 155              		.p2align 2,,3
 156              		.global	_Z12randomNumberv
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	_Z12randomNumberv:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 14


 162              	.LFB2541:
 163              		.file 13 "MyProj.cpp"
   1:MyProj.cpp    **** #include "daisy_pod.h"
   2:MyProj.cpp    **** #include "leaf.h"
   3:MyProj.cpp    **** using namespace daisy;
   4:MyProj.cpp    **** LEAF leaf;
   5:MyProj.cpp    **** char leafMemory[455355];
   6:MyProj.cpp    **** 
   7:MyProj.cpp    **** typedef struct _sequenceParams
   8:MyProj.cpp    **** {
   9:MyProj.cpp    **** 
  10:MyProj.cpp    ****     float rate; 
  11:MyProj.cpp    ****     float vol;
  12:MyProj.cpp    **** } sequenceParams;
  13:MyProj.cpp    **** 
  14:MyProj.cpp    **** const int sequenceLength = 16;
  15:MyProj.cpp    **** sequenceParams mySequence[sequenceLength] = {{-1.f, .5f},{1.5f, .5f},{-.5f,.9f},{1.33f, .5f},{2.f, 
  16:MyProj.cpp    **** 
  17:MyProj.cpp    **** float myFreq = 220.0f;
  18:MyProj.cpp    **** int sampleCounter = 0; // this will store the current count of how many samples have been processed
  19:MyProj.cpp    **** int sampleCounterMaxValue = 48000; //we'll set this to 48000 for now, meaning the counter resets ev
  20:MyProj.cpp    **** float myTempo; // we'll use this as a variable to store what tempo we are trying to click the metro
  21:MyProj.cpp    **** 
  22:MyProj.cpp    **** 
  23:MyProj.cpp    **** //let's make an array of notes that will loop instead of a constant stream of random values
  24:MyProj.cpp    **** int whichNoteInSequence = 0;//which note are we currently on in the sequence
  25:MyProj.cpp    **** 
  26:MyProj.cpp    **** 
  27:MyProj.cpp    **** //for more recording space, we need to use the external 64 MB SDRAM chip instead of the internal me
  28:MyProj.cpp    **** //to do that, set up a new variable that is the size of the memory amount you want to use
  29:MyProj.cpp    **** //and use the "DSY_SDRAM_BSS" macro after defining the variable (but before the semicolon) to place
  30:MyProj.cpp    **** char bigMemory[67108864] DSY_SDRAM_BSS; //64 MB is 64 * 1024 * 1024 = 67108864
  31:MyProj.cpp    **** 
  32:MyProj.cpp    **** //now we need to make a LEAF "memorypool" object that will organize that large memory chunk
  33:MyProj.cpp    **** tMempool bigPool;
  34:MyProj.cpp    **** DaisyPod hw;
  35:MyProj.cpp    **** 
  36:MyProj.cpp    **** //we need a buffer to store the sample (just an array that holds the sample values)
  37:MyProj.cpp    **** tBuffer myBuffer;
  38:MyProj.cpp    **** tSampler mySampler;
  39:MyProj.cpp    **** 
  40:MyProj.cpp    **** int sampleLength = 1; // store how long the sample is
  41:MyProj.cpp    **** 
  42:MyProj.cpp    **** //A simple reverb. Reverb is pretty expensive so you can't combine it with many other things.
  43:MyProj.cpp    **** 
  44:MyProj.cpp    **** 
  45:MyProj.cpp    **** float randomNumber()
  46:MyProj.cpp    **** {
 164              		.loc 13 46 1 is_stmt 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
  47:MyProj.cpp    ****     return Random::GetFloat(0.0f, 1.0f);
 169              		.loc 13 47 5 view .LVU40
 170              		.loc 13 47 28 is_stmt 0 view .LVU41
 171 0000 F7EE000A 		vmov.f32	s1, #1.0e+0
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 15


 172 0004 9FED010A 		vldr.32	s0, .L4
 173 0008 FFF7FEBF 		b	_ZN5daisy6Random8GetFloatEff
 174              	.LVL1:
 175              	.L5:
 176              		.align	2
 177              	.L4:
 178 000c 00000000 		.word	0
 179              		.cfi_endproc
 180              	.LFE2541:
 182              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 183              		.align	1
 184              		.p2align 2,,3
 185              		.global	_Z13AudioCallbackPKPKfPPfj
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	_Z13AudioCallbackPKPKfPPfj:
 191              	.LVL2:
 192              	.LFB2542:
  48:MyProj.cpp    **** }
  49:MyProj.cpp    **** 
  50:MyProj.cpp    **** 
  51:MyProj.cpp    **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  52:MyProj.cpp    **** 
  53:MyProj.cpp    **** 
  54:MyProj.cpp    **** {
 193              		.loc 13 54 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
  55:MyProj.cpp    ****     hw.ProcessAllControls();
 197              		.loc 13 55 5 view .LVU43
 198              	.LBB298:
 199              	.LBI298:
  37:../../libDaisy//src/daisy_pod.h **** 
  38:../../libDaisy//src/daisy_pod.h ****     /** Init related stuff. */
  39:../../libDaisy//src/daisy_pod.h ****     void Init(bool boost = false);
  40:../../libDaisy//src/daisy_pod.h **** 
  41:../../libDaisy//src/daisy_pod.h ****     /** Wait for a bit
  42:../../libDaisy//src/daisy_pod.h ****     \param del Time to wait in ms.
  43:../../libDaisy//src/daisy_pod.h ****     */
  44:../../libDaisy//src/daisy_pod.h ****     void DelayMs(size_t del);
  45:../../libDaisy//src/daisy_pod.h **** 
  46:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  47:../../libDaisy//src/daisy_pod.h ****     \param cb Interleaved callback function
  48:../../libDaisy//src/daisy_pod.h ****     */
  49:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  50:../../libDaisy//src/daisy_pod.h **** 
  51:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  52:../../libDaisy//src/daisy_pod.h ****     \param cb multichannel callback function
  53:../../libDaisy//src/daisy_pod.h ****     */
  54:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  55:../../libDaisy//src/daisy_pod.h **** 
  56:../../libDaisy//src/daisy_pod.h ****     /**
  57:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  58:../../libDaisy//src/daisy_pod.h ****        \param cb New interleaved callback function.
  59:../../libDaisy//src/daisy_pod.h ****     */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 16


  60:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  61:../../libDaisy//src/daisy_pod.h **** 
  62:../../libDaisy//src/daisy_pod.h ****     /**
  63:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  64:../../libDaisy//src/daisy_pod.h ****        \param cb New multichannel callback function.
  65:../../libDaisy//src/daisy_pod.h ****     */
  66:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  67:../../libDaisy//src/daisy_pod.h **** 
  68:../../libDaisy//src/daisy_pod.h ****     /** Stops the audio if it is running. */
  69:../../libDaisy//src/daisy_pod.h ****     void StopAudio();
  70:../../libDaisy//src/daisy_pod.h **** 
  71:../../libDaisy//src/daisy_pod.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  72:../../libDaisy//src/daisy_pod.h ****      ** Audio must be stopped for this to work.
  73:../../libDaisy//src/daisy_pod.h ****      */
  74:../../libDaisy//src/daisy_pod.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  75:../../libDaisy//src/daisy_pod.h **** 
  76:../../libDaisy//src/daisy_pod.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  77:../../libDaisy//src/daisy_pod.h ****      */
  78:../../libDaisy//src/daisy_pod.h ****     float AudioSampleRate();
  79:../../libDaisy//src/daisy_pod.h **** 
  80:../../libDaisy//src/daisy_pod.h ****     /** Sets the number of samples processed per channel by the audio callback.
  81:../../libDaisy//src/daisy_pod.h ****      */
  82:../../libDaisy//src/daisy_pod.h ****     void SetAudioBlockSize(size_t blocksize);
  83:../../libDaisy//src/daisy_pod.h **** 
  84:../../libDaisy//src/daisy_pod.h ****     /** Returns the number of samples per channel in a block of audio. */
  85:../../libDaisy//src/daisy_pod.h ****     size_t AudioBlockSize();
  86:../../libDaisy//src/daisy_pod.h **** 
  87:../../libDaisy//src/daisy_pod.h ****     /** Returns the rate in Hz that the Audio callback is called */
  88:../../libDaisy//src/daisy_pod.h ****     float AudioCallbackRate();
  89:../../libDaisy//src/daisy_pod.h **** 
  90:../../libDaisy//src/daisy_pod.h ****     /**
  91:../../libDaisy//src/daisy_pod.h ****        Start analog to digital conversion.
  92:../../libDaisy//src/daisy_pod.h ****      */
  93:../../libDaisy//src/daisy_pod.h ****     void StartAdc();
  94:../../libDaisy//src/daisy_pod.h **** 
  95:../../libDaisy//src/daisy_pod.h ****     /** Stops Transfering data from the ADC */
  96:../../libDaisy//src/daisy_pod.h ****     void StopAdc();
  97:../../libDaisy//src/daisy_pod.h **** 
  98:../../libDaisy//src/daisy_pod.h ****     /** Call at same rate as analog reads for smooth reading.*/
  99:../../libDaisy//src/daisy_pod.h ****     void ProcessAnalogControls();
 100:../../libDaisy//src/daisy_pod.h **** 
 101:../../libDaisy//src/daisy_pod.h ****     /** Process Analog and Digital Controls */
 102:../../libDaisy//src/daisy_pod.h ****     inline void ProcessAllControls()
 200              		.loc 1 102 17 view .LVU44
 201              	.LBB299:
 103:../../libDaisy//src/daisy_pod.h ****     {
 104:../../libDaisy//src/daisy_pod.h ****         ProcessAnalogControls();
 202              		.loc 1 104 9 view .LVU45
 203              	.LBE299:
 204              	.LBE298:
  54:MyProj.cpp    ****     hw.ProcessAllControls();
 205              		.loc 13 54 1 is_stmt 0 view .LVU46
 206 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 207              		.cfi_def_cfa_offset 40
 208              		.cfi_offset 3, -40
 209              		.cfi_offset 4, -36
 210              		.cfi_offset 5, -32
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 17


 211              		.cfi_offset 6, -28
 212              		.cfi_offset 7, -24
 213              		.cfi_offset 8, -20
 214              		.cfi_offset 9, -16
 215              		.cfi_offset 10, -12
 216              		.cfi_offset 11, -8
 217              		.cfi_offset 14, -4
 218 0004 8146     		mov	r9, r0
 219              	.LBB302:
 220              	.LBB300:
 221              		.loc 1 104 30 view .LVU47
 222 0006 5D48     		ldr	r0, .L38
 223              	.LVL3:
 224              		.loc 1 104 30 view .LVU48
 225              	.LBE300:
 226              	.LBE302:
  54:MyProj.cpp    ****     hw.ProcessAllControls();
 227              		.loc 13 54 1 view .LVU49
 228 0008 8B46     		mov	fp, r1
 229 000a 9046     		mov	r8, r2
 230 000c 2DED028B 		vpush.64	{d8}
 231              		.cfi_def_cfa_offset 48
 232              		.cfi_offset 80, -48
 233              		.cfi_offset 81, -44
 234              	.LBB303:
 235              	.LBB301:
 236              		.loc 1 104 30 view .LVU50
 237 0010 FFF7FEFF 		bl	_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
 238              	.LVL4:
 105:../../libDaisy//src/daisy_pod.h ****         ProcessDigitalControls();
 239              		.loc 1 105 9 is_stmt 1 view .LVU51
 240              		.loc 1 105 31 is_stmt 0 view .LVU52
 241 0014 5948     		ldr	r0, .L38
 242 0016 FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
 243              	.LVL5:
 244              		.loc 1 105 31 view .LVU53
 245              	.LBE301:
 246              	.LBE303:
  56:MyProj.cpp    ****     //now here's the per sample stuff
  57:MyProj.cpp    **** 
  58:MyProj.cpp    ****      myTempo = hw.GetKnobValue(hw.KNOB_2) * 190.0f + 10.0f; // will result in a range from 10 to 20
 247              		.loc 13 58 6 is_stmt 1 view .LVU54
 248              		.loc 13 58 31 is_stmt 0 view .LVU55
 249 001a 0121     		movs	r1, #1
 250 001c 5748     		ldr	r0, .L38
 251 001e FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 252              	.LVL6:
 253              		.loc 13 58 52 view .LVU56
 254 0022 B2EE047A 		vmov.f32	s14, #1.0e+1
 255 0026 9FED566A 		vldr.32	s12, .L38+4
  59:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
  60:MyProj.cpp    ****     //we are counting samples, and there are 48000 of those per second (because our sample rate is 
  61:MyProj.cpp    ****     //so if we want a certain number of beats per minute, we need to figure out how many beats per 
  62:MyProj.cpp    ****     float tempBeatsPerSecond = myTempo / 60.0f; //there are 60 seconds per minute. I'm keep this fl
  63:MyProj.cpp    ****     //now let's figure out how many samples will happen in one beat of the metronome at the tempo w
  64:MyProj.cpp    ****     float tempSamplesPerBeat =  48000.0f / tempBeatsPerSecond;
  65:MyProj.cpp    ****     //that will do it - think it through in your head, if tempo is 60, then tempBeatsPerSecond is 1
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 18


  66:MyProj.cpp    **** 
  67:MyProj.cpp    ****     //now we can just use that tempSamplesPerBeat as the maxSampleCounterValue
  68:MyProj.cpp    ****     // sampleCounterMaxValue is an int, it will truncate tempSamplesPerBeat (for instance 48000.5 t
  69:MyProj.cpp    ****     //let's divide the number of samples per beat by 4 to get 1/16th-notes instead of 1/4-notes.
  70:MyProj.cpp    ****     sampleCounterMaxValue = tempSamplesPerBeat /4;
 256              		.loc 13 70 48 view .LVU57
 257 002a F5EE006A 		vmov.f32	s13, #2.5e-1
  62:MyProj.cpp    ****     //now let's figure out how many samples will happen in one beat of the metronome at the tempo w
 258              		.loc 13 62 11 view .LVU58
 259 002e DFED557A 		vldr.32	s15, .L38+8
  58:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
 260              		.loc 13 58 52 view .LVU59
 261 0032 A0EE067A 		vfma.f32	s14, s0, s12
  64:MyProj.cpp    ****     //that will do it - think it through in your head, if tempo is 60, then tempBeatsPerSecond is 1
 262              		.loc 13 64 11 view .LVU60
 263 0036 DFED545A 		vldr.32	s11, .L38+12
  58:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
 264              		.loc 13 58 14 view .LVU61
 265 003a 544B     		ldr	r3, .L38+16
  62:MyProj.cpp    ****     //now let's figure out how many samples will happen in one beat of the metronome at the tempo w
 266              		.loc 13 62 11 view .LVU62
 267 003c 87EE276A 		vdiv.f32	s12, s14, s15
  58:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
 268              		.loc 13 58 14 view .LVU63
 269 0040 83ED007A 		vstr.32	s14, [r3]
  62:MyProj.cpp    ****     //now let's figure out how many samples will happen in one beat of the metronome at the tempo w
 270              		.loc 13 62 5 is_stmt 1 view .LVU64
 271              	.LVL7:
  64:MyProj.cpp    ****     //that will do it - think it through in your head, if tempo is 60, then tempBeatsPerSecond is 1
 272              		.loc 13 64 5 view .LVU65
 273              		.loc 13 70 5 view .LVU66
 274              		.loc 13 70 27 is_stmt 0 view .LVU67
 275 0044 524B     		ldr	r3, .L38+20
  64:MyProj.cpp    ****     //that will do it - think it through in your head, if tempo is 60, then tempBeatsPerSecond is 1
 276              		.loc 13 64 11 view .LVU68
 277 0046 C5EE867A 		vdiv.f32	s15, s11, s12
 278              		.loc 13 70 48 view .LVU69
 279 004a 67EEA67A 		vmul.f32	s15, s15, s13
 280              		.loc 13 70 27 view .LVU70
 281 004e FDEEE77A 		vcvt.s32.f32	s15, s15
 282 0052 C3ED007A 		vstr.32	s15, [r3]	@ int
  71:MyProj.cpp    **** 
  72:MyProj.cpp    ****     for (size_t i = 0; i < size; i++)
 283              		.loc 13 72 5 is_stmt 1 view .LVU71
 284              	.LVL8:
 285              	.LBB304:
 286              		.loc 13 72 26 view .LVU72
 287 0056 B8F1000F 		cmp	r8, #0
 288 005a 00F08380 		beq	.L6
 289              		.loc 13 72 17 is_stmt 0 view .LVU73
 290 005e 0024     		movs	r4, #0
 291 0060 464D     		ldr	r5, .L38
 292 0062 DFF844A1 		ldr	r10, .L38+44
 293 0066 4B4F     		ldr	r7, .L38+24
 294 0068 2FE0     		b	.L7
 295              	.LVL9:
 296              	.L37:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 19


 297              	.LBB305:
 298              	.LBB306:
 299              	.LBB307:
 300              	.LBB308:
  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy//src/hid/switch.h **** 
  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
 301              		.loc 5 70 56 view .LVU74
 302 006a 95F8C630 		ldrb	r3, [r5, #198]	@ zero_extendqisi2
 303              	.LVL10:
 304              		.loc 5 70 56 view .LVU75
 305              	.LBE308:
 306              	.LBE307:
  73:MyProj.cpp    ****     {
  74:MyProj.cpp    ****         //get the next sample from the left channel of the input (right channel would be in[1][i])
  75:MyProj.cpp    ****         float mySample = in[0][i];
  76:MyProj.cpp    **** 
  77:MyProj.cpp    ****         //set buffer position to the beginning on the beginning of a button1 press
  78:MyProj.cpp    ****         if (hw.button1.RisingEdge())
  79:MyProj.cpp    ****         {
  80:MyProj.cpp    ****             tBuffer_setRecordPosition(&myBuffer, 0);
  81:MyProj.cpp    ****             tBuffer_record(&myBuffer);
  82:MyProj.cpp    ****         }
  83:MyProj.cpp    ****         //stop recording when button1 is let go of
  84:MyProj.cpp    ****         else if (hw.button1.FallingEdge())
  85:MyProj.cpp    ****         {
  86:MyProj.cpp    ****             tBuffer_stop(&myBuffer);
  87:MyProj.cpp    ****             //figure out how long you recorded for
  88:MyProj.cpp    ****             sampleLength = tBuffer_getRecordPosition(&myBuffer);
  89:MyProj.cpp    ****             //now use that timing to set the sampler to know how long into the sample to read
  90:MyProj.cpp    ****             tSampler_setLength(&mySampler, sampleLength);
  91:MyProj.cpp    ****         }
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 20


  92:MyProj.cpp    **** 
  93:MyProj.cpp    **** 
  94:MyProj.cpp    ****         //button 2 makes sample play back
  95:MyProj.cpp    ****         if (hw.button2.RisingEdge())
 307              		.loc 13 95 9 view .LVU76
 308 006e 7F2B     		cmp	r3, #127
 309 0070 56D0     		beq	.L34
  96:MyProj.cpp    ****         {
  97:MyProj.cpp    ****             tSampler_setStart(&mySampler, 0);
  98:MyProj.cpp    ****             tSampler_play(&mySampler);
  99:MyProj.cpp    ****             //since now we're going to have an if statement control structure in here, let's define
 100:MyProj.cpp    ****             float mySample = 0.0f;
 101:MyProj.cpp    ****             sampleCounter = 0;
 102:MyProj.cpp    ****         }
 103:MyProj.cpp    ****         else if (hw.button2.Pressed())
 310              		.loc 13 103 14 is_stmt 1 view .LVU77
 311              	.LVL11:
 312              	.LBB310:
 313              	.LBI310:
  71:../../libDaisy//src/hid/switch.h **** 
  72:../../libDaisy//src/hid/switch.h ****     /** \return true if the button was just released */
  73:../../libDaisy//src/hid/switch.h ****     inline bool FallingEdge() const
  74:../../libDaisy//src/hid/switch.h ****     {
  75:../../libDaisy//src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
  76:../../libDaisy//src/hid/switch.h ****     }
  77:../../libDaisy//src/hid/switch.h **** 
  78:../../libDaisy//src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  79:../../libDaisy//src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 314              		.loc 5 79 17 view .LVU78
 315              	.LBB311:
 316              		.loc 5 79 35 view .LVU79
 317              		.loc 5 79 35 is_stmt 0 view .LVU80
 318              	.LBE311:
 319              	.LBE310:
 320              		.loc 13 103 14 view .LVU81
 321 0072 FF2B     		cmp	r3, #255
 322 0074 41D0     		beq	.L18
 104:MyProj.cpp    ****         {
 105:MyProj.cpp    ****              //when sampleCounter is zero, it's a metronome pulse. At the bottom of the for loop we
 106:MyProj.cpp    ****             if (sampleCounter == 0)
 107:MyProj.cpp    ****             {
 108:MyProj.cpp    ****                 whichNoteInSequence++;
 109:MyProj.cpp    ****                 //if we go over the number of elements in the array, loop back to 0
 110:MyProj.cpp    ****                 if (whichNoteInSequence >= sequenceLength)
 111:MyProj.cpp    ****                 {
 112:MyProj.cpp    ****                     whichNoteInSequence = 0;
 113:MyProj.cpp    ****                 }
 114:MyProj.cpp    ****             }        
 115:MyProj.cpp    **** 
 116:MyProj.cpp    ****             //increment the sampleCounter variable so we can keep track of how many samples have pa
 117:MyProj.cpp    ****             //it will count 48000 samples per second because that's our "sample rate"
 118:MyProj.cpp    ****             sampleCounter = sampleCounter + 1;
 119:MyProj.cpp    ****             //we'll reset it to zero when it reaches sampleCounterMaxValue, then we can check for a
 120:MyProj.cpp    ****             //when our metronome has ticked (if we set sampleCounterMaxValue so that it will reach 
 121:MyProj.cpp    ****             if (sampleCounter >= sampleCounterMaxValue)
 122:MyProj.cpp    ****             {
 123:MyProj.cpp    ****                 sampleCounter = 0;
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 21


 124:MyProj.cpp    ****             }
 125:MyProj.cpp    ****     
 126:MyProj.cpp    ****         }
 127:MyProj.cpp    ****         //letting go of button stops it
 128:MyProj.cpp    ****         else if (hw.button2.FallingEdge())
 323              		.loc 13 128 14 is_stmt 1 view .LVU82
 324              	.LVL12:
 325              		.loc 13 128 14 is_stmt 0 view .LVU83
 326              	.LBE306:
 327              	.LBE305:
 328              	.LBE304:
  75:../../libDaisy//src/hid/switch.h ****     }
 329              		.loc 5 75 9 is_stmt 1 view .LVU84
 330              	.LBB330:
 331              	.LBB324:
 332              	.LBB316:
 333              		.loc 13 128 14 is_stmt 0 view .LVU85
 334 0076 802B     		cmp	r3, #128
 335 0078 78D0     		beq	.L16
 336              	.L33:
 337              	.LBE316:
 129:MyProj.cpp    ****         {
 130:MyProj.cpp    ****             tSampler_stop(&mySampler);
 131:MyProj.cpp    ****         }
 132:MyProj.cpp    **** 
 133:MyProj.cpp    ****         //knob1 controls sample speed
 134:MyProj.cpp    ****         tSampler_setRate(&mySampler, mySequence[whichNoteInSequence].rate); // scaling 0-1 range to
 338              		.loc 13 134 25 view .LVU86
 339 007a DAF80030 		ldr	r3, [r10]
 340              	.L12:
 341              		.loc 13 134 9 is_stmt 1 discriminator 2 view .LVU87
 342              		.loc 13 134 25 is_stmt 0 discriminator 2 view .LVU88
 343 007e 07EBC303 		add	r3, r7, r3, lsl #3
 344 0082 4548     		ldr	r0, .L38+28
 345              	.LBE324:
  72:MyProj.cpp    ****     {
 346              		.loc 13 72 5 discriminator 2 view .LVU89
 347 0084 0134     		adds	r4, r4, #1
 348              	.LVL13:
 349              	.LBB325:
 350              		.loc 13 134 25 discriminator 2 view .LVU90
 351 0086 93ED000A 		vldr.32	s0, [r3]
 352 008a FFF7FEFF 		bl	tSampler_setRate
 353              	.LVL14:
 135:MyProj.cpp    **** 
 136:MyProj.cpp    ****         //now tick the buffer with the input coming in so the buffer gets filled
 137:MyProj.cpp    ****         tBuffer_tick(&myBuffer, mySample);
 354              		.loc 13 137 9 is_stmt 1 discriminator 2 view .LVU91
 355              		.loc 13 137 21 is_stmt 0 discriminator 2 view .LVU92
 356 008e B0EE480A 		vmov.f32	s0, s16
 357 0092 4248     		ldr	r0, .L38+32
 358 0094 FFF7FEFF 		bl	tBuffer_tick
 359              	.LVL15:
 138:MyProj.cpp    **** 
 139:MyProj.cpp    ****         //then tick the sampler so it reads the buffer and sets mySample to the output value
 140:MyProj.cpp    ****         mySample = tSampler_tick(&mySampler);
 360              		.loc 13 140 9 is_stmt 1 discriminator 2 view .LVU93
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 22


 361              		.loc 13 140 33 is_stmt 0 discriminator 2 view .LVU94
 362 0098 3F48     		ldr	r0, .L38+28
 363 009a FFF7FEFF 		bl	tSampler_tick
 364              	.LVL16:
 141:MyProj.cpp    **** 
 142:MyProj.cpp    ****         //now set the audio outputs (left is [0] and right is [1] to be whatever value has been com
 143:MyProj.cpp    ****         out[0][i] = mySequence[whichNoteInSequence].vol * mySample;
 365              		.loc 13 143 53 discriminator 2 view .LVU95
 366 009e DAF80030 		ldr	r3, [r10]
 367              	.LBE325:
  72:MyProj.cpp    ****     {
 368              		.loc 13 72 26 discriminator 2 view .LVU96
 369 00a2 A045     		cmp	r8, r4
 370              	.LBB326:
 371              		.loc 13 143 53 discriminator 2 view .LVU97
 372 00a4 07EBC303 		add	r3, r7, r3, lsl #3
 373              		.loc 13 143 57 discriminator 2 view .LVU98
 374 00a8 D3ED017A 		vldr.32	s15, [r3, #4]
 144:MyProj.cpp    ****         out[1][i] = mySequence[whichNoteInSequence].vol * mySample;
 375              		.loc 13 144 19 discriminator 2 view .LVU99
 376 00ac DBE90001 		ldrd	r0, r1, [fp]
 143:MyProj.cpp    ****         out[1][i] = mySequence[whichNoteInSequence].vol * mySample;
 377              		.loc 13 143 57 discriminator 2 view .LVU100
 378 00b0 67EE807A 		vmul.f32	s15, s15, s0
 143:MyProj.cpp    ****         out[1][i] = mySequence[whichNoteInSequence].vol * mySample;
 379              		.loc 13 143 19 discriminator 2 view .LVU101
 380 00b4 3044     		add	r0, r0, r6
 381              		.loc 13 144 19 discriminator 2 view .LVU102
 382 00b6 3144     		add	r1, r1, r6
 143:MyProj.cpp    ****         out[1][i] = mySequence[whichNoteInSequence].vol * mySample;
 383              		.loc 13 143 19 discriminator 2 view .LVU103
 384 00b8 C0ED007A 		vstr.32	s15, [r0]
 385              		.loc 13 144 9 is_stmt 1 discriminator 2 view .LVU104
 386              		.loc 13 144 57 is_stmt 0 discriminator 2 view .LVU105
 387 00bc D3ED017A 		vldr.32	s15, [r3, #4]
 388 00c0 27EE800A 		vmul.f32	s0, s15, s0
 389              		.loc 13 144 19 discriminator 2 view .LVU106
 390 00c4 81ED000A 		vstr.32	s0, [r1]
 391              	.LBE326:
  72:MyProj.cpp    ****     {
 392              		.loc 13 72 5 is_stmt 1 discriminator 2 view .LVU107
 393              	.LVL17:
  72:MyProj.cpp    ****     {
 394              		.loc 13 72 26 discriminator 2 view .LVU108
 395 00c8 4CD0     		beq	.L6
 396              	.LVL18:
 397              	.L7:
 398              	.LBB327:
  75:MyProj.cpp    **** 
 399              		.loc 13 75 9 view .LVU109
  75:MyProj.cpp    **** 
 400              		.loc 13 75 15 is_stmt 0 view .LVU110
 401 00ca D9F80030 		ldr	r3, [r9]
 402 00ce A600     		lsls	r6, r4, #2
 403              	.LBB317:
 404              	.LBB318:
  70:../../libDaisy//src/hid/switch.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 23


 405              		.loc 5 70 54 view .LVU111
 406 00d0 95F8B010 		ldrb	r1, [r5, #176]	@ zero_extendqisi2
 407              	.LBE318:
 408              	.LBE317:
  75:MyProj.cpp    **** 
 409              		.loc 13 75 15 view .LVU112
 410 00d4 03EB8403 		add	r3, r3, r4, lsl #2
 411 00d8 93ED008A 		vldr.32	s16, [r3]
 412              	.LVL19:
  78:MyProj.cpp    ****         {
 413              		.loc 13 78 9 is_stmt 1 view .LVU113
 414              	.LBB320:
 415              	.LBI317:
  70:../../libDaisy//src/hid/switch.h **** 
 416              		.loc 5 70 17 view .LVU114
 417              	.LBB319:
  70:../../libDaisy//src/hid/switch.h **** 
 418              		.loc 5 70 38 view .LVU115
  70:../../libDaisy//src/hid/switch.h **** 
 419              		.loc 5 70 54 is_stmt 0 view .LVU116
 420 00dc 29B1     		cbz	r1, .L8
  70:../../libDaisy//src/hid/switch.h **** 
 421              		.loc 5 70 56 view .LVU117
 422 00de 95F8B630 		ldrb	r3, [r5, #182]	@ zero_extendqisi2
 423              	.LVL20:
  70:../../libDaisy//src/hid/switch.h **** 
 424              		.loc 5 70 56 view .LVU118
 425              	.LBE319:
 426              	.LBE320:
  78:MyProj.cpp    ****         {
 427              		.loc 13 78 9 view .LVU119
 428 00e2 7F2B     		cmp	r3, #127
 429 00e4 29D0     		beq	.L35
  84:MyProj.cpp    ****         {
 430              		.loc 13 84 14 is_stmt 1 view .LVU120
 431              	.LVL21:
  84:MyProj.cpp    ****         {
 432              		.loc 13 84 14 is_stmt 0 view .LVU121
 433              	.LBE327:
 434              	.LBE330:
  75:../../libDaisy//src/hid/switch.h ****     }
 435              		.loc 5 75 9 is_stmt 1 view .LVU122
 436              	.LBB331:
 437              	.LBB328:
  84:MyProj.cpp    ****         {
 438              		.loc 13 84 14 is_stmt 0 view .LVU123
 439 00e6 802B     		cmp	r3, #128
 440 00e8 2FD0     		beq	.L36
 441              	.L8:
  95:MyProj.cpp    ****         {
 442              		.loc 13 95 9 is_stmt 1 view .LVU124
 443              	.LVL22:
 444              	.LBB321:
 445              	.LBB313:
 446              	.LBI307:
  70:../../libDaisy//src/hid/switch.h **** 
 447              		.loc 5 70 17 view .LVU125
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 24


 448              	.LBB309:
  70:../../libDaisy//src/hid/switch.h **** 
 449              		.loc 5 70 38 view .LVU126
  70:../../libDaisy//src/hid/switch.h **** 
 450              		.loc 5 70 54 is_stmt 0 view .LVU127
 451 00ea 95F8C030 		ldrb	r3, [r5, #192]	@ zero_extendqisi2
 452 00ee 002B     		cmp	r3, #0
 453 00f0 BBD1     		bne	.L37
 454              	.LVL23:
  70:../../libDaisy//src/hid/switch.h **** 
 455              		.loc 5 70 54 view .LVU128
 456              	.LBE309:
 457              	.LBE313:
 103:MyProj.cpp    ****         {
 458              		.loc 13 103 14 is_stmt 1 view .LVU129
 459              	.LBB314:
 460              		.loc 5 79 17 view .LVU130
 461              	.LBB312:
 462              		.loc 5 79 35 view .LVU131
 463              		.loc 5 79 35 is_stmt 0 view .LVU132
 464              	.LBE312:
 465              	.LBE314:
 103:MyProj.cpp    ****         {
 466              		.loc 13 103 14 view .LVU133
 467 00f2 95F8C630 		ldrb	r3, [r5, #198]	@ zero_extendqisi2
 468 00f6 FF2B     		cmp	r3, #255
 469 00f8 BFD1     		bne	.L33
 470              	.L18:
 106:MyProj.cpp    ****             {
 471              		.loc 13 106 13 is_stmt 1 view .LVU134
 106:MyProj.cpp    ****             {
 472              		.loc 13 106 31 is_stmt 0 view .LVU135
 473 00fa 294A     		ldr	r2, .L38+36
 108:MyProj.cpp    ****                 //if we go over the number of elements in the array, loop back to 0
 474              		.loc 13 108 36 view .LVU136
 475 00fc DAF80030 		ldr	r3, [r10]
 106:MyProj.cpp    ****             {
 476              		.loc 13 106 31 view .LVU137
 477 0100 1168     		ldr	r1, [r2]
 106:MyProj.cpp    ****             {
 478              		.loc 13 106 13 view .LVU138
 479 0102 21B9     		cbnz	r1, .L14
 108:MyProj.cpp    ****                 //if we go over the number of elements in the array, loop back to 0
 480              		.loc 13 108 17 is_stmt 1 view .LVU139
 108:MyProj.cpp    ****                 //if we go over the number of elements in the array, loop back to 0
 481              		.loc 13 108 36 is_stmt 0 view .LVU140
 482 0104 0133     		adds	r3, r3, #1
 110:MyProj.cpp    ****                 {
 483              		.loc 13 110 17 is_stmt 1 view .LVU141
 484 0106 0F2B     		cmp	r3, #15
 485 0108 34DC     		bgt	.L15
 108:MyProj.cpp    ****                 //if we go over the number of elements in the array, loop back to 0
 486              		.loc 13 108 36 is_stmt 0 view .LVU142
 487 010a CAF80030 		str	r3, [r10]
 488              	.L14:
 118:MyProj.cpp    ****             //we'll reset it to zero when it reaches sampleCounterMaxValue, then we can check for a
 489              		.loc 13 118 13 is_stmt 1 view .LVU143
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 25


 121:MyProj.cpp    ****             {
 490              		.loc 13 121 13 is_stmt 0 view .LVU144
 491 010e 2048     		ldr	r0, .L38+20
 118:MyProj.cpp    ****             //we'll reset it to zero when it reaches sampleCounterMaxValue, then we can check for a
 492              		.loc 13 118 43 view .LVU145
 493 0110 0131     		adds	r1, r1, #1
 121:MyProj.cpp    ****             {
 494              		.loc 13 121 13 view .LVU146
 495 0112 0068     		ldr	r0, [r0]
 118:MyProj.cpp    ****             //we'll reset it to zero when it reaches sampleCounterMaxValue, then we can check for a
 496              		.loc 13 118 27 view .LVU147
 497 0114 1160     		str	r1, [r2]
 121:MyProj.cpp    ****             {
 498              		.loc 13 121 13 is_stmt 1 view .LVU148
 499 0116 8142     		cmp	r1, r0
 500 0118 B1DB     		blt	.L12
 123:MyProj.cpp    ****             }
 501              		.loc 13 123 17 view .LVU149
 123:MyProj.cpp    ****             }
 502              		.loc 13 123 31 is_stmt 0 view .LVU150
 503 011a 0021     		movs	r1, #0
 504 011c 1160     		str	r1, [r2]
 505 011e AEE7     		b	.L12
 506              	.L34:
 507              	.LBB315:
  97:MyProj.cpp    ****             tSampler_play(&mySampler);
 508              		.loc 13 97 13 is_stmt 1 view .LVU151
  97:MyProj.cpp    ****             tSampler_play(&mySampler);
 509              		.loc 13 97 30 is_stmt 0 view .LVU152
 510 0120 0021     		movs	r1, #0
 511 0122 1D48     		ldr	r0, .L38+28
 512 0124 FFF7FEFF 		bl	tSampler_setStart
 513              	.LVL24:
  98:MyProj.cpp    ****             //since now we're going to have an if statement control structure in here, let's define
 514              		.loc 13 98 13 is_stmt 1 view .LVU153
  98:MyProj.cpp    ****             //since now we're going to have an if statement control structure in here, let's define
 515              		.loc 13 98 26 is_stmt 0 view .LVU154
 516 0128 1B48     		ldr	r0, .L38+28
 517 012a FFF7FEFF 		bl	tSampler_play
 518              	.LVL25:
 100:MyProj.cpp    ****             sampleCounter = 0;
 519              		.loc 13 100 13 is_stmt 1 view .LVU155
 101:MyProj.cpp    ****         }
 520              		.loc 13 101 13 view .LVU156
 101:MyProj.cpp    ****         }
 521              		.loc 13 101 27 is_stmt 0 view .LVU157
 522 012e 1C4B     		ldr	r3, .L38+36
 523 0130 0021     		movs	r1, #0
 524 0132 1960     		str	r1, [r3]
 525              	.LBE315:
 526              	.LBE321:
 134:MyProj.cpp    **** 
 527              		.loc 13 134 25 view .LVU158
 528 0134 DAF80030 		ldr	r3, [r10]
 529              	.LBB322:
 530 0138 A1E7     		b	.L12
 531              	.LVL26:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 26


 532              	.L35:
 134:MyProj.cpp    **** 
 533              		.loc 13 134 25 view .LVU159
 534              	.LBE322:
  80:MyProj.cpp    ****             tBuffer_record(&myBuffer);
 535              		.loc 13 80 13 is_stmt 1 view .LVU160
  80:MyProj.cpp    ****             tBuffer_record(&myBuffer);
 536              		.loc 13 80 38 is_stmt 0 view .LVU161
 537 013a 0021     		movs	r1, #0
 538 013c 1748     		ldr	r0, .L38+32
 539 013e FFF7FEFF 		bl	tBuffer_setRecordPosition
 540              	.LVL27:
  81:MyProj.cpp    ****         }
 541              		.loc 13 81 13 is_stmt 1 view .LVU162
  81:MyProj.cpp    ****         }
 542              		.loc 13 81 27 is_stmt 0 view .LVU163
 543 0142 1648     		ldr	r0, .L38+32
 544 0144 FFF7FEFF 		bl	tBuffer_record
 545              	.LVL28:
 546 0148 CFE7     		b	.L8
 547              	.L36:
  86:MyProj.cpp    ****             //figure out how long you recorded for
 548              		.loc 13 86 13 is_stmt 1 view .LVU164
  86:MyProj.cpp    ****             //figure out how long you recorded for
 549              		.loc 13 86 25 is_stmt 0 view .LVU165
 550 014a 1448     		ldr	r0, .L38+32
 551 014c FFF7FEFF 		bl	tBuffer_stop
 552              	.LVL29:
  88:MyProj.cpp    ****             //now use that timing to set the sampler to know how long into the sample to read
 553              		.loc 13 88 13 is_stmt 1 view .LVU166
  88:MyProj.cpp    ****             //now use that timing to set the sampler to know how long into the sample to read
 554              		.loc 13 88 53 is_stmt 0 view .LVU167
 555 0150 1248     		ldr	r0, .L38+32
 556 0152 FFF7FEFF 		bl	tBuffer_getRecordPosition
 557              	.LVL30:
  88:MyProj.cpp    ****             //now use that timing to set the sampler to know how long into the sample to read
 558              		.loc 13 88 26 view .LVU168
 559 0156 134B     		ldr	r3, .L38+40
  88:MyProj.cpp    ****             //now use that timing to set the sampler to know how long into the sample to read
 560              		.loc 13 88 53 view .LVU169
 561 0158 0146     		mov	r1, r0
  88:MyProj.cpp    ****             //now use that timing to set the sampler to know how long into the sample to read
 562              		.loc 13 88 26 view .LVU170
 563 015a 1860     		str	r0, [r3]
  90:MyProj.cpp    ****         }
 564              		.loc 13 90 13 is_stmt 1 view .LVU171
  90:MyProj.cpp    ****         }
 565              		.loc 13 90 31 is_stmt 0 view .LVU172
 566 015c 0E48     		ldr	r0, .L38+28
 567 015e FFF7FEFF 		bl	tSampler_setLength
 568              	.LVL31:
 569 0162 C2E7     		b	.L8
 570              	.LVL32:
 571              	.L6:
  90:MyProj.cpp    ****         }
 572              		.loc 13 90 31 view .LVU173
 573              	.LBE328:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 27


 574              	.LBE331:
 145:MyProj.cpp    ****     }
 146:MyProj.cpp    **** }
 575              		.loc 13 146 1 view .LVU174
 576 0164 BDEC028B 		vldm	sp!, {d8}
 577              		.cfi_remember_state
 578              		.cfi_restore 80
 579              		.cfi_restore 81
 580              		.cfi_def_cfa_offset 40
 581 0168 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 582              	.LVL33:
 583              	.L16:
 584              		.cfi_restore_state
 585              	.LBB332:
 586              	.LBB329:
 587              	.LBB323:
 130:MyProj.cpp    ****         }
 588              		.loc 13 130 13 is_stmt 1 view .LVU175
 130:MyProj.cpp    ****         }
 589              		.loc 13 130 26 is_stmt 0 view .LVU176
 590 016c 0A48     		ldr	r0, .L38+28
 591 016e FFF7FEFF 		bl	tSampler_stop
 592              	.LVL34:
 593 0172 82E7     		b	.L33
 594              	.L15:
 112:MyProj.cpp    ****                 }
 595              		.loc 13 112 21 is_stmt 1 view .LVU177
 596 0174 0B46     		mov	r3, r1
 112:MyProj.cpp    ****                 }
 597              		.loc 13 112 41 is_stmt 0 view .LVU178
 598 0176 CAF80010 		str	r1, [r10]
 599 017a C8E7     		b	.L14
 600              	.L39:
 601              		.align	2
 602              	.L38:
 603 017c 00000000 		.word	hw
 604 0180 00003E43 		.word	1128136704
 605 0184 00007042 		.word	1114636288
 606 0188 00803B47 		.word	1195081728
 607 018c 00000000 		.word	.LANCHOR0
 608 0190 00000000 		.word	.LANCHOR1
 609 0194 00000000 		.word	.LANCHOR7
 610 0198 00000000 		.word	.LANCHOR4
 611 019c 00000000 		.word	.LANCHOR2
 612 01a0 00000000 		.word	.LANCHOR5
 613 01a4 00000000 		.word	.LANCHOR3
 614 01a8 00000000 		.word	.LANCHOR6
 615              	.LBE323:
 616              	.LBE329:
 617              	.LBE332:
 618              		.cfi_endproc
 619              	.LFE2542:
 621              		.section	.text.startup.main,"ax",%progbits
 622              		.align	1
 623              		.p2align 2,,3
 624              		.global	main
 625              		.syntax unified
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 28


 626              		.thumb
 627              		.thumb_func
 629              	main:
 630              	.LFB2543:
 147:MyProj.cpp    **** 
 148:MyProj.cpp    **** int main(void)
 149:MyProj.cpp    **** {
 631              		.loc 13 149 1 is_stmt 1 view -0
 632              		.cfi_startproc
 633              		@ Volatile: function does not return.
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 150:MyProj.cpp    ****     hw.Init();
 636              		.loc 13 150 5 view .LVU180
 149:MyProj.cpp    ****     hw.Init();
 637              		.loc 13 149 1 is_stmt 0 view .LVU181
 638 0000 08B5     		push	{r3, lr}
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 3, -8
 641              		.cfi_offset 14, -4
 642              		.loc 13 150 12 view .LVU182
 643 0002 0021     		movs	r1, #0
 644 0004 1A48     		ldr	r0, .L43
 645 0006 FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
 646              	.LVL35:
 151:MyProj.cpp    ****     hw.SetAudioBlockSize(4); // number of samples handled per callback
 647              		.loc 13 151 5 is_stmt 1 view .LVU183
 648              		.loc 13 151 25 is_stmt 0 view .LVU184
 649 000a 0421     		movs	r1, #4
 650 000c 1848     		ldr	r0, .L43
 651 000e FFF7FEFF 		bl	_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
 652              	.LVL36:
 152:MyProj.cpp    ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 653              		.loc 13 152 5 is_stmt 1 view .LVU185
 654              		.loc 13 152 26 is_stmt 0 view .LVU186
 655 0012 0321     		movs	r1, #3
 656 0014 1648     		ldr	r0, .L43
 657 0016 FFF7FEFF 		bl	_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 658              	.LVL37:
 153:MyProj.cpp    ****     Random::Init();
 659              		.loc 13 153 5 is_stmt 1 view .LVU187
 660              		.loc 13 153 17 is_stmt 0 view .LVU188
 661 001a FFF7FEFF 		bl	_ZN5daisy6Random4InitEv
 662              	.LVL38:
 154:MyProj.cpp    ****     hw.StartAdc();
 663              		.loc 13 154 5 is_stmt 1 view .LVU189
 664              		.loc 13 154 16 is_stmt 0 view .LVU190
 665 001e 1448     		ldr	r0, .L43
 666 0020 FFF7FEFF 		bl	_ZN5daisy8DaisyPod8StartAdcEv
 667              	.LVL39:
 155:MyProj.cpp    ****     LEAF_init(&leaf, 48000, leafMemory, 455355, randomNumber);
 668              		.loc 13 155 5 is_stmt 1 view .LVU191
 669              		.loc 13 155 14 is_stmt 0 view .LVU192
 670 0024 9FED130A 		vldr.32	s0, .L43+4
 671 0028 134B     		ldr	r3, .L43+8
 672 002a 144A     		ldr	r2, .L43+12
 673 002c 1449     		ldr	r1, .L43+16
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 29


 674 002e 1548     		ldr	r0, .L43+20
 675 0030 FFF7FEFF 		bl	LEAF_init
 676              	.LVL40:
 156:MyProj.cpp    **** 
 157:MyProj.cpp    ****     //first, initialize that large memory pool to be ready for usage
 158:MyProj.cpp    ****     tMempool_init(&bigPool, bigMemory, 67108864, &leaf);
 677              		.loc 13 158 5 is_stmt 1 view .LVU193
 678              		.loc 13 158 18 is_stmt 0 view .LVU194
 679 0034 134B     		ldr	r3, .L43+20
 680 0036 4FF08062 		mov	r2, #67108864
 681 003a 1349     		ldr	r1, .L43+24
 682 003c 1348     		ldr	r0, .L43+28
 683 003e FFF7FEFF 		bl	tMempool_init
 684              	.LVL41:
 159:MyProj.cpp    ****     //then place the buffer into that memory pool instead of the default pool, using the "initToPoo
 160:MyProj.cpp    ****     tBuffer_initToPool(&myBuffer, 240000, &bigPool); //five-second buffer, set up a segment of memo
 685              		.loc 13 160 5 is_stmt 1 view .LVU195
 686              		.loc 13 160 23 is_stmt 0 view .LVU196
 687 0042 124A     		ldr	r2, .L43+28
 688 0044 1249     		ldr	r1, .L43+32
 689 0046 1348     		ldr	r0, .L43+36
 690 0048 FFF7FEFF 		bl	tBuffer_initToPool
 691              	.LVL42:
 161:MyProj.cpp    ****    
 162:MyProj.cpp    ****     //the tSampler object doesn't need to go into the large pool, it's just a small thing that refe
 163:MyProj.cpp    ****     tSampler_init(&mySampler, &myBuffer, &leaf); //make a "sampler" object that uses that buffer fo
 692              		.loc 13 163 5 is_stmt 1 view .LVU197
 693              		.loc 13 163 18 is_stmt 0 view .LVU198
 694 004c 0D4A     		ldr	r2, .L43+20
 695 004e 1149     		ldr	r1, .L43+36
 696 0050 1148     		ldr	r0, .L43+40
 697 0052 FFF7FEFF 		bl	tSampler_init
 698              	.LVL43:
 164:MyProj.cpp    ****     tSampler_setMode(&mySampler, PlayLoop); //other options are Play Normal (no looping), and PlayB
 699              		.loc 13 164 5 is_stmt 1 view .LVU199
 700              		.loc 13 164 21 is_stmt 0 view .LVU200
 701 0056 0121     		movs	r1, #1
 702 0058 0F48     		ldr	r0, .L43+40
 703 005a FFF7FEFF 		bl	tSampler_setMode
 704              	.LVL44:
 165:MyProj.cpp    ****    
 166:MyProj.cpp    ****     hw.StartAudio(AudioCallback);
 705              		.loc 13 166 5 is_stmt 1 view .LVU201
 706              		.loc 13 166 18 is_stmt 0 view .LVU202
 707 005e 0F49     		ldr	r1, .L43+44
 708 0060 0348     		ldr	r0, .L43
 709 0062 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
 710              	.LVL45:
 711              	.L41:
 167:MyProj.cpp    **** 
 168:MyProj.cpp    ****     while(1) {
 712              		.loc 13 168 5 is_stmt 1 discriminator 1 view .LVU203
 169:MyProj.cpp    ****         //the RGB leds on the pod need to be updated with the "update" function here to work
 170:MyProj.cpp    **** 
 171:MyProj.cpp    ****         hw.UpdateLeds();
 713              		.loc 13 171 9 discriminator 1 view .LVU204
 714              		.loc 13 171 22 is_stmt 0 discriminator 1 view .LVU205
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 30


 715 0066 0248     		ldr	r0, .L43
 716 0068 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
 717              	.LVL46:
 168:MyProj.cpp    ****         //the RGB leds on the pod need to be updated with the "update" function here to work
 718              		.loc 13 168 5 is_stmt 1 discriminator 1 view .LVU206
 719 006c FBE7     		b	.L41
 720              	.L44:
 721 006e 00BF     		.align	2
 722              	.L43:
 723 0070 00000000 		.word	hw
 724 0074 00803B47 		.word	1195081728
 725 0078 00000000 		.word	_Z12randomNumberv
 726 007c BBF20600 		.word	455355
 727 0080 00000000 		.word	leafMemory
 728 0084 00000000 		.word	.LANCHOR8
 729 0088 00000000 		.word	bigMemory
 730 008c 00000000 		.word	.LANCHOR9
 731 0090 80A90300 		.word	240000
 732 0094 00000000 		.word	.LANCHOR2
 733 0098 00000000 		.word	.LANCHOR4
 734 009c 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 735              		.cfi_endproc
 736              	.LFE2543:
 738              		.section	.text.startup._GLOBAL__sub_I_leaf,"ax",%progbits
 739              		.align	1
 740              		.p2align 2,,3
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 745              	_GLOBAL__sub_I_leaf:
 746              	.LFB2571:
 172:MyProj.cpp    ****     }
 173:MyProj.cpp    **** }
 747              		.loc 13 173 1 view -0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751              	.LBB398:
 752              	.LBI398:
 753              		.loc 13 173 1 view .LVU208
 754              	.LVL47:
 755              	.LBB399:
 756              	.LBB400:
 757              	.LBI400:
  35:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
 758              		.loc 1 35 5 view .LVU209
 759              	.LBB401:
 760              	.LBB402:
 761              	.LBI402:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 762              		.loc 8 21 5 view .LVU210
 763              	.LBB403:
 764              	.LBB404:
 765              	.LBI404:
 766              		.file 14 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 31


   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 32


  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 33


 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 767              		.loc 14 166 5 view .LVU211
 768              	.LBB405:
 769              	.LBB406:
 770              		.loc 14 166 34 is_stmt 0 view .LVU212
 771 0000 1348     		ldr	r0, .L47
 772 0002 0022     		movs	r2, #0
 773              	.LBE406:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 34


 774              	.LBE405:
 775              	.LBE404:
 776              	.LBE403:
 777              	.LBE402:
 778              	.LBB422:
 779              	.LBB423:
 780              	.LBB424:
 781              	.LBB425:
 782              	.LBB426:
 783              	.LBB427:
 784              	.LBB428:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 785              		.loc 2 37 20 view .LVU213
 786 0004 1349     		ldr	r1, .L47+4
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 787              		.loc 2 36 20 view .LVU214
 788 0006 00F51043 		add	r3, r0, #36864
  38:../../libDaisy//src/hid/midi.h ****         }
 789              		.loc 2 38 20 view .LVU215
 790 000a B1F804C0 		ldrh	ip, [r1, #4]
 791              	.LBE428:
 792              	.LBE427:
 793              	.LBE426:
 794              	.LBE425:
 795              	.LBE424:
 796              	.LBE423:
 797              	.LBE422:
 798              	.LBE401:
 799              	.LBE400:
 800              	.LBE399:
 801              	.LBE398:
 802              		.loc 13 173 1 view .LVU216
 803 000e 00B5     		push	{lr}
 804              		.cfi_def_cfa_offset 4
 805              		.cfi_offset 14, -4
 806              	.LBB483:
 807              	.LBB481:
 808              	.LBB480:
 809              	.LBB479:
 810              	.LBB457:
 811              	.LBB454:
 812              	.LBB451:
 813              	.LBB438:
 814              	.LBB435:
 815              	.LBB432:
 816              	.LBB429:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 817              		.loc 2 37 20 view .LVU217
 818 0010 B1F800E0 		ldrh	lr, [r1]
 819              	.LBE429:
 820              	.LBE432:
 821              	.LBE435:
 822              	.LBE438:
 823              	.LBE451:
 824              	.LBE454:
 825              	.LBE457:
 826              	.LBB458:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 35


 827              	.LBB420:
 828              	.LBB409:
 829              	.LBB408:
 830              	.LBB407:
 831              		.loc 14 166 34 view .LVU218
 832 0014 0260     		str	r2, [r0]
 833              	.LVL48:
 834              		.loc 14 166 34 view .LVU219
 835              	.LBE407:
 836              	.LBE408:
 837              	.LBE409:
 838              	.LBB410:
 839              	.LBI410:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 840              		.loc 12 95 5 is_stmt 1 view .LVU220
 841              	.LBE410:
 842              	.LBE420:
 843              	.LBE458:
 844              	.LBB459:
 845              	.LBB455:
 846              	.LBB452:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 847              		.loc 2 84 19 is_stmt 0 view .LVU221
 848 0016 1049     		ldr	r1, .L47+8
 849              	.LBE452:
 850              	.LBE455:
 851              	.LBE459:
 852              	.LBB460:
 853              	.LBB421:
 854              	.LBB413:
 855              	.LBB411:
 856              	.LBB412:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 857              		.loc 12 95 35 view .LVU222
 858 0018 4261     		str	r2, [r0, #20]
 859              	.LVL49:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 860              		.loc 12 95 35 view .LVU223
 861              	.LBE412:
 862              	.LBE411:
 863              	.LBE413:
 864              	.LBB414:
 865              	.LBI414:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 866              		.loc 11 92 5 is_stmt 1 view .LVU224
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 867              		.loc 11 92 5 is_stmt 0 view .LVU225
 868              	.LBE414:
 869              	.LBB415:
 870              	.LBI415:
 871              		.file 15 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 36


   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 37


  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 872              		.loc 15 84 5 is_stmt 1 view .LVU226
 873              	.LBB416:
 874              	.LBB417:
 875              		.loc 15 84 33 is_stmt 0 view .LVU227
 876 001a 0262     		str	r2, [r0, #32]
 877              	.LVL50:
 878              		.loc 15 84 33 view .LVU228
 879              	.LBE417:
 880              	.LBE416:
 881              	.LBE415:
 882              	.LBB418:
 883              	.LBI418:
  40:../../libDaisy//src/hid/usb.h **** 
 884              		.loc 10 40 5 is_stmt 1 view .LVU229
  40:../../libDaisy//src/hid/usb.h **** 
 885              		.loc 10 40 5 is_stmt 0 view .LVU230
 886              	.LBE418:
 887              	.LBB419:
 888              	.LBI419:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 889              		.loc 9 77 5 is_stmt 1 view .LVU231
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 890              		.loc 9 77 5 is_stmt 0 view .LVU232
 891              	.LBE419:
 892              	.LBE421:
 893              	.LBE460:
 894              	.LBB461:
 895              	.LBI461:
  20:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 896              		.loc 7 20 5 is_stmt 1 view .LVU233
 897              	.LBB462:
 898              	.LBB463:
 899              	.LBI463:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 900              		.loc 5 41 5 view .LVU234
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 38


 901              		.loc 5 41 5 is_stmt 0 view .LVU235
 902              	.LBE463:
 903              	.LBE462:
 904              	.LBE461:
 905              	.LBB464:
 906              	.LBI464:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 907              		.loc 6 21 5 is_stmt 1 view .LVU236
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 908              		.loc 6 21 5 is_stmt 0 view .LVU237
 909              	.LBE464:
 910              	.LBB465:
 911              	.LBI465:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 912              		.loc 6 21 5 is_stmt 1 view .LVU238
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 913              		.loc 6 21 5 is_stmt 0 view .LVU239
 914              	.LBE465:
 915              	.LBB466:
 916              	.LBI466:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 917              		.loc 5 41 5 is_stmt 1 view .LVU240
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 918              		.loc 5 41 5 is_stmt 0 view .LVU241
 919              	.LBE466:
 920              	.LBB467:
 921              	.LBI467:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 922              		.loc 5 41 5 is_stmt 1 view .LVU242
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 923              		.loc 5 41 5 is_stmt 0 view .LVU243
 924              	.LBE467:
 925              	.LBB468:
 926              	.LBI468:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 927              		.loc 3 17 5 is_stmt 1 view .LVU244
 928              	.LBB469:
 929              	.LBB470:
 930              	.LBI470:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 931              		.loc 4 24 5 view .LVU245
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 932              		.loc 4 24 5 is_stmt 0 view .LVU246
 933              	.LBE470:
 934              	.LBB471:
 935              	.LBI471:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 936              		.loc 4 24 5 is_stmt 1 view .LVU247
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 937              		.loc 4 24 5 is_stmt 0 view .LVU248
 938              	.LBE471:
 939              	.LBB472:
 940              	.LBI472:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 941              		.loc 4 24 5 is_stmt 1 view .LVU249
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 942              		.loc 4 24 5 is_stmt 0 view .LVU250
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 39


 943              	.LBE472:
 944              	.LBE469:
 945              	.LBE468:
 946              	.LBB473:
 947              	.LBI473:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 948              		.loc 3 17 5 is_stmt 1 view .LVU251
 949              	.LBB474:
 950              	.LBB475:
 951              	.LBI475:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 952              		.loc 4 24 5 view .LVU252
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 953              		.loc 4 24 5 is_stmt 0 view .LVU253
 954              	.LBE475:
 955              	.LBB476:
 956              	.LBI476:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 957              		.loc 4 24 5 is_stmt 1 view .LVU254
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 958              		.loc 4 24 5 is_stmt 0 view .LVU255
 959              	.LBE476:
 960              	.LBB477:
 961              	.LBI477:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 962              		.loc 4 24 5 is_stmt 1 view .LVU256
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 963              		.loc 4 24 5 is_stmt 0 view .LVU257
 964              	.LBE477:
 965              	.LBE474:
 966              	.LBE473:
 967              	.LBB478:
 968              	.LBI422:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 969              		.loc 2 84 5 is_stmt 1 view .LVU258
 970              	.LBB456:
 971              	.LBB453:
 972              	.LBB439:
 973              	.LBI439:
 974              		.file 16 "../../libDaisy//src/per/uart.h"
   1:../../libDaisy//src/per/uart.h **** /* 
   2:../../libDaisy//src/per/uart.h **** TODO
   3:../../libDaisy//src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libDaisy//src/per/uart.h **** - Transmit function improvements.
   5:../../libDaisy//src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libDaisy//src/per/uart.h **** */
   7:../../libDaisy//src/per/uart.h **** 
   8:../../libDaisy//src/per/uart.h **** #pragma once
   9:../../libDaisy//src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libDaisy//src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libDaisy//src/per/uart.h **** #include "daisy_core.h"
  12:../../libDaisy//src/per/uart.h **** 
  13:../../libDaisy//src/per/uart.h **** 
  14:../../libDaisy//src/per/uart.h **** namespace daisy
  15:../../libDaisy//src/per/uart.h **** {
  16:../../libDaisy//src/per/uart.h **** /** @addtogroup serial
  17:../../libDaisy//src/per/uart.h ****     @{
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 40


  18:../../libDaisy//src/per/uart.h ****     */
  19:../../libDaisy//src/per/uart.h **** 
  20:../../libDaisy//src/per/uart.h **** /** 
  21:../../libDaisy//src/per/uart.h ****     Uart Peripheral
  22:../../libDaisy//src/per/uart.h ****     @author shensley
  23:../../libDaisy//src/per/uart.h ****     @date March 2020
  24:../../libDaisy//src/per/uart.h ****     */
  25:../../libDaisy//src/per/uart.h **** class UartHandler
  26:../../libDaisy//src/per/uart.h **** {
  27:../../libDaisy//src/per/uart.h ****   public:
  28:../../libDaisy//src/per/uart.h ****     struct Config
  29:../../libDaisy//src/per/uart.h ****     {
  30:../../libDaisy//src/per/uart.h ****         enum class Peripheral
  31:../../libDaisy//src/per/uart.h ****         {
  32:../../libDaisy//src/per/uart.h ****             USART_1,
  33:../../libDaisy//src/per/uart.h ****             USART_2,
  34:../../libDaisy//src/per/uart.h ****             USART_3,
  35:../../libDaisy//src/per/uart.h ****             UART_4,
  36:../../libDaisy//src/per/uart.h ****             UART_5,
  37:../../libDaisy//src/per/uart.h ****             USART_6,
  38:../../libDaisy//src/per/uart.h ****             UART_7,
  39:../../libDaisy//src/per/uart.h ****             UART_8,
  40:../../libDaisy//src/per/uart.h ****             LPUART_1,
  41:../../libDaisy//src/per/uart.h ****         };
  42:../../libDaisy//src/per/uart.h **** 
  43:../../libDaisy//src/per/uart.h ****         enum class StopBits
  44:../../libDaisy//src/per/uart.h ****         {
  45:../../libDaisy//src/per/uart.h ****             BITS_0_5,
  46:../../libDaisy//src/per/uart.h ****             BITS_1,
  47:../../libDaisy//src/per/uart.h ****             BITS_1_5,
  48:../../libDaisy//src/per/uart.h ****             BITS_2,
  49:../../libDaisy//src/per/uart.h ****         };
  50:../../libDaisy//src/per/uart.h **** 
  51:../../libDaisy//src/per/uart.h ****         enum class Parity
  52:../../libDaisy//src/per/uart.h ****         {
  53:../../libDaisy//src/per/uart.h ****             NONE,
  54:../../libDaisy//src/per/uart.h ****             EVEN,
  55:../../libDaisy//src/per/uart.h ****             ODD,
  56:../../libDaisy//src/per/uart.h ****         };
  57:../../libDaisy//src/per/uart.h **** 
  58:../../libDaisy//src/per/uart.h ****         enum class Mode
  59:../../libDaisy//src/per/uart.h ****         {
  60:../../libDaisy//src/per/uart.h ****             RX,
  61:../../libDaisy//src/per/uart.h ****             TX,
  62:../../libDaisy//src/per/uart.h ****             TX_RX,
  63:../../libDaisy//src/per/uart.h ****         };
  64:../../libDaisy//src/per/uart.h **** 
  65:../../libDaisy//src/per/uart.h ****         enum class WordLength
  66:../../libDaisy//src/per/uart.h ****         {
  67:../../libDaisy//src/per/uart.h ****             BITS_7,
  68:../../libDaisy//src/per/uart.h ****             BITS_8,
  69:../../libDaisy//src/per/uart.h ****             BITS_9,
  70:../../libDaisy//src/per/uart.h ****         };
  71:../../libDaisy//src/per/uart.h **** 
  72:../../libDaisy//src/per/uart.h ****         struct
  73:../../libDaisy//src/per/uart.h ****         {
  74:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 41


  75:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libDaisy//src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libDaisy//src/per/uart.h **** 
  78:../../libDaisy//src/per/uart.h ****         Config()
  79:../../libDaisy//src/per/uart.h ****         {
  80:../../libDaisy//src/per/uart.h ****             // user must init periph, pin_config, and mode
  81:../../libDaisy//src/per/uart.h ****             stopbits   = StopBits::BITS_1;
  82:../../libDaisy//src/per/uart.h ****             parity     = Parity::NONE;
  83:../../libDaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
  84:../../libDaisy//src/per/uart.h ****             baudrate   = 4800;
  85:../../libDaisy//src/per/uart.h ****             // baudrate   = 31250;
  86:../../libDaisy//src/per/uart.h ****         }
  87:../../libDaisy//src/per/uart.h **** 
  88:../../libDaisy//src/per/uart.h ****         Peripheral periph;
  89:../../libDaisy//src/per/uart.h ****         StopBits   stopbits;
  90:../../libDaisy//src/per/uart.h ****         Parity     parity;
  91:../../libDaisy//src/per/uart.h ****         Mode       mode;
  92:../../libDaisy//src/per/uart.h ****         WordLength wordlength;
  93:../../libDaisy//src/per/uart.h ****         uint32_t   baudrate;
  94:../../libDaisy//src/per/uart.h ****     };
  95:../../libDaisy//src/per/uart.h **** 
  96:../../libDaisy//src/per/uart.h **** 
  97:../../libDaisy//src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 975              		.loc 16 97 5 view .LVU259
 976              	.LBB440:
 977              	.LBB441:
 978              		.loc 16 97 35 is_stmt 0 view .LVU260
 979 001c C0F87C21 		str	r2, [r0, #380]
 980              	.LVL51:
 981              		.loc 16 97 35 view .LVU261
 982              	.LBE441:
 983              	.LBE440:
 984              	.LBE439:
 985              	.LBB442:
 986              	.LBI442:
 987              		.file 17 "../../libDaisy//src/util/ringbuffer.h"
   1:../../libDaisy//src/util/ringbuffer.h **** #pragma once
   2:../../libDaisy//src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libDaisy//src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libDaisy//src/util/ringbuffer.h **** 
   5:../../libDaisy//src/util/ringbuffer.h **** #include <algorithm>
   6:../../libDaisy//src/util/ringbuffer.h **** 
   7:../../libDaisy//src/util/ringbuffer.h **** namespace daisy
   8:../../libDaisy//src/util/ringbuffer.h **** {
   9:../../libDaisy//src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libDaisy//src/util/ringbuffer.h ****     @{
  11:../../libDaisy//src/util/ringbuffer.h **** */
  12:../../libDaisy//src/util/ringbuffer.h **** 
  13:../../libDaisy//src/util/ringbuffer.h **** /**
  14:../../libDaisy//src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libDaisy//src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libDaisy//src/util/ringbuffer.h **** */
  17:../../libDaisy//src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libDaisy//src/util/ringbuffer.h **** class RingBuffer
  19:../../libDaisy//src/util/ringbuffer.h **** {
  20:../../libDaisy//src/util/ringbuffer.h ****   public:
  21:../../libDaisy//src/util/ringbuffer.h ****     RingBuffer() {}
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 42


 988              		.loc 17 21 5 is_stmt 1 view .LVU262
 989              		.loc 17 21 5 is_stmt 0 view .LVU263
 990              	.LBE442:
 991              	.LBB443:
 992              	.LBI425:
  86:../../libDaisy//src/hid/midi.h **** 
  87:../../libDaisy//src/hid/midi.h ****     struct Config
 993              		.loc 2 87 12 is_stmt 1 view .LVU264
 994              	.LBB436:
 995              	.LBI426:
  34:../../libDaisy//src/hid/midi.h ****         {
 996              		.loc 2 34 9 view .LVU265
 997              	.LBB433:
 998              	.LBB430:
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 999              		.loc 2 36 13 view .LVU266
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 1000              		.loc 2 36 20 is_stmt 0 view .LVU267
 1001 0020 C3F82422 		str	r2, [r3, #548]
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 1002              		.loc 2 37 13 is_stmt 1 view .LVU268
  38:../../libDaisy//src/hid/midi.h ****         }
 1003              		.loc 2 38 20 is_stmt 0 view .LVU269
 1004 0024 A3F82AC2 		strh	ip, [r3, #554]	@ movhi
 1005              	.LBE430:
 1006              	.LBE433:
 1007              	.LBE436:
 1008              	.LBE443:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 1009              		.loc 2 84 19 view .LVU270
 1010 0028 4FF0070C 		mov	ip, #7
 1011              	.LBB444:
 1012              	.LBB445:
 1013              	.LBB446:
 1014              	.LBB447:
 1015              		.loc 16 97 35 view .LVU271
 1016 002c C3F82C22 		str	r2, [r3, #556]
 1017              	.LBE447:
 1018              	.LBE446:
 1019              	.LBE445:
 1020              	.LBE444:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 1021              		.loc 2 84 19 view .LVU272
 1022 0030 4FF60F02 		movw	r2, #63503
 1023 0034 C3F83012 		str	r1, [r3, #560]
 1024 0038 A3F83422 		strh	r2, [r3, #564]	@ movhi
 1025 003c 83F836C2 		strb	ip, [r3, #566]
 1026              	.LBB449:
 1027              	.LBB437:
 1028              	.LBB434:
 1029              	.LBB431:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 1030              		.loc 2 37 20 view .LVU273
 1031 0040 A3F828E2 		strh	lr, [r3, #552]	@ movhi
  38:../../libDaisy//src/hid/midi.h ****         }
 1032              		.loc 2 38 13 is_stmt 1 view .LVU274
 1033              	.LVL52:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 43


  38:../../libDaisy//src/hid/midi.h ****         }
 1034              		.loc 2 38 13 is_stmt 0 view .LVU275
 1035              	.LBE431:
 1036              	.LBE434:
 1037              	.LBE437:
 1038              	.LBE449:
 1039              	.LBB450:
 1040              	.LBI444:
  25:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
 1041              		.loc 2 25 5 is_stmt 1 view .LVU276
 1042              	.LBB448:
 1043              	.LBI445:
 1044              		.loc 16 97 5 view .LVU277
 1045              		.loc 16 97 5 is_stmt 0 view .LVU278
 1046              	.LBE448:
 1047              	.LBE450:
 1048              	.LBE453:
 1049              	.LBE456:
 1050              	.LBE478:
 1051              	.LBE479:
 1052              	.LBE480:
  34:MyProj.cpp    **** 
 1053              		.loc 13 34 10 view .LVU279
 1054 0044 054A     		ldr	r2, .L47+12
 1055 0046 0649     		ldr	r1, .L47+16
 1056              	.LBE481:
 1057              	.LBE483:
 1058              		.loc 13 173 1 view .LVU280
 1059 0048 5DF804EB 		ldr	lr, [sp], #4
 1060              		.cfi_restore 14
 1061              		.cfi_def_cfa_offset 0
 1062              	.LBB484:
 1063              	.LBB482:
  34:MyProj.cpp    **** 
 1064              		.loc 13 34 10 view .LVU281
 1065 004c FFF7FEBF 		b	__aeabi_atexit
 1066              	.LVL53:
 1067              	.L48:
 1068              		.align	2
 1069              	.L47:
 1070 0050 00000000 		.word	hw
 1071 0054 00000000 		.word	.LANCHOR10
 1072 0058 80707FF0 		.word	-260083584
 1073 005c 00000000 		.word	__dso_handle
 1074 0060 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 1075              	.LBE482:
 1076              	.LBE484:
 1077              		.cfi_endproc
 1078              	.LFE2571:
 1080              		.section	.init_array,"aw",%init_array
 1081              		.align	2
 1082 0000 00000000 		.word	_GLOBAL__sub_I_leaf(target1)
 1083              		.global	sampleLength
 1084              		.global	mySampler
 1085              		.global	myBuffer
 1086              		.global	hw
 1087              		.global	bigPool
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 44


 1088              		.global	bigMemory
 1089              		.global	whichNoteInSequence
 1090              		.global	myTempo
 1091              		.global	sampleCounterMaxValue
 1092              		.global	sampleCounter
 1093              		.global	myFreq
 1094              		.global	mySequence
 1095              		.global	leafMemory
 1096              		.global	leaf
 1097              		.section	.rodata
 1098              		.align	2
 1099              		.set	.LANCHOR10,. + 0
 1100              	.LC0:
 1101 0000 01       		.byte	1
 1102 0001 07       		.byte	7
 1103 0002 0000     		.space	2
 1104              	.LC1:
 1105 0004 01       		.byte	1
 1106 0005 06       		.byte	6
 1107              		.section	.bss.bigPool,"aw",%nobits
 1108              		.align	2
 1109              		.set	.LANCHOR9,. + 0
 1112              	bigPool:
 1113 0000 00000000 		.space	4
 1114              		.section	.bss.hw,"aw",%nobits
 1115              		.align	2
 1118              	hw:
 1119 0000 00000000 		.space	37432
 1119      00000000 
 1119      00000000 
 1119      00000000 
 1119      00000000 
 1120              		.section	.bss.leaf,"aw",%nobits
 1121              		.align	2
 1122              		.set	.LANCHOR8,. + 0
 1125              	leaf:
 1126 0000 00000000 		.space	80
 1126      00000000 
 1126      00000000 
 1126      00000000 
 1126      00000000 
 1127              		.section	.bss.leafMemory,"aw",%nobits
 1128              		.align	2
 1131              	leafMemory:
 1132 0000 00000000 		.space	455355
 1132      00000000 
 1132      00000000 
 1132      00000000 
 1132      00000000 
 1133              		.section	.bss.myBuffer,"aw",%nobits
 1134              		.align	2
 1135              		.set	.LANCHOR2,. + 0
 1138              	myBuffer:
 1139 0000 00000000 		.space	4
 1140              		.section	.bss.mySampler,"aw",%nobits
 1141              		.align	2
 1142              		.set	.LANCHOR4,. + 0
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 45


 1145              	mySampler:
 1146 0000 00000000 		.space	4
 1147              		.section	.bss.myTempo,"aw",%nobits
 1148              		.align	2
 1149              		.set	.LANCHOR0,. + 0
 1152              	myTempo:
 1153 0000 00000000 		.space	4
 1154              		.section	.bss.sampleCounter,"aw",%nobits
 1155              		.align	2
 1156              		.set	.LANCHOR5,. + 0
 1159              	sampleCounter:
 1160 0000 00000000 		.space	4
 1161              		.section	.bss.whichNoteInSequence,"aw",%nobits
 1162              		.align	2
 1163              		.set	.LANCHOR6,. + 0
 1166              	whichNoteInSequence:
 1167 0000 00000000 		.space	4
 1168              		.section	.data.myFreq,"aw"
 1169              		.align	2
 1172              	myFreq:
 1173 0000 00005C43 		.word	1130102784
 1174              		.section	.data.mySequence,"aw"
 1175              		.align	2
 1176              		.set	.LANCHOR7,. + 0
 1179              	mySequence:
 1180 0000 000080BF 		.word	-1082130432
 1181 0004 0000003F 		.word	1056964608
 1182 0008 0000C03F 		.word	1069547520
 1183 000c 0000003F 		.word	1056964608
 1184 0010 000000BF 		.word	-1090519040
 1185 0014 6666663F 		.word	1063675494
 1186 0018 713DAA3F 		.word	1068121457
 1187 001c 0000003F 		.word	1056964608
 1188 0020 00000040 		.word	1073741824
 1189 0024 3333333F 		.word	1060320051
 1190 0028 0000A0BF 		.word	-1080033280
 1191 002c 0000003F 		.word	1056964608
 1192 0030 0000F03F 		.word	1072693248
 1193 0034 0000003F 		.word	1056964608
 1194 0038 000000C0 		.word	-1073741824
 1195 003c CDCC4C3F 		.word	1061997773
 1196 0040 0000403F 		.word	1061158912
 1197 0044 CDCCCC3E 		.word	1053609165
 1198 0048 0000C0BF 		.word	-1077936128
 1199 004c 0000003F 		.word	1056964608
 1200 0050 9A99993F 		.word	1067030938
 1201 0054 CDCC4C3E 		.word	1045220557
 1202 0058 713DAA3F 		.word	1068121457
 1203 005c 0000003F 		.word	1056964608
 1204 0060 000090BF 		.word	-1081081856
 1205 0064 0000003F 		.word	1056964608
 1206 0068 0000A03F 		.word	1067450368
 1207 006c 9A99193F 		.word	1058642330
 1208 0070 C3F528BF 		.word	-1087834685
 1209 0074 0000003F 		.word	1056964608
 1210 0078 3333B3BF 		.word	-1078774989
 1211 007c 9A99993E 		.word	1050253722
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 46


 1212              		.section	.data.sampleCounterMaxValue,"aw"
 1213              		.align	2
 1214              		.set	.LANCHOR1,. + 0
 1217              	sampleCounterMaxValue:
 1218 0000 80BB0000 		.word	48000
 1219              		.section	.data.sampleLength,"aw"
 1220              		.align	2
 1221              		.set	.LANCHOR3,. + 0
 1224              	sampleLength:
 1225 0000 01000000 		.word	1
 1226              		.section	.sdram_bss,"aw"
 1227              		.align	2
 1230              	bigMemory:
 1231 0000 00000000 		.space	67108864
 1231      00000000 
 1231      00000000 
 1231      00000000 
 1231      00000000 
 1232              		.text
 1233              	.Letext0:
 1234              		.file 18 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 1235              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 1236              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 1237              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 1238              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 1239              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 1240              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 1241              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 1242              		.file 26 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 1243              		.file 27 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 1244              		.file 28 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 1245              		.file 29 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 1246              		.file 30 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 1247              		.file 31 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 1248              		.file 32 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 1249              		.file 33 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 1250              		.file 34 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 1251              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 1252              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 1253              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 1254              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 1255              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 1256              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 1257              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 1258              		.file 42 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 1259              		.file 43 "../../libDaisy//src/daisy_core.h"
 1260              		.file 44 "../../libDaisy//src/per/tim.h"
 1261              		.file 45 "../../libDaisy//src/per/sai.h"
 1262              		.file 46 "../../libDaisy//src/hid/MidiEvent.h"
 1263              		.file 47 "../../libDaisy//src/per/rng.h"
 1264              		.file 48 "../../libDaisy//src/util/wav_format.h"
 1265              		.file 49 "../../libDaisy//src/util/color.h"
 1266              		.file 50 "../../libDaisy//src/dev/max11300.h"
 1267              		.file 51 "../../libDaisy//src/per/gpio.h"
 1268              		.file 52 "../../libDaisy//src/dev/sdram.h"
 1269              		.file 53 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 1270              		.file 54 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 47


 1271              		.file 55 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 1272              		.file 56 "../../../LEAF/leaf/./Inc/leaf-mempool.h"
 1273              		.file 57 "../../../LEAF/leaf/./Inc/leaf-global.h"
 1274              		.file 58 "../../../LEAF/leaf/./Inc/leaf-envelopes.h"
 1275              		.file 59 "../../../LEAF/leaf/./Inc/leaf-sampling.h"
 1276              		.file 60 "../../libDaisy//src/dev/sr_595.h"
 1277              		.file 61 "../../../LEAF/leaf/leaf.h"
 1278              		.file 62 "<built-in>"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 48


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MyProj.cpp
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:19     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD2Ev
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD1Ev
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:154    .text._Z12randomNumberv:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:161    .text._Z12randomNumberv:0000000000000000 _Z12randomNumberv
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:178    .text._Z12randomNumberv:000000000000000c $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:183    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:190    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:603    .text._Z13AudioCallbackPKPKfPPfj:000000000000017c $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1118   .bss.hw:0000000000000000 hw
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:622    .text.startup.main:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:629    .text.startup.main:0000000000000000 main
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:723    .text.startup.main:0000000000000070 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1131   .bss.leafMemory:0000000000000000 leafMemory
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1230   .sdram_bss:0000000000000000 bigMemory
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:739    .text.startup._GLOBAL__sub_I_leaf:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:745    .text.startup._GLOBAL__sub_I_leaf:0000000000000000 _GLOBAL__sub_I_leaf
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1070   .text.startup._GLOBAL__sub_I_leaf:0000000000000050 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1081   .init_array:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1224   .data.sampleLength:0000000000000000 sampleLength
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1145   .bss.mySampler:0000000000000000 mySampler
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1138   .bss.myBuffer:0000000000000000 myBuffer
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1112   .bss.bigPool:0000000000000000 bigPool
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1166   .bss.whichNoteInSequence:0000000000000000 whichNoteInSequence
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1152   .bss.myTempo:0000000000000000 myTempo
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1217   .data.sampleCounterMaxValue:0000000000000000 sampleCounterMaxValue
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1159   .bss.sampleCounter:0000000000000000 sampleCounter
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1172   .data.myFreq:0000000000000000 myFreq
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1179   .data.mySequence:0000000000000000 mySequence
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1125   .bss.leaf:0000000000000000 leaf
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1098   .rodata:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1108   .bss.bigPool:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1115   .bss.hw:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1121   .bss.leaf:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1128   .bss.leafMemory:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1134   .bss.myBuffer:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1141   .bss.mySampler:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1148   .bss.myTempo:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1155   .bss.sampleCounter:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1162   .bss.whichNoteInSequence:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1169   .data.myFreq:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1175   .data.mySequence:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1213   .data.sampleCounterMaxValue:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1220   .data.sampleLength:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s:1227   .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy8DaisyPodD5Ev

UNDEFINED SYMBOLS
_ZN5daisy6Random8GetFloatEff
_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
tSampler_setRate
tBuffer_tick
tSampler_tick
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc1lMoHO.s 			page 49


tSampler_setStart
tSampler_play
tBuffer_setRecordPosition
tBuffer_record
tBuffer_stop
tBuffer_getRecordPosition
tSampler_setLength
tSampler_stop
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy6Random4InitEv
_ZN5daisy8DaisyPod8StartAdcEv
LEAF_init
tMempool_init
tBuffer_initToPool
tSampler_init
tSampler_setMode
_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
_ZN5daisy8DaisyPod10UpdateLedsEv
__aeabi_atexit
__dso_handle
