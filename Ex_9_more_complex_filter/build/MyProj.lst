ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"MyProj.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  19              		.align	1
  20              		.p2align 2,,3
  21              		.weak	_ZN5daisy8DaisyPodD2Ev
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN5daisy8DaisyPodD2Ev:
  27              	.LVL0:
  28              	.LFB2538:
  29              		.file 1 "../../libDaisy//src/daisy_pod.h"
   1:../../libDaisy//src/daisy_pod.h **** #pragma once
   2:../../libDaisy//src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../../libDaisy//src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../../libDaisy//src/daisy_pod.h **** 
   5:../../libDaisy//src/daisy_pod.h **** #include "daisy_seed.h"
   6:../../libDaisy//src/daisy_pod.h **** 
   7:../../libDaisy//src/daisy_pod.h **** namespace daisy
   8:../../libDaisy//src/daisy_pod.h **** {
   9:../../libDaisy//src/daisy_pod.h **** /**
  10:../../libDaisy//src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libDaisy//src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libDaisy//src/daisy_pod.h ****     @author Stephen Hensley
  13:../../libDaisy//src/daisy_pod.h ****     @date November 2019
  14:../../libDaisy//src/daisy_pod.h ****     @ingroup boards
  15:../../libDaisy//src/daisy_pod.h **** */
  16:../../libDaisy//src/daisy_pod.h **** class DaisyPod
  17:../../libDaisy//src/daisy_pod.h **** {
  18:../../libDaisy//src/daisy_pod.h ****   public:
  19:../../libDaisy//src/daisy_pod.h ****     /** Switches */
  20:../../libDaisy//src/daisy_pod.h ****     enum Sw
  21:../../libDaisy//src/daisy_pod.h ****     {
  22:../../libDaisy//src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../../libDaisy//src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../../libDaisy//src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../../libDaisy//src/daisy_pod.h ****     };
  26:../../libDaisy//src/daisy_pod.h **** 
  27:../../libDaisy//src/daisy_pod.h ****     /** Knobs */
  28:../../libDaisy//src/daisy_pod.h ****     enum Knob
  29:../../libDaisy//src/daisy_pod.h ****     {
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 2


  30:../../libDaisy//src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../../libDaisy//src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../../libDaisy//src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../../libDaisy//src/daisy_pod.h ****     };
  34:../../libDaisy//src/daisy_pod.h **** 
  35:../../libDaisy//src/daisy_pod.h ****     DaisyPod() {}
  36:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
  30              		.loc 1 36 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB271:
  36              	.LBI271:
  37              		.file 2 "../../libDaisy//src/hid/midi.h"
   1:../../libDaisy//src/hid/midi.h **** #pragma once
   2:../../libDaisy//src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libDaisy//src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libDaisy//src/hid/midi.h **** 
   5:../../libDaisy//src/hid/midi.h **** // TODO: make this adjustable
   6:../../libDaisy//src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libDaisy//src/hid/midi.h **** 
   8:../../libDaisy//src/hid/midi.h **** #include <stdint.h>
   9:../../libDaisy//src/hid/midi.h **** #include <stdlib.h>
  10:../../libDaisy//src/hid/midi.h **** #include "per/uart.h"
  11:../../libDaisy//src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libDaisy//src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libDaisy//src/hid/midi.h **** #include "hid/usb_midi.h"
  14:../../libDaisy//src/hid/midi.h **** #include "sys/system.h"
  15:../../libDaisy//src/hid/midi.h **** 
  16:../../libDaisy//src/hid/midi.h **** namespace daisy
  17:../../libDaisy//src/hid/midi.h **** {
  18:../../libDaisy//src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART 
  19:../../libDaisy//src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../../libDaisy//src/hid/midi.h ****  *  @ingroup midi
  21:../../libDaisy//src/hid/midi.h **** */
  22:../../libDaisy//src/hid/midi.h **** class MidiUartTransport
  23:../../libDaisy//src/hid/midi.h **** {
  24:../../libDaisy//src/hid/midi.h ****   public:
  25:../../libDaisy//src/hid/midi.h ****     MidiUartTransport() {}
  26:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
  27:../../libDaisy//src/hid/midi.h **** 
  28:../../libDaisy//src/hid/midi.h ****     struct Config
  29:../../libDaisy//src/hid/midi.h ****     {
  30:../../libDaisy//src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  31:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    rx;
  32:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    tx;
  33:../../libDaisy//src/hid/midi.h **** 
  34:../../libDaisy//src/hid/midi.h ****         Config()
  35:../../libDaisy//src/hid/midi.h ****         {
  36:../../libDaisy//src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  37:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  38:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  39:../../libDaisy//src/hid/midi.h ****         }
  40:../../libDaisy//src/hid/midi.h ****     };
  41:../../libDaisy//src/hid/midi.h **** 
  42:../../libDaisy//src/hid/midi.h ****     inline void Init(Config config)
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 3


  43:../../libDaisy//src/hid/midi.h ****     {
  44:../../libDaisy//src/hid/midi.h ****         UartHandler::Config uart_config;
  45:../../libDaisy//src/hid/midi.h **** 
  46:../../libDaisy//src/hid/midi.h ****         //defaults
  47:../../libDaisy//src/hid/midi.h ****         uart_config.baudrate   = 31250;
  48:../../libDaisy//src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  49:../../libDaisy//src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  50:../../libDaisy//src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  51:../../libDaisy//src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  52:../../libDaisy//src/hid/midi.h **** 
  53:../../libDaisy//src/hid/midi.h ****         //user settings
  54:../../libDaisy//src/hid/midi.h ****         uart_config.periph        = config.periph;
  55:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  56:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  57:../../libDaisy//src/hid/midi.h **** 
  58:../../libDaisy//src/hid/midi.h ****         uart_.Init(uart_config);
  59:../../libDaisy//src/hid/midi.h ****     }
  60:../../libDaisy//src/hid/midi.h **** 
  61:../../libDaisy//src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  62:../../libDaisy//src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  63:../../libDaisy//src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  64:../../libDaisy//src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  65:../../libDaisy//src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  66:../../libDaisy//src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  67:../../libDaisy//src/hid/midi.h **** 
  68:../../libDaisy//src/hid/midi.h ****   private:
  69:../../libDaisy//src/hid/midi.h ****     UartHandler uart_;
  70:../../libDaisy//src/hid/midi.h **** };
  71:../../libDaisy//src/hid/midi.h **** 
  72:../../libDaisy//src/hid/midi.h **** /** 
  73:../../libDaisy//src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  74:../../libDaisy//src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  75:../../libDaisy//src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  76:../../libDaisy//src/hid/midi.h ****     @author shensley
  77:../../libDaisy//src/hid/midi.h ****     @date March 2020
  78:../../libDaisy//src/hid/midi.h ****     @ingroup midi
  79:../../libDaisy//src/hid/midi.h **** */
  80:../../libDaisy//src/hid/midi.h **** template <typename Transport>
  81:../../libDaisy//src/hid/midi.h **** class MidiHandler
  82:../../libDaisy//src/hid/midi.h **** {
  83:../../libDaisy//src/hid/midi.h ****   public:
  84:../../libDaisy//src/hid/midi.h ****     MidiHandler() {}
  85:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
  38              		.loc 2 85 5 view .LVU1
  39              	.LBB272:
  40              	.LBI272:
  26:../../libDaisy//src/hid/midi.h **** 
  41              		.loc 2 26 5 view .LVU2
  26:../../libDaisy//src/hid/midi.h **** 
  42              		.loc 2 26 5 is_stmt 0 view .LVU3
  43              	.LBE272:
  44              	.LBE271:
  45              	.LBB273:
  46              	.LBI273:
  47              		.file 3 "../../libDaisy//src/hid/rgb_led.h"
   1:../../libDaisy//src/hid/rgb_led.h **** #pragma once
   2:../../libDaisy//src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 4


   3:../../libDaisy//src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../../libDaisy//src/hid/rgb_led.h **** #include "hid/led.h"
   5:../../libDaisy//src/hid/rgb_led.h **** #include "util/color.h"
   6:../../libDaisy//src/hid/rgb_led.h **** 
   7:../../libDaisy//src/hid/rgb_led.h **** namespace daisy
   8:../../libDaisy//src/hid/rgb_led.h **** {
   9:../../libDaisy//src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../../libDaisy//src/hid/rgb_led.h ****     @{
  11:../../libDaisy//src/hid/rgb_led.h **** */
  12:../../libDaisy//src/hid/rgb_led.h **** 
  13:../../libDaisy//src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../../libDaisy//src/hid/rgb_led.h **** class RgbLed
  15:../../libDaisy//src/hid/rgb_led.h **** {
  16:../../libDaisy//src/hid/rgb_led.h ****   public:
  17:../../libDaisy//src/hid/rgb_led.h ****     RgbLed() {}
  18:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
  48              		.loc 3 18 5 is_stmt 1 view .LVU4
  49              	.LBB274:
  50              	.LBI274:
  51              		.file 4 "../../libDaisy//src/hid/led.h"
   1:../../libDaisy//src/hid/led.h **** 
   2:../../libDaisy//src/hid/led.h **** #pragma once
   3:../../libDaisy//src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libDaisy//src/hid/led.h **** #define DSY_LED_H
   5:../../libDaisy//src/hid/led.h **** #include "daisy_core.h"
   6:../../libDaisy//src/hid/led.h **** #include "per/gpio.h"
   7:../../libDaisy//src/hid/led.h **** 
   8:../../libDaisy//src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libDaisy//src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libDaisy//src/hid/led.h **** */
  11:../../libDaisy//src/hid/led.h **** 
  12:../../libDaisy//src/hid/led.h **** namespace daisy
  13:../../libDaisy//src/hid/led.h **** {
  14:../../libDaisy//src/hid/led.h **** /**
  15:../../libDaisy//src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libDaisy//src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libDaisy//src/hid/led.h ****     @author shensley
  18:../../libDaisy//src/hid/led.h ****     @date March 2020
  19:../../libDaisy//src/hid/led.h ****     @ingroup feedback
  20:../../libDaisy//src/hid/led.h **** */
  21:../../libDaisy//src/hid/led.h **** class Led
  22:../../libDaisy//src/hid/led.h **** {
  23:../../libDaisy//src/hid/led.h ****   public:
  24:../../libDaisy//src/hid/led.h ****     Led() {}
  25:../../libDaisy//src/hid/led.h ****     ~Led() {}
  52              		.loc 4 25 5 view .LVU5
  53              		.loc 4 25 5 is_stmt 0 view .LVU6
  54              	.LBE274:
  55              	.LBB275:
  56              	.LBI275:
  57              		.loc 4 25 5 is_stmt 1 view .LVU7
  58              		.loc 4 25 5 is_stmt 0 view .LVU8
  59              	.LBE275:
  60              	.LBB276:
  61              	.LBI276:
  62              		.loc 4 25 5 is_stmt 1 view .LVU9
  63              		.loc 4 25 5 is_stmt 0 view .LVU10
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 5


  64              	.LBE276:
  65              	.LBE273:
  66              	.LBB277:
  67              	.LBI277:
  68              		.loc 3 18 5 is_stmt 1 view .LVU11
  69              	.LBB278:
  70              	.LBI278:
  71              		.loc 4 25 5 view .LVU12
  72              		.loc 4 25 5 is_stmt 0 view .LVU13
  73              	.LBE278:
  74              	.LBB279:
  75              	.LBI279:
  76              		.loc 4 25 5 is_stmt 1 view .LVU14
  77              		.loc 4 25 5 is_stmt 0 view .LVU15
  78              	.LBE279:
  79              	.LBB280:
  80              	.LBI280:
  81              		.loc 4 25 5 is_stmt 1 view .LVU16
  82              		.loc 4 25 5 is_stmt 0 view .LVU17
  83              	.LBE280:
  84              	.LBE277:
  85              	.LBB281:
  86              	.LBI281:
  87              		.file 5 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 6


  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  88              		.loc 5 42 5 is_stmt 1 view .LVU18
  89              		.loc 5 42 5 is_stmt 0 view .LVU19
  90              	.LBE281:
  91              	.LBB282:
  92              	.LBI282:
  93              		.loc 5 42 5 is_stmt 1 view .LVU20
  94              		.loc 5 42 5 is_stmt 0 view .LVU21
  95              	.LBE282:
  96              	.LBB283:
  97              	.LBI283:
  98              		.file 6 "../../libDaisy//src/hid/ctrl.h"
   1:../../libDaisy//src/hid/ctrl.h **** #pragma once
   2:../../libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/ctrl.h **** 
   6:../../libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libDaisy//src/hid/ctrl.h **** namespace daisy
   8:../../libDaisy//src/hid/ctrl.h **** {
   9:../../libDaisy//src/hid/ctrl.h **** /**
  10:../../libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../../libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../../libDaisy//src/hid/ctrl.h **** */
  17:../../libDaisy//src/hid/ctrl.h **** class AnalogControl
  18:../../libDaisy//src/hid/ctrl.h **** {
  19:../../libDaisy//src/hid/ctrl.h ****   public:
  20:../../libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../../libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../../libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
  99              		.loc 6 23 5 is_stmt 1 view .LVU22
 100              		.loc 6 23 5 is_stmt 0 view .LVU23
 101              	.LBE283:
 102              	.LBB284:
 103              	.LBI284:
 104              		.loc 6 23 5 is_stmt 1 view .LVU24
 105              		.loc 6 23 5 is_stmt 0 view .LVU25
 106              	.LBE284:
 107              	.LBB285:
 108              	.LBI285:
 109              		.file 7 "../../libDaisy//src/hid/encoder.h"
   1:../../libDaisy//src/hid/encoder.h **** #pragma once
   2:../../libDaisy//src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libDaisy//src/hid/encoder.h **** #define DSY_ENCODER_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 7


   4:../../libDaisy//src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libDaisy//src/hid/encoder.h **** 
   8:../../libDaisy//src/hid/encoder.h **** namespace daisy
   9:../../libDaisy//src/hid/encoder.h **** {
  10:../../libDaisy//src/hid/encoder.h **** /** 
  11:../../libDaisy//src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libDaisy//src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libDaisy//src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/encoder.h ****     @date December 2019
  15:../../libDaisy//src/hid/encoder.h ****     @ingroup controls
  16:../../libDaisy//src/hid/encoder.h **** */
  17:../../libDaisy//src/hid/encoder.h **** class Encoder
  18:../../libDaisy//src/hid/encoder.h **** {
  19:../../libDaisy//src/hid/encoder.h ****   public:
  20:../../libDaisy//src/hid/encoder.h ****     Encoder() {}
  21:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 110              		.loc 7 21 5 is_stmt 1 view .LVU26
 111              	.LBB286:
 112              	.LBI286:
 113              		.loc 5 42 5 view .LVU27
 114              		.loc 5 42 5 is_stmt 0 view .LVU28
 115              	.LBE286:
 116              	.LBE285:
 117              	.LBB287:
 118              	.LBI287:
 119              		.file 8 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 120              		.loc 8 22 5 is_stmt 1 view .LVU29
 121              	.LBB288:
 122              	.LBI288:
 123              		.file 9 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 8


   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 9


  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
 124              		.loc 9 78 5 view .LVU30
 125              		.loc 9 78 5 is_stmt 0 view .LVU31
 126              	.LBE288:
 127              	.LBB289:
 128              	.LBI289:
 129              		.file 10 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 10


  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 130              		.loc 10 42 5 is_stmt 1 view .LVU32
 131              		.loc 10 42 5 is_stmt 0 view .LVU33
 132              	.LBE289:
 133              	.LBB290:
 134              	.LBI290:
 135              		.file 11 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 11


  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 136              		.loc 11 93 5 is_stmt 1 view .LVU34
 137              		.loc 11 93 5 is_stmt 0 view .LVU35
 138              	.LBE290:
 139              	.LBB291:
 140              	.LBI291:
 141              		.file 12 "../../libDaisy//src/hid/audio.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 12


   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 13


  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 142              		.loc 12 96 5 is_stmt 1 view .LVU36
 143              		.loc 12 96 5 is_stmt 0 view .LVU37
 144              	.LBE291:
 145              	.LBE287:
 146              		.loc 1 36 18 view .LVU38
 147 0000 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE2538:
 151              		.weak	_ZN5daisy8DaisyPodD1Ev
 152              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 153 0002 00BF     		.section	.text._Z12randomNumberv,"ax",%progbits
 154              		.align	1
 155              		.p2align 2,,3
 156              		.global	_Z12randomNumberv
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	_Z12randomNumberv:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 14


 162              	.LFB2541:
 163              		.file 13 "MyProj.cpp"
   1:MyProj.cpp    **** #include "daisy_pod.h"
   2:MyProj.cpp    **** #include "leaf.h"
   3:MyProj.cpp    **** using namespace daisy;
   4:MyProj.cpp    **** LEAF leaf;
   5:MyProj.cpp    **** char leafMemory[65535];
   6:MyProj.cpp    **** DaisyPod hw;
   7:MyProj.cpp    **** 
   8:MyProj.cpp    **** //make a sawtooth wave object
   9:MyProj.cpp    **** tPBSaw mySaw;
  10:MyProj.cpp    **** 
  11:MyProj.cpp    **** //make a filter object
  12:MyProj.cpp    **** tSVF myFilter; // SVF stands for "state-variable filter". It's likely the most flexible and useful 
  13:MyProj.cpp    **** 
  14:MyProj.cpp    **** //let's define a global variable to store the frequency so we can easily mess with it in our progra
  15:MyProj.cpp    **** float myFreq = 220.0f;
  16:MyProj.cpp    **** 
  17:MyProj.cpp    **** int currentFilter = 1; // defaults to lowpass, and lowpass SVFType is 1
  18:MyProj.cpp    **** 
  19:MyProj.cpp    **** //ADDING FILTERS TO THE SYNTHESIS 
  20:MyProj.cpp    **** // we use a sawtooth waveform, which has a lot of harmonics, and filter it to get a changing timbre
  21:MyProj.cpp    **** 
  22:MyProj.cpp    **** 
  23:MyProj.cpp    **** float randomNumber()
  24:MyProj.cpp    **** {
 164              		.loc 13 24 1 is_stmt 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
  25:MyProj.cpp    ****     return Random::GetFloat(0.0f, 1.0f);
 169              		.loc 13 25 5 view .LVU40
 170              		.loc 13 25 28 is_stmt 0 view .LVU41
 171 0000 F7EE000A 		vmov.f32	s1, #1.0e+0
 172 0004 9FED010A 		vldr.32	s0, .L4
 173 0008 FFF7FEBF 		b	_ZN5daisy6Random8GetFloatEff
 174              	.LVL1:
 175              	.L5:
 176              		.align	2
 177              	.L4:
 178 000c 00000000 		.word	0
 179              		.cfi_endproc
 180              	.LFE2541:
 182              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 183              		.align	1
 184              		.p2align 2,,3
 185              		.global	_Z13AudioCallbackPKPKfPPfj
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	_Z13AudioCallbackPKPKfPPfj:
 191              	.LVL2:
 192              	.LFB2542:
  26:MyProj.cpp    **** }
  27:MyProj.cpp    **** 
  28:MyProj.cpp    **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 15


  29:MyProj.cpp    **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  30:MyProj.cpp    **** {
 193              		.loc 13 30 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
  31:MyProj.cpp    ****     hw.ProcessAllControls();
 197              		.loc 13 31 5 view .LVU43
 198              	.LBB292:
 199              	.LBI292:
  37:../../libDaisy//src/daisy_pod.h **** 
  38:../../libDaisy//src/daisy_pod.h ****     /** Init related stuff. */
  39:../../libDaisy//src/daisy_pod.h ****     void Init(bool boost = false);
  40:../../libDaisy//src/daisy_pod.h **** 
  41:../../libDaisy//src/daisy_pod.h ****     /** Wait for a bit
  42:../../libDaisy//src/daisy_pod.h ****     \param del Time to wait in ms.
  43:../../libDaisy//src/daisy_pod.h ****     */
  44:../../libDaisy//src/daisy_pod.h ****     void DelayMs(size_t del);
  45:../../libDaisy//src/daisy_pod.h **** 
  46:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  47:../../libDaisy//src/daisy_pod.h ****     \param cb Interleaved callback function
  48:../../libDaisy//src/daisy_pod.h ****     */
  49:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  50:../../libDaisy//src/daisy_pod.h **** 
  51:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  52:../../libDaisy//src/daisy_pod.h ****     \param cb multichannel callback function
  53:../../libDaisy//src/daisy_pod.h ****     */
  54:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  55:../../libDaisy//src/daisy_pod.h **** 
  56:../../libDaisy//src/daisy_pod.h ****     /**
  57:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  58:../../libDaisy//src/daisy_pod.h ****        \param cb New interleaved callback function.
  59:../../libDaisy//src/daisy_pod.h ****     */
  60:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  61:../../libDaisy//src/daisy_pod.h **** 
  62:../../libDaisy//src/daisy_pod.h ****     /**
  63:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  64:../../libDaisy//src/daisy_pod.h ****        \param cb New multichannel callback function.
  65:../../libDaisy//src/daisy_pod.h ****     */
  66:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  67:../../libDaisy//src/daisy_pod.h **** 
  68:../../libDaisy//src/daisy_pod.h ****     /** Stops the audio if it is running. */
  69:../../libDaisy//src/daisy_pod.h ****     void StopAudio();
  70:../../libDaisy//src/daisy_pod.h **** 
  71:../../libDaisy//src/daisy_pod.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  72:../../libDaisy//src/daisy_pod.h ****      ** Audio must be stopped for this to work.
  73:../../libDaisy//src/daisy_pod.h ****      */
  74:../../libDaisy//src/daisy_pod.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  75:../../libDaisy//src/daisy_pod.h **** 
  76:../../libDaisy//src/daisy_pod.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  77:../../libDaisy//src/daisy_pod.h ****      */
  78:../../libDaisy//src/daisy_pod.h ****     float AudioSampleRate();
  79:../../libDaisy//src/daisy_pod.h **** 
  80:../../libDaisy//src/daisy_pod.h ****     /** Sets the number of samples processed per channel by the audio callback.
  81:../../libDaisy//src/daisy_pod.h ****      */
  82:../../libDaisy//src/daisy_pod.h ****     void SetAudioBlockSize(size_t blocksize);
  83:../../libDaisy//src/daisy_pod.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 16


  84:../../libDaisy//src/daisy_pod.h ****     /** Returns the number of samples per channel in a block of audio. */
  85:../../libDaisy//src/daisy_pod.h ****     size_t AudioBlockSize();
  86:../../libDaisy//src/daisy_pod.h **** 
  87:../../libDaisy//src/daisy_pod.h ****     /** Returns the rate in Hz that the Audio callback is called */
  88:../../libDaisy//src/daisy_pod.h ****     float AudioCallbackRate();
  89:../../libDaisy//src/daisy_pod.h **** 
  90:../../libDaisy//src/daisy_pod.h ****     /**
  91:../../libDaisy//src/daisy_pod.h ****        Start analog to digital conversion.
  92:../../libDaisy//src/daisy_pod.h ****      */
  93:../../libDaisy//src/daisy_pod.h ****     void StartAdc();
  94:../../libDaisy//src/daisy_pod.h **** 
  95:../../libDaisy//src/daisy_pod.h ****     /** Stops Transfering data from the ADC */
  96:../../libDaisy//src/daisy_pod.h ****     void StopAdc();
  97:../../libDaisy//src/daisy_pod.h **** 
  98:../../libDaisy//src/daisy_pod.h ****     /** Call at same rate as analog reads for smooth reading.*/
  99:../../libDaisy//src/daisy_pod.h ****     void ProcessAnalogControls();
 100:../../libDaisy//src/daisy_pod.h **** 
 101:../../libDaisy//src/daisy_pod.h ****     /** Process Analog and Digital Controls */
 102:../../libDaisy//src/daisy_pod.h ****     inline void ProcessAllControls()
 200              		.loc 1 102 17 view .LVU44
 201              	.LBB293:
 103:../../libDaisy//src/daisy_pod.h ****     {
 104:../../libDaisy//src/daisy_pod.h ****         ProcessAnalogControls();
 202              		.loc 1 104 9 view .LVU45
 203              	.LBE293:
 204              	.LBE292:
  30:MyProj.cpp    ****     hw.ProcessAllControls();
 205              		.loc 13 30 1 is_stmt 0 view .LVU46
 206 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 207              		.cfi_def_cfa_offset 24
 208              		.cfi_offset 4, -24
 209              		.cfi_offset 5, -20
 210              		.cfi_offset 6, -16
 211              		.cfi_offset 7, -12
 212              		.cfi_offset 8, -8
 213              		.cfi_offset 14, -4
 214              	.LBB296:
 215              	.LBB294:
 216              		.loc 1 104 30 view .LVU47
 217 0004 2C4D     		ldr	r5, .L19
 218              	.LBE294:
 219              	.LBE296:
  30:MyProj.cpp    ****     hw.ProcessAllControls();
 220              		.loc 13 30 1 view .LVU48
 221 0006 8846     		mov	r8, r1
 222 0008 1646     		mov	r6, r2
 223              	.LBB297:
 224              	.LBB295:
 225              		.loc 1 104 30 view .LVU49
 226 000a 2846     		mov	r0, r5
 227              	.LVL3:
 228              		.loc 1 104 30 view .LVU50
 229 000c FFF7FEFF 		bl	_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
 230              	.LVL4:
 105:../../libDaisy//src/daisy_pod.h ****         ProcessDigitalControls();
 231              		.loc 1 105 9 is_stmt 1 view .LVU51
 232              		.loc 1 105 31 is_stmt 0 view .LVU52
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 17


 233 0010 2846     		mov	r0, r5
 234 0012 FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
 235              	.LVL5:
 236              		.loc 1 105 31 view .LVU53
 237              	.LBE295:
 238              	.LBE297:
  32:MyProj.cpp    **** 
  33:MyProj.cpp    ****     if (hw.button1.RisingEdge())
 239              		.loc 13 33 5 is_stmt 1 view .LVU54
 240              	.LBB298:
 241              	.LBI298:
  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy//src/hid/switch.h **** 
  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
 242              		.loc 5 70 17 view .LVU55
 243              	.LBB299:
 244              		.loc 5 70 38 view .LVU56
 245              		.loc 5 70 54 is_stmt 0 view .LVU57
 246 0016 95F8B030 		ldrb	r3, [r5, #176]	@ zero_extendqisi2
 247 001a 1BB1     		cbz	r3, .L7
 248              	.LVL6:
 249              		.loc 5 70 54 view .LVU58
 250              	.LBE299:
 251              	.LBE298:
 252              		.loc 13 33 5 view .LVU59
 253 001c 95F8B630 		ldrb	r3, [r5, #182]	@ zero_extendqisi2
 254 0020 7F2B     		cmp	r3, #127
 255 0022 36D0     		beq	.L18
 256              	.L7:
 257              	.LVL7:
 258              	.LBB300:
  34:MyProj.cpp    ****     {
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 18


  35:MyProj.cpp    ****         currentFilter = currentFilter + 1;
  36:MyProj.cpp    **** 
  37:MyProj.cpp    ****         tSVF_setFilterType(&myFilter, (SVFType)(currentFilter % 5)); // in this line, I'm "casting"
  38:MyProj.cpp    ****         // another example of casting would be truncating a float to an integer by writing somethin
  39:MyProj.cpp    ****     }
  40:MyProj.cpp    ****     //now here's the per sample stuff
  41:MyProj.cpp    ****     for (size_t i = 0; i < size; i++)
 259              		.loc 13 41 26 is_stmt 1 discriminator 3 view .LVU60
 260 0024 9EB3     		cbz	r6, .L6
 261              		.loc 13 41 26 is_stmt 0 view .LVU61
 262 0026 0024     		movs	r4, #0
 263 0028 244F     		ldr	r7, .L19+4
 264              	.LVL8:
 265              	.L9:
 266              	.LBB301:
  42:MyProj.cpp    ****     {
  43:MyProj.cpp    ****         // now pass myFreq as the value we pass to the setFreq function on the mySaw object
  44:MyProj.cpp    ****         tPBSaw_setFreq(&mySaw, myFreq);
 267              		.loc 13 44 9 is_stmt 1 discriminator 2 view .LVU62
 268              		.loc 13 44 23 is_stmt 0 discriminator 2 view .LVU63
 269 002a 97ED000A 		vldr.32	s0, [r7]
 270 002e 2448     		ldr	r0, .L19+8
 271 0030 FFF7FEFF 		bl	tPBSaw_setFreq
 272              	.LVL9:
  45:MyProj.cpp    ****         
  46:MyProj.cpp    ****         tSVF_setFreq(&myFilter, hw.knob1.Value()*3000.0f + 60.0f);
 273              		.loc 13 46 9 is_stmt 1 discriminator 2 view .LVU64
 274              	.LBB302:
 275              	.LBI302:
  24:../../libDaisy//src/hid/ctrl.h **** 
  25:../../libDaisy//src/hid/ctrl.h ****     /** 
  26:../../libDaisy//src/hid/ctrl.h ****     Initializes the control
  27:../../libDaisy//src/hid/ctrl.h ****     \param *adcptr is a pointer to the raw adc read value -- This can be acquired with dsy_adc_get_
  28:../../libDaisy//src/hid/ctrl.h ****     \param sr is the samplerate in Hz that the Process function will be called at.
  29:../../libDaisy//src/hid/ctrl.h ****     \param flip determines whether the input is flipped (i.e. 1.f - input) or not before being proc
  30:../../libDaisy//src/hid/ctrl.h ****     \param invert determines whether the input is inverted (i.e. -1.f * input) or note before being
  31:../../libDaisy//src/hid/ctrl.h ****     \param slew_seconds is the slew time in seconds that it takes for the control to change to a ne
  32:../../libDaisy//src/hid/ctrl.h ****     */
  33:../../libDaisy//src/hid/ctrl.h ****     void Init(uint16_t *adcptr,
  34:../../libDaisy//src/hid/ctrl.h ****               float     sr,
  35:../../libDaisy//src/hid/ctrl.h ****               bool      flip         = false,
  36:../../libDaisy//src/hid/ctrl.h ****               bool      invert       = false,
  37:../../libDaisy//src/hid/ctrl.h ****               float     slew_seconds = 0.002f);
  38:../../libDaisy//src/hid/ctrl.h **** 
  39:../../libDaisy//src/hid/ctrl.h ****     /** 
  40:../../libDaisy//src/hid/ctrl.h ****     This Initializes the AnalogControl for a -5V to 5V inverted input
  41:../../libDaisy//src/hid/ctrl.h ****     All of the Init details are the same otherwise
  42:../../libDaisy//src/hid/ctrl.h ****     \param *adcptr Pointer to analog digital converter
  43:../../libDaisy//src/hid/ctrl.h ****     \param sr Audio engine sample rate
  44:../../libDaisy//src/hid/ctrl.h ****     */
  45:../../libDaisy//src/hid/ctrl.h ****     void InitBipolarCv(uint16_t *adcptr, float sr);
  46:../../libDaisy//src/hid/ctrl.h **** 
  47:../../libDaisy//src/hid/ctrl.h ****     /** 
  48:../../libDaisy//src/hid/ctrl.h ****     Filters, and transforms a raw ADC read into a normalized range.
  49:../../libDaisy//src/hid/ctrl.h ****     this should be called at the rate of specified by samplerate at Init time.   
  50:../../libDaisy//src/hid/ctrl.h ****     Default Initializations will return 0.0 -> 1.0
  51:../../libDaisy//src/hid/ctrl.h ****     Bi-polar CV inputs will return -1.0 -> 1.0
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 19


  52:../../libDaisy//src/hid/ctrl.h ****     */
  53:../../libDaisy//src/hid/ctrl.h ****     float Process();
  54:../../libDaisy//src/hid/ctrl.h **** 
  55:../../libDaisy//src/hid/ctrl.h ****     /** Returns the current stored value, without reprocessing */
  56:../../libDaisy//src/hid/ctrl.h ****     inline float Value() const { return val_; }
 276              		.loc 6 56 18 discriminator 2 view .LVU65
 277              	.LBB303:
 278              		.loc 6 56 34 discriminator 2 view .LVU66
 279              		.loc 6 56 34 is_stmt 0 discriminator 2 view .LVU67
 280              	.LBE303:
 281              	.LBE302:
 282              		.loc 13 46 21 discriminator 2 view .LVU68
 283 0034 95ED1C7A 		vldr.32	s14, [r5, #112]
 284 0038 DFED227A 		vldr.32	s15, .L19+12
 285 003c 9FED220A 		vldr.32	s0, .L19+16
 286 0040 2248     		ldr	r0, .L19+20
 287 0042 A7EE270A 		vfma.f32	s0, s14, s15
 288 0046 FFF7FEFF 		bl	tSVF_setFreq
 289              	.LVL10:
  47:MyProj.cpp    ****         tSVF_setQ(&myFilter, hw.knob2.Value()*3.0f + 0.3f);
 290              		.loc 13 47 9 is_stmt 1 discriminator 2 view .LVU69
 291              	.LBB304:
 292              	.LBI304:
 293              		.loc 6 56 18 discriminator 2 view .LVU70
 294              	.LBB305:
 295              		.loc 6 56 34 discriminator 2 view .LVU71
 296              		.loc 6 56 34 is_stmt 0 discriminator 2 view .LVU72
 297              	.LBE305:
 298              	.LBE304:
 299              		.loc 13 47 18 discriminator 2 view .LVU73
 300 004a F0EE087A 		vmov.f32	s15, #3.0e+0
 301 004e 95ED247A 		vldr.32	s14, [r5, #144]
 302 0052 9FED1F0A 		vldr.32	s0, .L19+24
 303 0056 1D48     		ldr	r0, .L19+20
 304 0058 A7EE270A 		vfma.f32	s0, s14, s15
 305 005c FFF7FEFF 		bl	tSVF_setQ
 306              	.LVL11:
  48:MyProj.cpp    ****         
  49:MyProj.cpp    ****         //get the next sample from the sine wave object mySaw and store it in a temporary variable 
  50:MyProj.cpp    ****         float mySample = tPBSaw_tick(&mySaw);
 307              		.loc 13 50 9 is_stmt 1 discriminator 2 view .LVU74
 308              		.loc 13 50 37 is_stmt 0 discriminator 2 view .LVU75
 309 0060 1748     		ldr	r0, .L19+8
 310 0062 FFF7FEFF 		bl	tPBSaw_tick
 311              	.LVL12:
  51:MyProj.cpp    ****         //now pass that sawtooth output through the lowpass filter object and store the result back
  52:MyProj.cpp    ****         mySample = tSVF_tick(&myFilter, mySample * 0.5f); // dropping the volume a bit so it doesn'
 312              		.loc 13 52 9 is_stmt 1 discriminator 2 view .LVU76
 313              		.loc 13 52 29 is_stmt 0 discriminator 2 view .LVU77
 314 0066 F6EE007A 		vmov.f32	s15, #5.0e-1
 315 006a 1848     		ldr	r0, .L19+20
 316 006c 20EE270A 		vmul.f32	s0, s0, s15
 317              	.LVL13:
 318              		.loc 13 52 29 discriminator 2 view .LVU78
 319 0070 FFF7FEFF 		bl	tSVF_tick
 320              	.LVL14:
  53:MyProj.cpp    **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 20


  54:MyProj.cpp    **** 
  55:MyProj.cpp    ****         //now set the audio outputs (left is [0] and right is [1] to be whatever value has been com
  56:MyProj.cpp    ****         out[0][i] = mySample;
  57:MyProj.cpp    ****         out[1][i] = mySample;
 321              		.loc 13 57 19 discriminator 2 view .LVU79
 322 0074 D8E90003 		ldrd	r0, r3, [r8]
 323              	.LVL15:
  56:MyProj.cpp    ****         out[1][i] = mySample;
 324              		.loc 13 56 9 is_stmt 1 discriminator 2 view .LVU80
  56:MyProj.cpp    ****         out[1][i] = mySample;
 325              		.loc 13 56 19 is_stmt 0 discriminator 2 view .LVU81
 326 0078 00EB8400 		add	r0, r0, r4, lsl #2
 327              		.loc 13 57 19 discriminator 2 view .LVU82
 328 007c 03EB8403 		add	r3, r3, r4, lsl #2
 329              	.LBE301:
  41:MyProj.cpp    ****     {
 330              		.loc 13 41 5 discriminator 2 view .LVU83
 331 0080 0134     		adds	r4, r4, #1
 332              	.LVL16:
 333              	.LBB306:
  56:MyProj.cpp    ****         out[1][i] = mySample;
 334              		.loc 13 56 19 discriminator 2 view .LVU84
 335 0082 80ED000A 		vstr.32	s0, [r0]
 336              		.loc 13 57 9 is_stmt 1 discriminator 2 view .LVU85
 337              	.LBE306:
  41:MyProj.cpp    ****     {
 338              		.loc 13 41 26 is_stmt 0 discriminator 2 view .LVU86
 339 0086 A642     		cmp	r6, r4
 340              	.LBB307:
 341              		.loc 13 57 19 discriminator 2 view .LVU87
 342 0088 83ED000A 		vstr.32	s0, [r3]
 343              	.LBE307:
  41:MyProj.cpp    ****     {
 344              		.loc 13 41 5 is_stmt 1 discriminator 2 view .LVU88
 345              	.LVL17:
  41:MyProj.cpp    ****     {
 346              		.loc 13 41 26 discriminator 2 view .LVU89
 347 008c CDD1     		bne	.L9
 348              	.LVL18:
 349              	.L6:
  41:MyProj.cpp    ****     {
 350              		.loc 13 41 26 is_stmt 0 discriminator 2 view .LVU90
 351              	.LBE300:
  58:MyProj.cpp    ****     }
  59:MyProj.cpp    **** }
 352              		.loc 13 59 1 view .LVU91
 353 008e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 354              	.LVL19:
 355              	.L18:
  35:MyProj.cpp    **** 
 356              		.loc 13 35 9 is_stmt 1 view .LVU92
  35:MyProj.cpp    **** 
 357              		.loc 13 35 39 is_stmt 0 view .LVU93
 358 0092 104B     		ldr	r3, .L19+28
  37:MyProj.cpp    ****         // another example of casting would be truncating a float to an integer by writing somethin
 359              		.loc 13 37 63 view .LVU94
 360 0094 104A     		ldr	r2, .L19+32
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 21


  35:MyProj.cpp    **** 
 361              		.loc 13 35 39 view .LVU95
 362 0096 1968     		ldr	r1, [r3]
  37:MyProj.cpp    ****         // another example of casting would be truncating a float to an integer by writing somethin
 363              		.loc 13 37 27 view .LVU96
 364 0098 0C48     		ldr	r0, .L19+20
  35:MyProj.cpp    **** 
 365              		.loc 13 35 39 view .LVU97
 366 009a 0131     		adds	r1, r1, #1
  35:MyProj.cpp    **** 
 367              		.loc 13 35 23 view .LVU98
 368 009c 1960     		str	r1, [r3]
  37:MyProj.cpp    ****         // another example of casting would be truncating a float to an integer by writing somethin
 369              		.loc 13 37 9 is_stmt 1 view .LVU99
  37:MyProj.cpp    ****         // another example of casting would be truncating a float to an integer by writing somethin
 370              		.loc 13 37 63 is_stmt 0 view .LVU100
 371 009e 82FB0132 		smull	r3, r2, r2, r1
 372 00a2 CB17     		asrs	r3, r1, #31
 373 00a4 C3EB6203 		rsb	r3, r3, r2, asr #1
 374 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 375 00ac C91A     		subs	r1, r1, r3
  37:MyProj.cpp    ****         // another example of casting would be truncating a float to an integer by writing somethin
 376              		.loc 13 37 27 view .LVU101
 377 00ae C9B2     		uxtb	r1, r1
 378 00b0 FFF7FEFF 		bl	tSVF_setFilterType
 379              	.LVL20:
 380 00b4 B6E7     		b	.L7
 381              	.L20:
 382 00b6 00BF     		.align	2
 383              	.L19:
 384 00b8 00000000 		.word	hw
 385 00bc 00000000 		.word	.LANCHOR2
 386 00c0 00000000 		.word	.LANCHOR3
 387 00c4 00803B45 		.word	1161527296
 388 00c8 00007042 		.word	1114636288
 389 00cc 00000000 		.word	.LANCHOR1
 390 00d0 9A99993E 		.word	1050253722
 391 00d4 00000000 		.word	.LANCHOR0
 392 00d8 67666666 		.word	1717986919
 393              		.cfi_endproc
 394              	.LFE2542:
 396              		.section	.text.startup.main,"ax",%progbits
 397              		.align	1
 398              		.p2align 2,,3
 399              		.global	main
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 404              	main:
 405              	.LFB2543:
  60:MyProj.cpp    **** 
  61:MyProj.cpp    **** int main(void)
  62:MyProj.cpp    **** {
 406              		.loc 13 62 1 is_stmt 1 view -0
 407              		.cfi_startproc
 408              		@ Volatile: function does not return.
 409              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 22


 410              		@ frame_needed = 0, uses_anonymous_args = 0
  63:MyProj.cpp    ****     hw.Init();
 411              		.loc 13 63 5 view .LVU103
  62:MyProj.cpp    ****     hw.Init();
 412              		.loc 13 62 1 is_stmt 0 view .LVU104
 413 0000 08B5     		push	{r3, lr}
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 3, -8
 416              		.cfi_offset 14, -4
 417              		.loc 13 63 12 view .LVU105
 418 0002 0021     		movs	r1, #0
 419 0004 1648     		ldr	r0, .L24
 420 0006 FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
 421              	.LVL21:
  64:MyProj.cpp    ****     hw.SetAudioBlockSize(4); // number of samples handled per callback
 422              		.loc 13 64 5 is_stmt 1 view .LVU106
 423              		.loc 13 64 25 is_stmt 0 view .LVU107
 424 000a 0421     		movs	r1, #4
 425 000c 1448     		ldr	r0, .L24
 426 000e FFF7FEFF 		bl	_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
 427              	.LVL22:
  65:MyProj.cpp    ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 428              		.loc 13 65 5 is_stmt 1 view .LVU108
 429              		.loc 13 65 26 is_stmt 0 view .LVU109
 430 0012 0321     		movs	r1, #3
 431 0014 1248     		ldr	r0, .L24
 432 0016 FFF7FEFF 		bl	_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 433              	.LVL23:
  66:MyProj.cpp    ****     Random::Init();
 434              		.loc 13 66 5 is_stmt 1 view .LVU110
 435              		.loc 13 66 17 is_stmt 0 view .LVU111
 436 001a FFF7FEFF 		bl	_ZN5daisy6Random4InitEv
 437              	.LVL24:
  67:MyProj.cpp    ****     hw.StartAdc();
 438              		.loc 13 67 5 is_stmt 1 view .LVU112
 439              		.loc 13 67 16 is_stmt 0 view .LVU113
 440 001e 1048     		ldr	r0, .L24
 441 0020 FFF7FEFF 		bl	_ZN5daisy8DaisyPod8StartAdcEv
 442              	.LVL25:
  68:MyProj.cpp    ****     hw.StartAudio(AudioCallback);
 443              		.loc 13 68 5 is_stmt 1 view .LVU114
 444              		.loc 13 68 18 is_stmt 0 view .LVU115
 445 0024 0F49     		ldr	r1, .L24+4
 446 0026 0E48     		ldr	r0, .L24
 447 0028 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
 448              	.LVL26:
  69:MyProj.cpp    ****     LEAF_init(&leaf, 48000, leafMemory, 65535, randomNumber);
 449              		.loc 13 69 5 is_stmt 1 view .LVU116
 450              		.loc 13 69 14 is_stmt 0 view .LVU117
 451 002c 4FF6FF72 		movw	r2, #65535
 452 0030 9FED0D0A 		vldr.32	s0, .L24+8
 453 0034 0D4B     		ldr	r3, .L24+12
 454 0036 0E49     		ldr	r1, .L24+16
 455 0038 0E48     		ldr	r0, .L24+20
 456 003a FFF7FEFF 		bl	LEAF_init
 457              	.LVL27:
  70:MyProj.cpp    ****     tPBSaw_init(&mySaw, &leaf);
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 23


 458              		.loc 13 70 5 is_stmt 1 view .LVU118
 459              		.loc 13 70 16 is_stmt 0 view .LVU119
 460 003e 0D49     		ldr	r1, .L24+20
 461 0040 0D48     		ldr	r0, .L24+24
 462 0042 FFF7FEFF 		bl	tPBSaw_init
 463              	.LVL28:
  71:MyProj.cpp    ****     tSVF_init(&myFilter, SVFTypeLowpass, 3000.0f, 0.6f, &leaf);
 464              		.loc 13 71 5 is_stmt 1 view .LVU120
 465              		.loc 13 71 14 is_stmt 0 view .LVU121
 466 0046 0B4A     		ldr	r2, .L24+20
 467 0048 DFED0C0A 		vldr.32	s1, .L24+28
 468 004c 0121     		movs	r1, #1
 469 004e 9FED0C0A 		vldr.32	s0, .L24+32
 470 0052 0C48     		ldr	r0, .L24+36
 471 0054 FFF7FEFF 		bl	tSVF_init
 472              	.LVL29:
 473              	.L22:
  72:MyProj.cpp    **** 
  73:MyProj.cpp    ****     while(1) {
 474              		.loc 13 73 5 is_stmt 1 discriminator 1 view .LVU122
  74:MyProj.cpp    **** 
  75:MyProj.cpp    ****         //the RGB leds on the pod need to be updated with the "update" function here to work
  76:MyProj.cpp    ****         hw.UpdateLeds();
 475              		.loc 13 76 9 discriminator 1 view .LVU123
 476              		.loc 13 76 22 is_stmt 0 discriminator 1 view .LVU124
 477 0058 0148     		ldr	r0, .L24
 478 005a FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
 479              	.LVL30:
  73:MyProj.cpp    **** 
 480              		.loc 13 73 5 is_stmt 1 discriminator 1 view .LVU125
 481 005e FBE7     		b	.L22
 482              	.L25:
 483              		.align	2
 484              	.L24:
 485 0060 00000000 		.word	hw
 486 0064 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 487 0068 00803B47 		.word	1195081728
 488 006c 00000000 		.word	_Z12randomNumberv
 489 0070 00000000 		.word	leafMemory
 490 0074 00000000 		.word	.LANCHOR4
 491 0078 00000000 		.word	.LANCHOR3
 492 007c 9A99193F 		.word	1058642330
 493 0080 00803B45 		.word	1161527296
 494 0084 00000000 		.word	.LANCHOR1
 495              		.cfi_endproc
 496              	.LFE2543:
 498              		.section	.text.startup._GLOBAL__sub_I_leaf,"ax",%progbits
 499              		.align	1
 500              		.p2align 2,,3
 501              		.syntax unified
 502              		.thumb
 503              		.thumb_func
 505              	_GLOBAL__sub_I_leaf:
 506              	.LFB2571:
  77:MyProj.cpp    ****     }
  78:MyProj.cpp    **** }
 507              		.loc 13 78 1 view -0
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 24


 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              	.LBB373:
 512              	.LBI373:
 513              		.loc 13 78 1 view .LVU127
 514              	.LVL31:
 515              	.LBB374:
 516              	.LBB375:
 517              	.LBI375:
  35:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
 518              		.loc 1 35 5 view .LVU128
 519              	.LBB376:
 520              	.LBB377:
 521              	.LBI377:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 522              		.loc 8 21 5 view .LVU129
 523              	.LBB378:
 524              	.LBB379:
 525              	.LBI379:
 526              		.file 14 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 25


  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 26


  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 27


 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 527              		.loc 14 166 5 view .LVU130
 528              	.LBB380:
 529              	.LBB381:
 530              		.loc 14 166 34 is_stmt 0 view .LVU131
 531 0000 1348     		ldr	r0, .L28
 532 0002 0022     		movs	r2, #0
 533              	.LBE381:
 534              	.LBE380:
 535              	.LBE379:
 536              	.LBE378:
 537              	.LBE377:
 538              	.LBB397:
 539              	.LBB398:
 540              	.LBB399:
 541              	.LBB400:
 542              	.LBB401:
 543              	.LBB402:
 544              	.LBB403:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 545              		.loc 2 37 20 view .LVU132
 546 0004 1349     		ldr	r1, .L28+4
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 547              		.loc 2 36 20 view .LVU133
 548 0006 00F51043 		add	r3, r0, #36864
  38:../../libDaisy//src/hid/midi.h ****         }
 549              		.loc 2 38 20 view .LVU134
 550 000a B1F804C0 		ldrh	ip, [r1, #4]
 551              	.LBE403:
 552              	.LBE402:
 553              	.LBE401:
 554              	.LBE400:
 555              	.LBE399:
 556              	.LBE398:
 557              	.LBE397:
 558              	.LBE376:
 559              	.LBE375:
 560              	.LBE374:
 561              	.LBE373:
 562              		.loc 13 78 1 view .LVU135
 563 000e 00B5     		push	{lr}
 564              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 28


 565              		.cfi_offset 14, -4
 566              	.LBB458:
 567              	.LBB456:
 568              	.LBB455:
 569              	.LBB454:
 570              	.LBB432:
 571              	.LBB429:
 572              	.LBB426:
 573              	.LBB413:
 574              	.LBB410:
 575              	.LBB407:
 576              	.LBB404:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 577              		.loc 2 37 20 view .LVU136
 578 0010 B1F800E0 		ldrh	lr, [r1]
 579              	.LBE404:
 580              	.LBE407:
 581              	.LBE410:
 582              	.LBE413:
 583              	.LBE426:
 584              	.LBE429:
 585              	.LBE432:
 586              	.LBB433:
 587              	.LBB395:
 588              	.LBB384:
 589              	.LBB383:
 590              	.LBB382:
 591              		.loc 14 166 34 view .LVU137
 592 0014 0260     		str	r2, [r0]
 593              	.LVL32:
 594              		.loc 14 166 34 view .LVU138
 595              	.LBE382:
 596              	.LBE383:
 597              	.LBE384:
 598              	.LBB385:
 599              	.LBI385:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 600              		.loc 12 95 5 is_stmt 1 view .LVU139
 601              	.LBE385:
 602              	.LBE395:
 603              	.LBE433:
 604              	.LBB434:
 605              	.LBB430:
 606              	.LBB427:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 607              		.loc 2 84 19 is_stmt 0 view .LVU140
 608 0016 1049     		ldr	r1, .L28+8
 609              	.LBE427:
 610              	.LBE430:
 611              	.LBE434:
 612              	.LBB435:
 613              	.LBB396:
 614              	.LBB388:
 615              	.LBB386:
 616              	.LBB387:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 617              		.loc 12 95 35 view .LVU141
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 29


 618 0018 4261     		str	r2, [r0, #20]
 619              	.LVL33:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 620              		.loc 12 95 35 view .LVU142
 621              	.LBE387:
 622              	.LBE386:
 623              	.LBE388:
 624              	.LBB389:
 625              	.LBI389:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 626              		.loc 11 92 5 is_stmt 1 view .LVU143
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 627              		.loc 11 92 5 is_stmt 0 view .LVU144
 628              	.LBE389:
 629              	.LBB390:
 630              	.LBI390:
 631              		.file 15 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 30


  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 632              		.loc 15 84 5 is_stmt 1 view .LVU145
 633              	.LBB391:
 634              	.LBB392:
 635              		.loc 15 84 33 is_stmt 0 view .LVU146
 636 001a 0262     		str	r2, [r0, #32]
 637              	.LVL34:
 638              		.loc 15 84 33 view .LVU147
 639              	.LBE392:
 640              	.LBE391:
 641              	.LBE390:
 642              	.LBB393:
 643              	.LBI393:
  40:../../libDaisy//src/hid/usb.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 31


 644              		.loc 10 40 5 is_stmt 1 view .LVU148
  40:../../libDaisy//src/hid/usb.h **** 
 645              		.loc 10 40 5 is_stmt 0 view .LVU149
 646              	.LBE393:
 647              	.LBB394:
 648              	.LBI394:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 649              		.loc 9 77 5 is_stmt 1 view .LVU150
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 650              		.loc 9 77 5 is_stmt 0 view .LVU151
 651              	.LBE394:
 652              	.LBE396:
 653              	.LBE435:
 654              	.LBB436:
 655              	.LBI436:
  20:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 656              		.loc 7 20 5 is_stmt 1 view .LVU152
 657              	.LBB437:
 658              	.LBB438:
 659              	.LBI438:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 660              		.loc 5 41 5 view .LVU153
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 661              		.loc 5 41 5 is_stmt 0 view .LVU154
 662              	.LBE438:
 663              	.LBE437:
 664              	.LBE436:
 665              	.LBB439:
 666              	.LBI439:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 667              		.loc 6 21 5 is_stmt 1 view .LVU155
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 668              		.loc 6 21 5 is_stmt 0 view .LVU156
 669              	.LBE439:
 670              	.LBB440:
 671              	.LBI440:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 672              		.loc 6 21 5 is_stmt 1 view .LVU157
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 673              		.loc 6 21 5 is_stmt 0 view .LVU158
 674              	.LBE440:
 675              	.LBB441:
 676              	.LBI441:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 677              		.loc 5 41 5 is_stmt 1 view .LVU159
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 678              		.loc 5 41 5 is_stmt 0 view .LVU160
 679              	.LBE441:
 680              	.LBB442:
 681              	.LBI442:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 682              		.loc 5 41 5 is_stmt 1 view .LVU161
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 683              		.loc 5 41 5 is_stmt 0 view .LVU162
 684              	.LBE442:
 685              	.LBB443:
 686              	.LBI443:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 32


  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 687              		.loc 3 17 5 is_stmt 1 view .LVU163
 688              	.LBB444:
 689              	.LBB445:
 690              	.LBI445:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 691              		.loc 4 24 5 view .LVU164
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 692              		.loc 4 24 5 is_stmt 0 view .LVU165
 693              	.LBE445:
 694              	.LBB446:
 695              	.LBI446:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 696              		.loc 4 24 5 is_stmt 1 view .LVU166
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 697              		.loc 4 24 5 is_stmt 0 view .LVU167
 698              	.LBE446:
 699              	.LBB447:
 700              	.LBI447:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 701              		.loc 4 24 5 is_stmt 1 view .LVU168
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 702              		.loc 4 24 5 is_stmt 0 view .LVU169
 703              	.LBE447:
 704              	.LBE444:
 705              	.LBE443:
 706              	.LBB448:
 707              	.LBI448:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 708              		.loc 3 17 5 is_stmt 1 view .LVU170
 709              	.LBB449:
 710              	.LBB450:
 711              	.LBI450:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 712              		.loc 4 24 5 view .LVU171
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 713              		.loc 4 24 5 is_stmt 0 view .LVU172
 714              	.LBE450:
 715              	.LBB451:
 716              	.LBI451:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 717              		.loc 4 24 5 is_stmt 1 view .LVU173
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 718              		.loc 4 24 5 is_stmt 0 view .LVU174
 719              	.LBE451:
 720              	.LBB452:
 721              	.LBI452:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 722              		.loc 4 24 5 is_stmt 1 view .LVU175
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 723              		.loc 4 24 5 is_stmt 0 view .LVU176
 724              	.LBE452:
 725              	.LBE449:
 726              	.LBE448:
 727              	.LBB453:
 728              	.LBI397:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 33


 729              		.loc 2 84 5 is_stmt 1 view .LVU177
 730              	.LBB431:
 731              	.LBB428:
 732              	.LBB414:
 733              	.LBI414:
 734              		.file 16 "../../libDaisy//src/per/uart.h"
   1:../../libDaisy//src/per/uart.h **** /* 
   2:../../libDaisy//src/per/uart.h **** TODO
   3:../../libDaisy//src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libDaisy//src/per/uart.h **** - Transmit function improvements.
   5:../../libDaisy//src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libDaisy//src/per/uart.h **** */
   7:../../libDaisy//src/per/uart.h **** 
   8:../../libDaisy//src/per/uart.h **** #pragma once
   9:../../libDaisy//src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libDaisy//src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libDaisy//src/per/uart.h **** #include "daisy_core.h"
  12:../../libDaisy//src/per/uart.h **** 
  13:../../libDaisy//src/per/uart.h **** 
  14:../../libDaisy//src/per/uart.h **** namespace daisy
  15:../../libDaisy//src/per/uart.h **** {
  16:../../libDaisy//src/per/uart.h **** /** @addtogroup serial
  17:../../libDaisy//src/per/uart.h ****     @{
  18:../../libDaisy//src/per/uart.h ****     */
  19:../../libDaisy//src/per/uart.h **** 
  20:../../libDaisy//src/per/uart.h **** /** 
  21:../../libDaisy//src/per/uart.h ****     Uart Peripheral
  22:../../libDaisy//src/per/uart.h ****     @author shensley
  23:../../libDaisy//src/per/uart.h ****     @date March 2020
  24:../../libDaisy//src/per/uart.h ****     */
  25:../../libDaisy//src/per/uart.h **** class UartHandler
  26:../../libDaisy//src/per/uart.h **** {
  27:../../libDaisy//src/per/uart.h ****   public:
  28:../../libDaisy//src/per/uart.h ****     struct Config
  29:../../libDaisy//src/per/uart.h ****     {
  30:../../libDaisy//src/per/uart.h ****         enum class Peripheral
  31:../../libDaisy//src/per/uart.h ****         {
  32:../../libDaisy//src/per/uart.h ****             USART_1,
  33:../../libDaisy//src/per/uart.h ****             USART_2,
  34:../../libDaisy//src/per/uart.h ****             USART_3,
  35:../../libDaisy//src/per/uart.h ****             UART_4,
  36:../../libDaisy//src/per/uart.h ****             UART_5,
  37:../../libDaisy//src/per/uart.h ****             USART_6,
  38:../../libDaisy//src/per/uart.h ****             UART_7,
  39:../../libDaisy//src/per/uart.h ****             UART_8,
  40:../../libDaisy//src/per/uart.h ****             LPUART_1,
  41:../../libDaisy//src/per/uart.h ****         };
  42:../../libDaisy//src/per/uart.h **** 
  43:../../libDaisy//src/per/uart.h ****         enum class StopBits
  44:../../libDaisy//src/per/uart.h ****         {
  45:../../libDaisy//src/per/uart.h ****             BITS_0_5,
  46:../../libDaisy//src/per/uart.h ****             BITS_1,
  47:../../libDaisy//src/per/uart.h ****             BITS_1_5,
  48:../../libDaisy//src/per/uart.h ****             BITS_2,
  49:../../libDaisy//src/per/uart.h ****         };
  50:../../libDaisy//src/per/uart.h **** 
  51:../../libDaisy//src/per/uart.h ****         enum class Parity
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 34


  52:../../libDaisy//src/per/uart.h ****         {
  53:../../libDaisy//src/per/uart.h ****             NONE,
  54:../../libDaisy//src/per/uart.h ****             EVEN,
  55:../../libDaisy//src/per/uart.h ****             ODD,
  56:../../libDaisy//src/per/uart.h ****         };
  57:../../libDaisy//src/per/uart.h **** 
  58:../../libDaisy//src/per/uart.h ****         enum class Mode
  59:../../libDaisy//src/per/uart.h ****         {
  60:../../libDaisy//src/per/uart.h ****             RX,
  61:../../libDaisy//src/per/uart.h ****             TX,
  62:../../libDaisy//src/per/uart.h ****             TX_RX,
  63:../../libDaisy//src/per/uart.h ****         };
  64:../../libDaisy//src/per/uart.h **** 
  65:../../libDaisy//src/per/uart.h ****         enum class WordLength
  66:../../libDaisy//src/per/uart.h ****         {
  67:../../libDaisy//src/per/uart.h ****             BITS_7,
  68:../../libDaisy//src/per/uart.h ****             BITS_8,
  69:../../libDaisy//src/per/uart.h ****             BITS_9,
  70:../../libDaisy//src/per/uart.h ****         };
  71:../../libDaisy//src/per/uart.h **** 
  72:../../libDaisy//src/per/uart.h ****         struct
  73:../../libDaisy//src/per/uart.h ****         {
  74:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libDaisy//src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libDaisy//src/per/uart.h **** 
  78:../../libDaisy//src/per/uart.h ****         Config()
  79:../../libDaisy//src/per/uart.h ****         {
  80:../../libDaisy//src/per/uart.h ****             // user must init periph, pin_config, and mode
  81:../../libDaisy//src/per/uart.h ****             stopbits   = StopBits::BITS_1;
  82:../../libDaisy//src/per/uart.h ****             parity     = Parity::NONE;
  83:../../libDaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
  84:../../libDaisy//src/per/uart.h ****             baudrate   = 4800;
  85:../../libDaisy//src/per/uart.h ****             // baudrate   = 31250;
  86:../../libDaisy//src/per/uart.h ****         }
  87:../../libDaisy//src/per/uart.h **** 
  88:../../libDaisy//src/per/uart.h ****         Peripheral periph;
  89:../../libDaisy//src/per/uart.h ****         StopBits   stopbits;
  90:../../libDaisy//src/per/uart.h ****         Parity     parity;
  91:../../libDaisy//src/per/uart.h ****         Mode       mode;
  92:../../libDaisy//src/per/uart.h ****         WordLength wordlength;
  93:../../libDaisy//src/per/uart.h ****         uint32_t   baudrate;
  94:../../libDaisy//src/per/uart.h ****     };
  95:../../libDaisy//src/per/uart.h **** 
  96:../../libDaisy//src/per/uart.h **** 
  97:../../libDaisy//src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 735              		.loc 16 97 5 view .LVU178
 736              	.LBB415:
 737              	.LBB416:
 738              		.loc 16 97 35 is_stmt 0 view .LVU179
 739 001c C0F87C21 		str	r2, [r0, #380]
 740              	.LVL35:
 741              		.loc 16 97 35 view .LVU180
 742              	.LBE416:
 743              	.LBE415:
 744              	.LBE414:
 745              	.LBB417:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 35


 746              	.LBI417:
 747              		.file 17 "../../libDaisy//src/util/ringbuffer.h"
   1:../../libDaisy//src/util/ringbuffer.h **** #pragma once
   2:../../libDaisy//src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libDaisy//src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libDaisy//src/util/ringbuffer.h **** 
   5:../../libDaisy//src/util/ringbuffer.h **** #include <algorithm>
   6:../../libDaisy//src/util/ringbuffer.h **** 
   7:../../libDaisy//src/util/ringbuffer.h **** namespace daisy
   8:../../libDaisy//src/util/ringbuffer.h **** {
   9:../../libDaisy//src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libDaisy//src/util/ringbuffer.h ****     @{
  11:../../libDaisy//src/util/ringbuffer.h **** */
  12:../../libDaisy//src/util/ringbuffer.h **** 
  13:../../libDaisy//src/util/ringbuffer.h **** /**
  14:../../libDaisy//src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libDaisy//src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libDaisy//src/util/ringbuffer.h **** */
  17:../../libDaisy//src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libDaisy//src/util/ringbuffer.h **** class RingBuffer
  19:../../libDaisy//src/util/ringbuffer.h **** {
  20:../../libDaisy//src/util/ringbuffer.h ****   public:
  21:../../libDaisy//src/util/ringbuffer.h ****     RingBuffer() {}
 748              		.loc 17 21 5 is_stmt 1 view .LVU181
 749              		.loc 17 21 5 is_stmt 0 view .LVU182
 750              	.LBE417:
 751              	.LBB418:
 752              	.LBI400:
  86:../../libDaisy//src/hid/midi.h **** 
  87:../../libDaisy//src/hid/midi.h ****     struct Config
 753              		.loc 2 87 12 is_stmt 1 view .LVU183
 754              	.LBB411:
 755              	.LBI401:
  34:../../libDaisy//src/hid/midi.h ****         {
 756              		.loc 2 34 9 view .LVU184
 757              	.LBB408:
 758              	.LBB405:
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 759              		.loc 2 36 13 view .LVU185
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 760              		.loc 2 36 20 is_stmt 0 view .LVU186
 761 0020 C3F82422 		str	r2, [r3, #548]
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 762              		.loc 2 37 13 is_stmt 1 view .LVU187
  38:../../libDaisy//src/hid/midi.h ****         }
 763              		.loc 2 38 20 is_stmt 0 view .LVU188
 764 0024 A3F82AC2 		strh	ip, [r3, #554]	@ movhi
 765              	.LBE405:
 766              	.LBE408:
 767              	.LBE411:
 768              	.LBE418:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 769              		.loc 2 84 19 view .LVU189
 770 0028 4FF0070C 		mov	ip, #7
 771              	.LBB419:
 772              	.LBB420:
 773              	.LBB421:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 36


 774              	.LBB422:
 775              		.loc 16 97 35 view .LVU190
 776 002c C3F82C22 		str	r2, [r3, #556]
 777              	.LBE422:
 778              	.LBE421:
 779              	.LBE420:
 780              	.LBE419:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 781              		.loc 2 84 19 view .LVU191
 782 0030 4FF60F02 		movw	r2, #63503
 783 0034 C3F83012 		str	r1, [r3, #560]
 784 0038 A3F83422 		strh	r2, [r3, #564]	@ movhi
 785 003c 83F836C2 		strb	ip, [r3, #566]
 786              	.LBB424:
 787              	.LBB412:
 788              	.LBB409:
 789              	.LBB406:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 790              		.loc 2 37 20 view .LVU192
 791 0040 A3F828E2 		strh	lr, [r3, #552]	@ movhi
  38:../../libDaisy//src/hid/midi.h ****         }
 792              		.loc 2 38 13 is_stmt 1 view .LVU193
 793              	.LVL36:
  38:../../libDaisy//src/hid/midi.h ****         }
 794              		.loc 2 38 13 is_stmt 0 view .LVU194
 795              	.LBE406:
 796              	.LBE409:
 797              	.LBE412:
 798              	.LBE424:
 799              	.LBB425:
 800              	.LBI419:
  25:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
 801              		.loc 2 25 5 is_stmt 1 view .LVU195
 802              	.LBB423:
 803              	.LBI420:
 804              		.loc 16 97 5 view .LVU196
 805              		.loc 16 97 5 is_stmt 0 view .LVU197
 806              	.LBE423:
 807              	.LBE425:
 808              	.LBE428:
 809              	.LBE431:
 810              	.LBE453:
 811              	.LBE454:
 812              	.LBE455:
   6:MyProj.cpp    **** 
 813              		.loc 13 6 10 view .LVU198
 814 0044 054A     		ldr	r2, .L28+12
 815 0046 0649     		ldr	r1, .L28+16
 816              	.LBE456:
 817              	.LBE458:
 818              		.loc 13 78 1 view .LVU199
 819 0048 5DF804EB 		ldr	lr, [sp], #4
 820              		.cfi_restore 14
 821              		.cfi_def_cfa_offset 0
 822              	.LBB459:
 823              	.LBB457:
   6:MyProj.cpp    **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 37


 824              		.loc 13 6 10 view .LVU200
 825 004c FFF7FEBF 		b	__aeabi_atexit
 826              	.LVL37:
 827              	.L29:
 828              		.align	2
 829              	.L28:
 830 0050 00000000 		.word	hw
 831 0054 00000000 		.word	.LANCHOR5
 832 0058 80707FF0 		.word	-260083584
 833 005c 00000000 		.word	__dso_handle
 834 0060 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 835              	.LBE457:
 836              	.LBE459:
 837              		.cfi_endproc
 838              	.LFE2571:
 840              		.section	.init_array,"aw",%init_array
 841              		.align	2
 842 0000 00000000 		.word	_GLOBAL__sub_I_leaf(target1)
 843              		.global	currentFilter
 844              		.global	myFreq
 845              		.global	myFilter
 846              		.global	mySaw
 847              		.global	hw
 848              		.global	leafMemory
 849              		.global	leaf
 850              		.section	.rodata
 851              		.align	2
 852              		.set	.LANCHOR5,. + 0
 853              	.LC0:
 854 0000 01       		.byte	1
 855 0001 07       		.byte	7
 856 0002 0000     		.space	2
 857              	.LC1:
 858 0004 01       		.byte	1
 859 0005 06       		.byte	6
 860              		.section	.bss.hw,"aw",%nobits
 861              		.align	2
 864              	hw:
 865 0000 00000000 		.space	37432
 865      00000000 
 865      00000000 
 865      00000000 
 865      00000000 
 866              		.section	.bss.leaf,"aw",%nobits
 867              		.align	2
 868              		.set	.LANCHOR4,. + 0
 871              	leaf:
 872 0000 00000000 		.space	80
 872      00000000 
 872      00000000 
 872      00000000 
 872      00000000 
 873              		.section	.bss.leafMemory,"aw",%nobits
 874              		.align	2
 877              	leafMemory:
 878 0000 00000000 		.space	65535
 878      00000000 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 38


 878      00000000 
 878      00000000 
 878      00000000 
 879              		.section	.bss.myFilter,"aw",%nobits
 880              		.align	2
 881              		.set	.LANCHOR1,. + 0
 884              	myFilter:
 885 0000 00000000 		.space	4
 886              		.section	.bss.mySaw,"aw",%nobits
 887              		.align	2
 888              		.set	.LANCHOR3,. + 0
 891              	mySaw:
 892 0000 00000000 		.space	4
 893              		.section	.data.currentFilter,"aw"
 894              		.align	2
 895              		.set	.LANCHOR0,. + 0
 898              	currentFilter:
 899 0000 01000000 		.word	1
 900              		.section	.data.myFreq,"aw"
 901              		.align	2
 902              		.set	.LANCHOR2,. + 0
 905              	myFreq:
 906 0000 00005C43 		.word	1130102784
 907              		.text
 908              	.Letext0:
 909              		.file 18 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 910              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 911              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 912              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 913              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 914              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 915              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 916              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 917              		.file 26 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 918              		.file 27 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 919              		.file 28 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 920              		.file 29 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 921              		.file 30 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 922              		.file 31 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 923              		.file 32 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 924              		.file 33 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 925              		.file 34 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 926              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 927              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 928              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 929              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 930              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 931              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 932              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 933              		.file 42 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 934              		.file 43 "../../libDaisy//src/daisy_core.h"
 935              		.file 44 "../../libDaisy//src/per/tim.h"
 936              		.file 45 "../../libDaisy//src/per/sai.h"
 937              		.file 46 "../../libDaisy//src/hid/MidiEvent.h"
 938              		.file 47 "../../libDaisy//src/per/rng.h"
 939              		.file 48 "../../libDaisy//src/util/wav_format.h"
 940              		.file 49 "../../libDaisy//src/util/color.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 39


 941              		.file 50 "../../libDaisy//src/dev/max11300.h"
 942              		.file 51 "../../libDaisy//src/per/gpio.h"
 943              		.file 52 "../../libDaisy//src/dev/sdram.h"
 944              		.file 53 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 945              		.file 54 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 946              		.file 55 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 947              		.file 56 "../../../LEAF/leaf/./Inc/leaf-mempool.h"
 948              		.file 57 "../../../LEAF/leaf/./Inc/leaf-global.h"
 949              		.file 58 "../../../LEAF/leaf/./Inc/leaf-filters.h"
 950              		.file 59 "../../../LEAF/leaf/./Inc/leaf-oscillators.h"
 951              		.file 60 "../../../LEAF/leaf/leaf.h"
 952              		.file 61 "<built-in>"
 953              		.file 62 "../../libDaisy//src/dev/sr_595.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MyProj.cpp
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:19     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD2Ev
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD1Ev
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:154    .text._Z12randomNumberv:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:161    .text._Z12randomNumberv:0000000000000000 _Z12randomNumberv
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:178    .text._Z12randomNumberv:000000000000000c $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:183    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:190    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:384    .text._Z13AudioCallbackPKPKfPPfj:00000000000000b8 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:864    .bss.hw:0000000000000000 hw
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:397    .text.startup.main:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:404    .text.startup.main:0000000000000000 main
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:485    .text.startup.main:0000000000000060 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:877    .bss.leafMemory:0000000000000000 leafMemory
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:499    .text.startup._GLOBAL__sub_I_leaf:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:505    .text.startup._GLOBAL__sub_I_leaf:0000000000000000 _GLOBAL__sub_I_leaf
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:830    .text.startup._GLOBAL__sub_I_leaf:0000000000000050 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:841    .init_array:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:898    .data.currentFilter:0000000000000000 currentFilter
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:905    .data.myFreq:0000000000000000 myFreq
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:884    .bss.myFilter:0000000000000000 myFilter
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:891    .bss.mySaw:0000000000000000 mySaw
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:871    .bss.leaf:0000000000000000 leaf
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:851    .rodata:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:861    .bss.hw:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:867    .bss.leaf:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:874    .bss.leafMemory:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:880    .bss.myFilter:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:887    .bss.mySaw:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:894    .data.currentFilter:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s:901    .data.myFreq:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy8DaisyPodD5Ev

UNDEFINED SYMBOLS
_ZN5daisy6Random8GetFloatEff
_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
tPBSaw_setFreq
tSVF_setFreq
tSVF_setQ
tPBSaw_tick
tSVF_tick
tSVF_setFilterType
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy6Random4InitEv
_ZN5daisy8DaisyPod8StartAdcEv
_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
LEAF_init
tPBSaw_init
tSVF_init
_ZN5daisy8DaisyPod10UpdateLedsEv
__aeabi_atexit
__dso_handle
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccPxR7bX.s 			page 41


