ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"MyProj.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  19              		.align	1
  20              		.p2align 2,,3
  21              		.weak	_ZN5daisy8DaisyPodD2Ev
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN5daisy8DaisyPodD2Ev:
  27              	.LVL0:
  28              	.LFB2538:
  29              		.file 1 "../../libDaisy//src/daisy_pod.h"
   1:../../libDaisy//src/daisy_pod.h **** #pragma once
   2:../../libDaisy//src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../../libDaisy//src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../../libDaisy//src/daisy_pod.h **** 
   5:../../libDaisy//src/daisy_pod.h **** #include "daisy_seed.h"
   6:../../libDaisy//src/daisy_pod.h **** 
   7:../../libDaisy//src/daisy_pod.h **** namespace daisy
   8:../../libDaisy//src/daisy_pod.h **** {
   9:../../libDaisy//src/daisy_pod.h **** /**
  10:../../libDaisy//src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libDaisy//src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libDaisy//src/daisy_pod.h ****     @author Stephen Hensley
  13:../../libDaisy//src/daisy_pod.h ****     @date November 2019
  14:../../libDaisy//src/daisy_pod.h ****     @ingroup boards
  15:../../libDaisy//src/daisy_pod.h **** */
  16:../../libDaisy//src/daisy_pod.h **** class DaisyPod
  17:../../libDaisy//src/daisy_pod.h **** {
  18:../../libDaisy//src/daisy_pod.h ****   public:
  19:../../libDaisy//src/daisy_pod.h ****     /** Switches */
  20:../../libDaisy//src/daisy_pod.h ****     enum Sw
  21:../../libDaisy//src/daisy_pod.h ****     {
  22:../../libDaisy//src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../../libDaisy//src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../../libDaisy//src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../../libDaisy//src/daisy_pod.h ****     };
  26:../../libDaisy//src/daisy_pod.h **** 
  27:../../libDaisy//src/daisy_pod.h ****     /** Knobs */
  28:../../libDaisy//src/daisy_pod.h ****     enum Knob
  29:../../libDaisy//src/daisy_pod.h ****     {
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 2


  30:../../libDaisy//src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../../libDaisy//src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../../libDaisy//src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../../libDaisy//src/daisy_pod.h ****     };
  34:../../libDaisy//src/daisy_pod.h **** 
  35:../../libDaisy//src/daisy_pod.h ****     DaisyPod() {}
  36:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
  30              		.loc 1 36 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB279:
  36              	.LBI279:
  37              		.file 2 "../../libDaisy//src/hid/midi.h"
   1:../../libDaisy//src/hid/midi.h **** #pragma once
   2:../../libDaisy//src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libDaisy//src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libDaisy//src/hid/midi.h **** 
   5:../../libDaisy//src/hid/midi.h **** // TODO: make this adjustable
   6:../../libDaisy//src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libDaisy//src/hid/midi.h **** 
   8:../../libDaisy//src/hid/midi.h **** #include <stdint.h>
   9:../../libDaisy//src/hid/midi.h **** #include <stdlib.h>
  10:../../libDaisy//src/hid/midi.h **** #include "per/uart.h"
  11:../../libDaisy//src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libDaisy//src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libDaisy//src/hid/midi.h **** #include "hid/usb_midi.h"
  14:../../libDaisy//src/hid/midi.h **** #include "sys/system.h"
  15:../../libDaisy//src/hid/midi.h **** 
  16:../../libDaisy//src/hid/midi.h **** namespace daisy
  17:../../libDaisy//src/hid/midi.h **** {
  18:../../libDaisy//src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART 
  19:../../libDaisy//src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../../libDaisy//src/hid/midi.h ****  *  @ingroup midi
  21:../../libDaisy//src/hid/midi.h **** */
  22:../../libDaisy//src/hid/midi.h **** class MidiUartTransport
  23:../../libDaisy//src/hid/midi.h **** {
  24:../../libDaisy//src/hid/midi.h ****   public:
  25:../../libDaisy//src/hid/midi.h ****     MidiUartTransport() {}
  26:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
  27:../../libDaisy//src/hid/midi.h **** 
  28:../../libDaisy//src/hid/midi.h ****     struct Config
  29:../../libDaisy//src/hid/midi.h ****     {
  30:../../libDaisy//src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  31:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    rx;
  32:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    tx;
  33:../../libDaisy//src/hid/midi.h **** 
  34:../../libDaisy//src/hid/midi.h ****         Config()
  35:../../libDaisy//src/hid/midi.h ****         {
  36:../../libDaisy//src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  37:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  38:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  39:../../libDaisy//src/hid/midi.h ****         }
  40:../../libDaisy//src/hid/midi.h ****     };
  41:../../libDaisy//src/hid/midi.h **** 
  42:../../libDaisy//src/hid/midi.h ****     inline void Init(Config config)
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 3


  43:../../libDaisy//src/hid/midi.h ****     {
  44:../../libDaisy//src/hid/midi.h ****         UartHandler::Config uart_config;
  45:../../libDaisy//src/hid/midi.h **** 
  46:../../libDaisy//src/hid/midi.h ****         //defaults
  47:../../libDaisy//src/hid/midi.h ****         uart_config.baudrate   = 31250;
  48:../../libDaisy//src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  49:../../libDaisy//src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  50:../../libDaisy//src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  51:../../libDaisy//src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  52:../../libDaisy//src/hid/midi.h **** 
  53:../../libDaisy//src/hid/midi.h ****         //user settings
  54:../../libDaisy//src/hid/midi.h ****         uart_config.periph        = config.periph;
  55:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  56:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  57:../../libDaisy//src/hid/midi.h **** 
  58:../../libDaisy//src/hid/midi.h ****         uart_.Init(uart_config);
  59:../../libDaisy//src/hid/midi.h ****     }
  60:../../libDaisy//src/hid/midi.h **** 
  61:../../libDaisy//src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  62:../../libDaisy//src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  63:../../libDaisy//src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  64:../../libDaisy//src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  65:../../libDaisy//src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  66:../../libDaisy//src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  67:../../libDaisy//src/hid/midi.h **** 
  68:../../libDaisy//src/hid/midi.h ****   private:
  69:../../libDaisy//src/hid/midi.h ****     UartHandler uart_;
  70:../../libDaisy//src/hid/midi.h **** };
  71:../../libDaisy//src/hid/midi.h **** 
  72:../../libDaisy//src/hid/midi.h **** /** 
  73:../../libDaisy//src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  74:../../libDaisy//src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  75:../../libDaisy//src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  76:../../libDaisy//src/hid/midi.h ****     @author shensley
  77:../../libDaisy//src/hid/midi.h ****     @date March 2020
  78:../../libDaisy//src/hid/midi.h ****     @ingroup midi
  79:../../libDaisy//src/hid/midi.h **** */
  80:../../libDaisy//src/hid/midi.h **** template <typename Transport>
  81:../../libDaisy//src/hid/midi.h **** class MidiHandler
  82:../../libDaisy//src/hid/midi.h **** {
  83:../../libDaisy//src/hid/midi.h ****   public:
  84:../../libDaisy//src/hid/midi.h ****     MidiHandler() {}
  85:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
  38              		.loc 2 85 5 view .LVU1
  39              	.LBB280:
  40              	.LBI280:
  26:../../libDaisy//src/hid/midi.h **** 
  41              		.loc 2 26 5 view .LVU2
  26:../../libDaisy//src/hid/midi.h **** 
  42              		.loc 2 26 5 is_stmt 0 view .LVU3
  43              	.LBE280:
  44              	.LBE279:
  45              	.LBB281:
  46              	.LBI281:
  47              		.file 3 "../../libDaisy//src/hid/rgb_led.h"
   1:../../libDaisy//src/hid/rgb_led.h **** #pragma once
   2:../../libDaisy//src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 4


   3:../../libDaisy//src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../../libDaisy//src/hid/rgb_led.h **** #include "hid/led.h"
   5:../../libDaisy//src/hid/rgb_led.h **** #include "util/color.h"
   6:../../libDaisy//src/hid/rgb_led.h **** 
   7:../../libDaisy//src/hid/rgb_led.h **** namespace daisy
   8:../../libDaisy//src/hid/rgb_led.h **** {
   9:../../libDaisy//src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../../libDaisy//src/hid/rgb_led.h ****     @{
  11:../../libDaisy//src/hid/rgb_led.h **** */
  12:../../libDaisy//src/hid/rgb_led.h **** 
  13:../../libDaisy//src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../../libDaisy//src/hid/rgb_led.h **** class RgbLed
  15:../../libDaisy//src/hid/rgb_led.h **** {
  16:../../libDaisy//src/hid/rgb_led.h ****   public:
  17:../../libDaisy//src/hid/rgb_led.h ****     RgbLed() {}
  18:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
  48              		.loc 3 18 5 is_stmt 1 view .LVU4
  49              	.LBB282:
  50              	.LBI282:
  51              		.file 4 "../../libDaisy//src/hid/led.h"
   1:../../libDaisy//src/hid/led.h **** 
   2:../../libDaisy//src/hid/led.h **** #pragma once
   3:../../libDaisy//src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libDaisy//src/hid/led.h **** #define DSY_LED_H
   5:../../libDaisy//src/hid/led.h **** #include "daisy_core.h"
   6:../../libDaisy//src/hid/led.h **** #include "per/gpio.h"
   7:../../libDaisy//src/hid/led.h **** 
   8:../../libDaisy//src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libDaisy//src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libDaisy//src/hid/led.h **** */
  11:../../libDaisy//src/hid/led.h **** 
  12:../../libDaisy//src/hid/led.h **** namespace daisy
  13:../../libDaisy//src/hid/led.h **** {
  14:../../libDaisy//src/hid/led.h **** /**
  15:../../libDaisy//src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libDaisy//src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libDaisy//src/hid/led.h ****     @author shensley
  18:../../libDaisy//src/hid/led.h ****     @date March 2020
  19:../../libDaisy//src/hid/led.h ****     @ingroup feedback
  20:../../libDaisy//src/hid/led.h **** */
  21:../../libDaisy//src/hid/led.h **** class Led
  22:../../libDaisy//src/hid/led.h **** {
  23:../../libDaisy//src/hid/led.h ****   public:
  24:../../libDaisy//src/hid/led.h ****     Led() {}
  25:../../libDaisy//src/hid/led.h ****     ~Led() {}
  52              		.loc 4 25 5 view .LVU5
  53              		.loc 4 25 5 is_stmt 0 view .LVU6
  54              	.LBE282:
  55              	.LBB283:
  56              	.LBI283:
  57              		.loc 4 25 5 is_stmt 1 view .LVU7
  58              		.loc 4 25 5 is_stmt 0 view .LVU8
  59              	.LBE283:
  60              	.LBB284:
  61              	.LBI284:
  62              		.loc 4 25 5 is_stmt 1 view .LVU9
  63              		.loc 4 25 5 is_stmt 0 view .LVU10
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 5


  64              	.LBE284:
  65              	.LBE281:
  66              	.LBB285:
  67              	.LBI285:
  68              		.loc 3 18 5 is_stmt 1 view .LVU11
  69              	.LBB286:
  70              	.LBI286:
  71              		.loc 4 25 5 view .LVU12
  72              		.loc 4 25 5 is_stmt 0 view .LVU13
  73              	.LBE286:
  74              	.LBB287:
  75              	.LBI287:
  76              		.loc 4 25 5 is_stmt 1 view .LVU14
  77              		.loc 4 25 5 is_stmt 0 view .LVU15
  78              	.LBE287:
  79              	.LBB288:
  80              	.LBI288:
  81              		.loc 4 25 5 is_stmt 1 view .LVU16
  82              		.loc 4 25 5 is_stmt 0 view .LVU17
  83              	.LBE288:
  84              	.LBE285:
  85              	.LBB289:
  86              	.LBI289:
  87              		.file 5 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 6


  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  88              		.loc 5 42 5 is_stmt 1 view .LVU18
  89              		.loc 5 42 5 is_stmt 0 view .LVU19
  90              	.LBE289:
  91              	.LBB290:
  92              	.LBI290:
  93              		.loc 5 42 5 is_stmt 1 view .LVU20
  94              		.loc 5 42 5 is_stmt 0 view .LVU21
  95              	.LBE290:
  96              	.LBB291:
  97              	.LBI291:
  98              		.file 6 "../../libDaisy//src/hid/ctrl.h"
   1:../../libDaisy//src/hid/ctrl.h **** #pragma once
   2:../../libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/ctrl.h **** 
   6:../../libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libDaisy//src/hid/ctrl.h **** namespace daisy
   8:../../libDaisy//src/hid/ctrl.h **** {
   9:../../libDaisy//src/hid/ctrl.h **** /**
  10:../../libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../../libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../../libDaisy//src/hid/ctrl.h **** */
  17:../../libDaisy//src/hid/ctrl.h **** class AnalogControl
  18:../../libDaisy//src/hid/ctrl.h **** {
  19:../../libDaisy//src/hid/ctrl.h ****   public:
  20:../../libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../../libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../../libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
  99              		.loc 6 23 5 is_stmt 1 view .LVU22
 100              		.loc 6 23 5 is_stmt 0 view .LVU23
 101              	.LBE291:
 102              	.LBB292:
 103              	.LBI292:
 104              		.loc 6 23 5 is_stmt 1 view .LVU24
 105              		.loc 6 23 5 is_stmt 0 view .LVU25
 106              	.LBE292:
 107              	.LBB293:
 108              	.LBI293:
 109              		.file 7 "../../libDaisy//src/hid/encoder.h"
   1:../../libDaisy//src/hid/encoder.h **** #pragma once
   2:../../libDaisy//src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libDaisy//src/hid/encoder.h **** #define DSY_ENCODER_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 7


   4:../../libDaisy//src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libDaisy//src/hid/encoder.h **** 
   8:../../libDaisy//src/hid/encoder.h **** namespace daisy
   9:../../libDaisy//src/hid/encoder.h **** {
  10:../../libDaisy//src/hid/encoder.h **** /** 
  11:../../libDaisy//src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libDaisy//src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libDaisy//src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/encoder.h ****     @date December 2019
  15:../../libDaisy//src/hid/encoder.h ****     @ingroup controls
  16:../../libDaisy//src/hid/encoder.h **** */
  17:../../libDaisy//src/hid/encoder.h **** class Encoder
  18:../../libDaisy//src/hid/encoder.h **** {
  19:../../libDaisy//src/hid/encoder.h ****   public:
  20:../../libDaisy//src/hid/encoder.h ****     Encoder() {}
  21:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 110              		.loc 7 21 5 is_stmt 1 view .LVU26
 111              	.LBB294:
 112              	.LBI294:
 113              		.loc 5 42 5 view .LVU27
 114              		.loc 5 42 5 is_stmt 0 view .LVU28
 115              	.LBE294:
 116              	.LBE293:
 117              	.LBB295:
 118              	.LBI295:
 119              		.file 8 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 120              		.loc 8 22 5 is_stmt 1 view .LVU29
 121              	.LBB296:
 122              	.LBI296:
 123              		.file 9 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 8


   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 9


  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
 124              		.loc 9 78 5 view .LVU30
 125              		.loc 9 78 5 is_stmt 0 view .LVU31
 126              	.LBE296:
 127              	.LBB297:
 128              	.LBI297:
 129              		.file 10 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 10


  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 130              		.loc 10 42 5 is_stmt 1 view .LVU32
 131              		.loc 10 42 5 is_stmt 0 view .LVU33
 132              	.LBE297:
 133              	.LBB298:
 134              	.LBI298:
 135              		.file 11 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 11


  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 136              		.loc 11 93 5 is_stmt 1 view .LVU34
 137              		.loc 11 93 5 is_stmt 0 view .LVU35
 138              	.LBE298:
 139              	.LBB299:
 140              	.LBI299:
 141              		.file 12 "../../libDaisy//src/hid/audio.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 12


   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 13


  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 142              		.loc 12 96 5 is_stmt 1 view .LVU36
 143              		.loc 12 96 5 is_stmt 0 view .LVU37
 144              	.LBE299:
 145              	.LBE295:
 146              		.loc 1 36 18 view .LVU38
 147 0000 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE2538:
 151              		.weak	_ZN5daisy8DaisyPodD1Ev
 152              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 153 0002 00BF     		.section	.text._Z12randomNumberv,"ax",%progbits
 154              		.align	1
 155              		.p2align 2,,3
 156              		.global	_Z12randomNumberv
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	_Z12randomNumberv:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 14


 162              	.LFB2541:
 163              		.file 13 "MyProj.cpp"
   1:MyProj.cpp    **** #include "daisy_pod.h"
   2:MyProj.cpp    **** #include "leaf.h"
   3:MyProj.cpp    **** using namespace daisy;
   4:MyProj.cpp    **** LEAF leaf;
   5:MyProj.cpp    **** char leafMemory[65535];
   6:MyProj.cpp    **** DaisyPod hw;
   7:MyProj.cpp    **** tCycle mySine;
   8:MyProj.cpp    **** 
   9:MyProj.cpp    **** //let's define a global variable to store the frequency so we can easily mess with it in our progra
  10:MyProj.cpp    **** float myFreq = 220.0f;
  11:MyProj.cpp    **** int sampleCounter = 0; // this will store the current count of how many samples have been processed
  12:MyProj.cpp    **** int sampleCounterMaxValue = 48000; //we'll set this to 48000 for now, meaning the counter resets ev
  13:MyProj.cpp    **** float myTempo; // we'll use this as a variable to store what tempo we are trying to click the metro
  14:MyProj.cpp    **** 
  15:MyProj.cpp    **** //DOING SOMETHING WITH A METRONOME
  16:MyProj.cpp    **** //turn knob1 to change the speed of a metronome, which is making the frequency of a sine wave pick 
  17:MyProj.cpp    **** //the computer is thinking!!! bloooppbeeeeppbeeeoeeepeoepepeoe
  18:MyProj.cpp    **** 
  19:MyProj.cpp    **** 
  20:MyProj.cpp    **** float randomNumber()
  21:MyProj.cpp    **** {
 164              		.loc 13 21 1 is_stmt 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
  22:MyProj.cpp    ****     //call the daisy function to get a random number between 0 and 1 (what leaf wants)
  23:MyProj.cpp    ****     return Random::GetFloat(0.0f, 1.0f);
 169              		.loc 13 23 5 view .LVU40
 170              		.loc 13 23 28 is_stmt 0 view .LVU41
 171 0000 F7EE000A 		vmov.f32	s1, #1.0e+0
 172 0004 9FED010A 		vldr.32	s0, .L4
 173 0008 FFF7FEBF 		b	_ZN5daisy6Random8GetFloatEff
 174              	.LVL1:
 175              	.L5:
 176              		.align	2
 177              	.L4:
 178 000c 00000000 		.word	0
 179              		.cfi_endproc
 180              	.LFE2541:
 182              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 183              		.align	1
 184              		.p2align 2,,3
 185              		.global	_Z13AudioCallbackPKPKfPPfj
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	_Z13AudioCallbackPKPKfPPfj:
 191              	.LVL2:
 192              	.LFB2542:
  24:MyProj.cpp    **** }
  25:MyProj.cpp    **** 
  26:MyProj.cpp    **** 
  27:MyProj.cpp    **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  28:MyProj.cpp    **** {
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 15


 193              		.loc 13 28 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
  29:MyProj.cpp    ****     hw.ProcessAllControls();
 197              		.loc 13 29 5 view .LVU43
 198              	.LBB300:
 199              	.LBI300:
  37:../../libDaisy//src/daisy_pod.h **** 
  38:../../libDaisy//src/daisy_pod.h ****     /** Init related stuff. */
  39:../../libDaisy//src/daisy_pod.h ****     void Init(bool boost = false);
  40:../../libDaisy//src/daisy_pod.h **** 
  41:../../libDaisy//src/daisy_pod.h ****     /** Wait for a bit
  42:../../libDaisy//src/daisy_pod.h ****     \param del Time to wait in ms.
  43:../../libDaisy//src/daisy_pod.h ****     */
  44:../../libDaisy//src/daisy_pod.h ****     void DelayMs(size_t del);
  45:../../libDaisy//src/daisy_pod.h **** 
  46:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  47:../../libDaisy//src/daisy_pod.h ****     \param cb Interleaved callback function
  48:../../libDaisy//src/daisy_pod.h ****     */
  49:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  50:../../libDaisy//src/daisy_pod.h **** 
  51:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  52:../../libDaisy//src/daisy_pod.h ****     \param cb multichannel callback function
  53:../../libDaisy//src/daisy_pod.h ****     */
  54:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  55:../../libDaisy//src/daisy_pod.h **** 
  56:../../libDaisy//src/daisy_pod.h ****     /**
  57:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  58:../../libDaisy//src/daisy_pod.h ****        \param cb New interleaved callback function.
  59:../../libDaisy//src/daisy_pod.h ****     */
  60:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  61:../../libDaisy//src/daisy_pod.h **** 
  62:../../libDaisy//src/daisy_pod.h ****     /**
  63:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  64:../../libDaisy//src/daisy_pod.h ****        \param cb New multichannel callback function.
  65:../../libDaisy//src/daisy_pod.h ****     */
  66:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  67:../../libDaisy//src/daisy_pod.h **** 
  68:../../libDaisy//src/daisy_pod.h ****     /** Stops the audio if it is running. */
  69:../../libDaisy//src/daisy_pod.h ****     void StopAudio();
  70:../../libDaisy//src/daisy_pod.h **** 
  71:../../libDaisy//src/daisy_pod.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  72:../../libDaisy//src/daisy_pod.h ****      ** Audio must be stopped for this to work.
  73:../../libDaisy//src/daisy_pod.h ****      */
  74:../../libDaisy//src/daisy_pod.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  75:../../libDaisy//src/daisy_pod.h **** 
  76:../../libDaisy//src/daisy_pod.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  77:../../libDaisy//src/daisy_pod.h ****      */
  78:../../libDaisy//src/daisy_pod.h ****     float AudioSampleRate();
  79:../../libDaisy//src/daisy_pod.h **** 
  80:../../libDaisy//src/daisy_pod.h ****     /** Sets the number of samples processed per channel by the audio callback.
  81:../../libDaisy//src/daisy_pod.h ****      */
  82:../../libDaisy//src/daisy_pod.h ****     void SetAudioBlockSize(size_t blocksize);
  83:../../libDaisy//src/daisy_pod.h **** 
  84:../../libDaisy//src/daisy_pod.h ****     /** Returns the number of samples per channel in a block of audio. */
  85:../../libDaisy//src/daisy_pod.h ****     size_t AudioBlockSize();
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 16


  86:../../libDaisy//src/daisy_pod.h **** 
  87:../../libDaisy//src/daisy_pod.h ****     /** Returns the rate in Hz that the Audio callback is called */
  88:../../libDaisy//src/daisy_pod.h ****     float AudioCallbackRate();
  89:../../libDaisy//src/daisy_pod.h **** 
  90:../../libDaisy//src/daisy_pod.h ****     /**
  91:../../libDaisy//src/daisy_pod.h ****        Start analog to digital conversion.
  92:../../libDaisy//src/daisy_pod.h ****      */
  93:../../libDaisy//src/daisy_pod.h ****     void StartAdc();
  94:../../libDaisy//src/daisy_pod.h **** 
  95:../../libDaisy//src/daisy_pod.h ****     /** Stops Transfering data from the ADC */
  96:../../libDaisy//src/daisy_pod.h ****     void StopAdc();
  97:../../libDaisy//src/daisy_pod.h **** 
  98:../../libDaisy//src/daisy_pod.h ****     /** Call at same rate as analog reads for smooth reading.*/
  99:../../libDaisy//src/daisy_pod.h ****     void ProcessAnalogControls();
 100:../../libDaisy//src/daisy_pod.h **** 
 101:../../libDaisy//src/daisy_pod.h ****     /** Process Analog and Digital Controls */
 102:../../libDaisy//src/daisy_pod.h ****     inline void ProcessAllControls()
 200              		.loc 1 102 17 view .LVU44
 201              	.LBB301:
 103:../../libDaisy//src/daisy_pod.h ****     {
 104:../../libDaisy//src/daisy_pod.h ****         ProcessAnalogControls();
 202              		.loc 1 104 9 view .LVU45
 203              	.LBE301:
 204              	.LBE300:
  28:MyProj.cpp    ****     hw.ProcessAllControls();
 205              		.loc 13 28 1 is_stmt 0 view .LVU46
 206 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 207              		.cfi_def_cfa_offset 24
 208              		.cfi_offset 4, -24
 209              		.cfi_offset 5, -20
 210              		.cfi_offset 6, -16
 211              		.cfi_offset 7, -12
 212              		.cfi_offset 8, -8
 213              		.cfi_offset 14, -4
 214              	.LBB304:
 215              	.LBB302:
 216              		.loc 1 104 30 view .LVU47
 217 0004 5148     		ldr	r0, .L16
 218              	.LVL3:
 219              		.loc 1 104 30 view .LVU48
 220              	.LBE302:
 221              	.LBE304:
  28:MyProj.cpp    ****     hw.ProcessAllControls();
 222              		.loc 13 28 1 view .LVU49
 223 0006 0F46     		mov	r7, r1
 224 0008 1546     		mov	r5, r2
  30:MyProj.cpp    **** 
  31:MyProj.cpp    ****     //lets use knob1 for the tempo control
  32:MyProj.cpp    ****     myTempo = hw.GetKnobValue(hw.KNOB_1) * 190.0f + 10.0f; // will result in a range from 10 to 200
  33:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
  34:MyProj.cpp    ****     //we are counting samples, and there are 48000 of those per second (because our sample rate is 
  35:MyProj.cpp    ****     //so if we want a certain number of beats per minute, we need to figure out how many beats per 
  36:MyProj.cpp    ****     float tempBeatsPerSecond = myTempo / 60.0f; //there are 60 seconds per minute. I'm keep this fl
  37:MyProj.cpp    ****     //now let's figure out how many samples will happen in one beat of the metronome at the tempo w
  38:MyProj.cpp    ****     float tempSamplesPerBeat =  48000.0f / tempBeatsPerSecond;
  39:MyProj.cpp    ****     //that will do it - think it through in your head, if tempo is 60, then tempBeatsPerSecond is 1
  40:MyProj.cpp    **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 17


  41:MyProj.cpp    ****     //now we can just use that tempSamplesPerBeat as the maxSampleCounterValue
  42:MyProj.cpp    ****     // sampleCounterMaxValue is an int, it will truncate tempSamplesPerBeat (for instance 48000.5 t
  43:MyProj.cpp    ****     //let's divide the number of samples per beat by 4 to get 1/16th-notes instead of 1/4-notes.
  44:MyProj.cpp    ****     sampleCounterMaxValue = tempSamplesPerBeat / 4.0f;
 225              		.loc 13 44 27 view .LVU50
 226 000a 514E     		ldr	r6, .L16+4
  28:MyProj.cpp    ****     hw.ProcessAllControls();
 227              		.loc 13 28 1 view .LVU51
 228 000c 2DED028B 		vpush.64	{d8}
 229              		.cfi_def_cfa_offset 32
 230              		.cfi_offset 80, -32
 231              		.cfi_offset 81, -28
 232              	.LBB305:
 233              	.LBB303:
 234              		.loc 1 104 30 view .LVU52
 235 0010 FFF7FEFF 		bl	_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
 236              	.LVL4:
 105:../../libDaisy//src/daisy_pod.h ****         ProcessDigitalControls();
 237              		.loc 1 105 9 is_stmt 1 view .LVU53
 238              		.loc 1 105 31 is_stmt 0 view .LVU54
 239 0014 4D48     		ldr	r0, .L16
 240 0016 FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
 241              	.LVL5:
 242              		.loc 1 105 31 view .LVU55
 243              	.LBE303:
 244              	.LBE305:
  32:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
 245              		.loc 13 32 5 is_stmt 1 view .LVU56
  32:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
 246              		.loc 13 32 30 is_stmt 0 view .LVU57
 247 001a 0021     		movs	r1, #0
 248 001c 4B48     		ldr	r0, .L16
 249 001e FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 250              	.LVL6:
  32:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
 251              		.loc 13 32 51 view .LVU58
 252 0022 B2EE047A 		vmov.f32	s14, #1.0e+1
 253 0026 9FED4B6A 		vldr.32	s12, .L16+8
 254              		.loc 13 44 48 view .LVU59
 255 002a F5EE006A 		vmov.f32	s13, #2.5e-1
  36:MyProj.cpp    ****     //now let's figure out how many samples will happen in one beat of the metronome at the tempo w
 256              		.loc 13 36 11 view .LVU60
 257 002e DFED4A7A 		vldr.32	s15, .L16+12
  32:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
 258              		.loc 13 32 51 view .LVU61
 259 0032 A0EE067A 		vfma.f32	s14, s0, s12
  38:MyProj.cpp    ****     //that will do it - think it through in your head, if tempo is 60, then tempBeatsPerSecond is 1
 260              		.loc 13 38 11 view .LVU62
 261 0036 DFED495A 		vldr.32	s11, .L16+16
  32:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
 262              		.loc 13 32 13 view .LVU63
 263 003a 494B     		ldr	r3, .L16+20
  36:MyProj.cpp    ****     //now let's figure out how many samples will happen in one beat of the metronome at the tempo w
 264              		.loc 13 36 11 view .LVU64
 265 003c 87EE276A 		vdiv.f32	s12, s14, s15
  32:MyProj.cpp    ****     //now let's figure out what the "reset value" of the counter needs to be to make the metronome 
 266              		.loc 13 32 13 view .LVU65
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 18


 267 0040 83ED007A 		vstr.32	s14, [r3]
  36:MyProj.cpp    ****     //now let's figure out how many samples will happen in one beat of the metronome at the tempo w
 268              		.loc 13 36 5 is_stmt 1 view .LVU66
 269              	.LVL7:
  38:MyProj.cpp    ****     //that will do it - think it through in your head, if tempo is 60, then tempBeatsPerSecond is 1
 270              		.loc 13 38 5 view .LVU67
 271              		.loc 13 44 5 view .LVU68
  38:MyProj.cpp    ****     //that will do it - think it through in your head, if tempo is 60, then tempBeatsPerSecond is 1
 272              		.loc 13 38 11 is_stmt 0 view .LVU69
 273 0044 C5EE867A 		vdiv.f32	s15, s11, s12
 274              		.loc 13 44 48 view .LVU70
 275 0048 67EEA67A 		vmul.f32	s15, s15, s13
 276              		.loc 13 44 27 view .LVU71
 277 004c FDEEE77A 		vcvt.s32.f32	s15, s15
 278 0050 C6ED007A 		vstr.32	s15, [r6]	@ int
  45:MyProj.cpp    **** 
  46:MyProj.cpp    **** 
  47:MyProj.cpp    ****     //now here's the per sample stuff
  48:MyProj.cpp    ****     for (size_t i = 0; i < size; i++)
 279              		.loc 13 48 5 is_stmt 1 view .LVU72
 280              	.LVL8:
 281              	.LBB306:
 282              		.loc 13 48 26 view .LVU73
 283 0054 002D     		cmp	r5, #0
 284 0056 75D0     		beq	.L6
 285              		.loc 13 48 17 is_stmt 0 view .LVU74
 286 0058 0024     		movs	r4, #0
 287 005a DFF82481 		ldr	r8, .L16+52
 288 005e 1AE0     		b	.L10
 289              	.LVL9:
 290              	.L8:
 291              	.LBB307:
  49:MyProj.cpp    ****     {
  50:MyProj.cpp    ****         //since now we're going to have an if statement control structure in here, let's define "my
  51:MyProj.cpp    ****         float mySample = 0.0f;
  52:MyProj.cpp    **** 
  53:MyProj.cpp    ****         //when sampleCounter is zero, it's a metronome pulse. At the bottom of the for loop we are 
  54:MyProj.cpp    ****         if (sampleCounter == 0)
  55:MyProj.cpp    ****         {
  56:MyProj.cpp    ****             //metronome pulse happened! do something!!!!!!!
  57:MyProj.cpp    ****             //let's set the frequency to some random value between 100 and 2000
  58:MyProj.cpp    ****             //we can use the randomNumber function that's defined above this AudioCallback function
  59:MyProj.cpp    ****             myFreq = (randomNumber() * 1900.0f) + 100.0f;
  60:MyProj.cpp    ****             tCycle_setFreq(&mySine, myFreq);
  61:MyProj.cpp    ****                     //we can also set the LED stuff here if we want
  62:MyProj.cpp    ****         hw.led1.Set(randomNumber(), randomNumber(), randomNumber()); //set led1 to a random color
  63:MyProj.cpp    ****         hw.led2.Set(randomNumber(), randomNumber(), randomNumber()); //set led2 to a random color
  64:MyProj.cpp    ****             //now the frequency will only change when the sample counter equals 0, which only happe
  65:MyProj.cpp    ****         }
  66:MyProj.cpp    ****         
  67:MyProj.cpp    ****         //note that since we defined mySample above, we don't put "float" here
  68:MyProj.cpp    ****         mySample = tCycle_tick(&mySine);
 292              		.loc 13 68 9 is_stmt 1 view .LVU75
 293              		.loc 13 68 31 is_stmt 0 view .LVU76
 294 0060 4048     		ldr	r0, .L16+24
 295 0062 FFF7FEFF 		bl	tCycle_tick
 296              	.LVL10:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 19


  69:MyProj.cpp    **** 
  70:MyProj.cpp    **** 
  71:MyProj.cpp    **** 
  72:MyProj.cpp    ****         //increment the sampleCounter variable so we can keep track of how many samples have passed
  73:MyProj.cpp    ****         //it will count 48000 samples per second because that's our "sample rate"
  74:MyProj.cpp    ****         sampleCounter = sampleCounter + 1;
  75:MyProj.cpp    ****         //we'll reset it to zero when it reaches sampleCounterMaxValue, then we can check for a val
  76:MyProj.cpp    ****         //when our metronome has ticked (if we set sampleCounterMaxValue so that it will reach it a
  77:MyProj.cpp    ****         if (sampleCounter >= sampleCounterMaxValue)
  78:MyProj.cpp    ****         {
  79:MyProj.cpp    ****             sampleCounter = 0;
 297              		.loc 13 79 13 is_stmt 1 view .LVU77
  80:MyProj.cpp    ****         }
  81:MyProj.cpp    **** 
  82:MyProj.cpp    ****         //now set the audio outputs (left is [0] and right is [1] to be whatever value has been com
  83:MyProj.cpp    ****         out[0][i] = mySample;
 298              		.loc 13 83 9 view .LVU78
  74:MyProj.cpp    ****         //we'll reset it to zero when it reaches sampleCounterMaxValue, then we can check for a val
 299              		.loc 13 74 39 is_stmt 0 view .LVU79
 300 0066 D8F80030 		ldr	r3, [r8]
  77:MyProj.cpp    ****         {
 301              		.loc 13 77 9 view .LVU80
 302 006a 3268     		ldr	r2, [r6]
 303              	.LVL11:
  74:MyProj.cpp    ****         //we'll reset it to zero when it reaches sampleCounterMaxValue, then we can check for a val
 304              		.loc 13 74 9 is_stmt 1 view .LVU81
  79:MyProj.cpp    ****         }
 305              		.loc 13 79 27 is_stmt 0 view .LVU82
 306 006c 0021     		movs	r1, #0
  74:MyProj.cpp    ****         //we'll reset it to zero when it reaches sampleCounterMaxValue, then we can check for a val
 307              		.loc 13 74 39 view .LVU83
 308 006e 0133     		adds	r3, r3, #1
  74:MyProj.cpp    ****         //we'll reset it to zero when it reaches sampleCounterMaxValue, then we can check for a val
 309              		.loc 13 74 23 view .LVU84
 310 0070 C8F80030 		str	r3, [r8]
  77:MyProj.cpp    ****         {
 311              		.loc 13 77 9 is_stmt 1 view .LVU85
 312 0074 9342     		cmp	r3, r2
  84:MyProj.cpp    ****         out[1][i] = mySample;
 313              		.loc 13 84 19 is_stmt 0 view .LVU86
 314 0076 D7E90003 		ldrd	r0, r3, [r7]
  79:MyProj.cpp    ****         }
 315              		.loc 13 79 27 view .LVU87
 316 007a A8BF     		it	ge
 317 007c C8F80010 		strge	r1, [r8]
  83:MyProj.cpp    ****         out[1][i] = mySample;
 318              		.loc 13 83 19 view .LVU88
 319 0080 00EB8400 		add	r0, r0, r4, lsl #2
 320              		.loc 13 84 19 view .LVU89
 321 0084 03EB8403 		add	r3, r3, r4, lsl #2
 322              	.LBE307:
  48:MyProj.cpp    ****     {
 323              		.loc 13 48 5 view .LVU90
 324 0088 0134     		adds	r4, r4, #1
 325              	.LVL12:
 326              	.LBB338:
  83:MyProj.cpp    ****         out[1][i] = mySample;
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 20


 327              		.loc 13 83 19 view .LVU91
 328 008a 80ED000A 		vstr.32	s0, [r0]
 329              		.loc 13 84 9 is_stmt 1 view .LVU92
 330              	.LBE338:
  48:MyProj.cpp    ****     {
 331              		.loc 13 48 26 is_stmt 0 view .LVU93
 332 008e A542     		cmp	r5, r4
 333              	.LBB339:
 334              		.loc 13 84 19 view .LVU94
 335 0090 83ED000A 		vstr.32	s0, [r3]
 336              	.LBE339:
  48:MyProj.cpp    ****     {
 337              		.loc 13 48 5 is_stmt 1 view .LVU95
 338              	.LVL13:
  48:MyProj.cpp    ****     {
 339              		.loc 13 48 26 view .LVU96
 340 0094 56D0     		beq	.L6
 341              	.LVL14:
 342              	.L10:
 343              	.LBB340:
  51:MyProj.cpp    **** 
 344              		.loc 13 51 9 view .LVU97
  54:MyProj.cpp    ****         {
 345              		.loc 13 54 9 view .LVU98
 346 0096 D8F80030 		ldr	r3, [r8]
 347 009a 002B     		cmp	r3, #0
 348 009c E0D1     		bne	.L8
  59:MyProj.cpp    ****             tCycle_setFreq(&mySine, myFreq);
 349              		.loc 13 59 13 view .LVU99
 350              	.LBB308:
 351              	.LBI308:
  20:MyProj.cpp    **** {
 352              		.loc 13 20 7 view .LVU100
 353              	.LBB309:
  23:MyProj.cpp    **** }
 354              		.loc 13 23 5 view .LVU101
  23:MyProj.cpp    **** }
 355              		.loc 13 23 28 is_stmt 0 view .LVU102
 356 009e F7EE000A 		vmov.f32	s1, #1.0e+0
 357 00a2 9FED310A 		vldr.32	s0, .L16+28
 358 00a6 FFF7FEFF 		bl	_ZN5daisy6Random8GetFloatEff
 359              	.LVL15:
 360              	.LBE309:
 361              	.LBE308:
  59:MyProj.cpp    ****             tCycle_setFreq(&mySine, myFreq);
 362              		.loc 13 59 49 view .LVU103
 363 00aa 9FED307A 		vldr.32	s14, .L16+32
 364 00ae DFED307A 		vldr.32	s15, .L16+36
  59:MyProj.cpp    ****             tCycle_setFreq(&mySine, myFreq);
 365              		.loc 13 59 20 view .LVU104
 366 00b2 304B     		ldr	r3, .L16+40
  59:MyProj.cpp    ****             tCycle_setFreq(&mySine, myFreq);
 367              		.loc 13 59 49 view .LVU105
 368 00b4 E0EE077A 		vfma.f32	s15, s0, s14
  60:MyProj.cpp    ****                     //we can also set the LED stuff here if we want
 369              		.loc 13 60 27 view .LVU106
 370 00b8 2A48     		ldr	r0, .L16+24
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 21


 371 00ba B0EE670A 		vmov.f32	s0, s15
  59:MyProj.cpp    ****             tCycle_setFreq(&mySine, myFreq);
 372              		.loc 13 59 20 view .LVU107
 373 00be C3ED007A 		vstr.32	s15, [r3]
  60:MyProj.cpp    ****                     //we can also set the LED stuff here if we want
 374              		.loc 13 60 13 is_stmt 1 view .LVU108
  60:MyProj.cpp    ****                     //we can also set the LED stuff here if we want
 375              		.loc 13 60 27 is_stmt 0 view .LVU109
 376 00c2 FFF7FEFF 		bl	tCycle_setFreq
 377              	.LVL16:
  62:MyProj.cpp    ****         hw.led2.Set(randomNumber(), randomNumber(), randomNumber()); //set led2 to a random color
 378              		.loc 13 62 9 is_stmt 1 view .LVU110
 379              	.LBB310:
 380              	.LBI310:
  20:MyProj.cpp    **** {
 381              		.loc 13 20 7 view .LVU111
 382              	.LBB311:
  23:MyProj.cpp    **** }
 383              		.loc 13 23 5 view .LVU112
  23:MyProj.cpp    **** }
 384              		.loc 13 23 28 is_stmt 0 view .LVU113
 385 00c6 F7EE000A 		vmov.f32	s1, #1.0e+0
 386 00ca 9FED270A 		vldr.32	s0, .L16+28
 387 00ce FFF7FEFF 		bl	_ZN5daisy6Random8GetFloatEff
 388              	.LVL17:
 389              	.LBE311:
 390              	.LBE310:
 391              	.LBB313:
 392              	.LBB314:
 393 00d2 F7EE000A 		vmov.f32	s1, #1.0e+0
 394              	.LBE314:
 395              	.LBE313:
 396              	.LBB317:
 397              	.LBB312:
 398 00d6 B0EE408A 		vmov.f32	s16, s0
 399              	.LBE312:
 400              	.LBE317:
 401              	.LBB318:
 402              	.LBB315:
 403 00da 9FED230A 		vldr.32	s0, .L16+28
 404              	.LBE315:
 405              	.LBI313:
  20:MyProj.cpp    **** {
 406              		.loc 13 20 7 is_stmt 1 view .LVU114
 407              	.LBB316:
  23:MyProj.cpp    **** }
 408              		.loc 13 23 5 view .LVU115
  23:MyProj.cpp    **** }
 409              		.loc 13 23 28 is_stmt 0 view .LVU116
 410 00de FFF7FEFF 		bl	_ZN5daisy6Random8GetFloatEff
 411              	.LVL18:
 412 00e2 F0EE408A 		vmov.f32	s17, s0
 413              	.LBE316:
 414              	.LBE318:
 415              	.LBB319:
 416              	.LBB320:
 417 00e6 F7EE000A 		vmov.f32	s1, #1.0e+0
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 22


 418 00ea 9FED1F0A 		vldr.32	s0, .L16+28
 419              	.LBE320:
 420              	.LBI319:
  20:MyProj.cpp    **** {
 421              		.loc 13 20 7 is_stmt 1 view .LVU117
 422              	.LBB321:
  23:MyProj.cpp    **** }
 423              		.loc 13 23 5 view .LVU118
  23:MyProj.cpp    **** }
 424              		.loc 13 23 28 is_stmt 0 view .LVU119
 425 00ee FFF7FEFF 		bl	_ZN5daisy6Random8GetFloatEff
 426              	.LVL19:
 427              	.LBE321:
 428              	.LBE319:
  62:MyProj.cpp    ****         hw.led2.Set(randomNumber(), randomNumber(), randomNumber()); //set led2 to a random color
 429              		.loc 13 62 20 view .LVU120
 430 00f2 2148     		ldr	r0, .L16+44
 431              	.LBB323:
 432              	.LBB322:
  23:MyProj.cpp    **** }
 433              		.loc 13 23 28 view .LVU121
 434 00f4 B0EE401A 		vmov.f32	s2, s0
 435              	.LBE322:
 436              	.LBE323:
  62:MyProj.cpp    ****         hw.led2.Set(randomNumber(), randomNumber(), randomNumber()); //set led2 to a random color
 437              		.loc 13 62 20 view .LVU122
 438 00f8 F0EE680A 		vmov.f32	s1, s17
 439 00fc B0EE480A 		vmov.f32	s0, s16
 440 0100 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 441              	.LVL20:
  63:MyProj.cpp    ****             //now the frequency will only change when the sample counter equals 0, which only happe
 442              		.loc 13 63 9 is_stmt 1 view .LVU123
 443              	.LBB324:
 444              	.LBI324:
  20:MyProj.cpp    **** {
 445              		.loc 13 20 7 view .LVU124
 446              	.LBB325:
  23:MyProj.cpp    **** }
 447              		.loc 13 23 5 view .LVU125
  23:MyProj.cpp    **** }
 448              		.loc 13 23 28 is_stmt 0 view .LVU126
 449 0104 F7EE000A 		vmov.f32	s1, #1.0e+0
 450 0108 9FED170A 		vldr.32	s0, .L16+28
 451 010c FFF7FEFF 		bl	_ZN5daisy6Random8GetFloatEff
 452              	.LVL21:
 453              	.LBE325:
 454              	.LBE324:
 455              	.LBB327:
 456              	.LBB328:
 457 0110 F7EE000A 		vmov.f32	s1, #1.0e+0
 458              	.LBE328:
 459              	.LBE327:
 460              	.LBB331:
 461              	.LBB326:
 462 0114 B0EE408A 		vmov.f32	s16, s0
 463              	.LBE326:
 464              	.LBE331:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 23


 465              	.LBB332:
 466              	.LBB329:
 467 0118 9FED130A 		vldr.32	s0, .L16+28
 468              	.LBE329:
 469              	.LBI327:
  20:MyProj.cpp    **** {
 470              		.loc 13 20 7 is_stmt 1 view .LVU127
 471              	.LBB330:
  23:MyProj.cpp    **** }
 472              		.loc 13 23 5 view .LVU128
  23:MyProj.cpp    **** }
 473              		.loc 13 23 28 is_stmt 0 view .LVU129
 474 011c FFF7FEFF 		bl	_ZN5daisy6Random8GetFloatEff
 475              	.LVL22:
 476 0120 F0EE408A 		vmov.f32	s17, s0
 477              	.LBE330:
 478              	.LBE332:
 479              	.LBB333:
 480              	.LBB334:
 481 0124 F7EE000A 		vmov.f32	s1, #1.0e+0
 482 0128 9FED0F0A 		vldr.32	s0, .L16+28
 483              	.LBE334:
 484              	.LBI333:
  20:MyProj.cpp    **** {
 485              		.loc 13 20 7 is_stmt 1 view .LVU130
 486              	.LBB335:
  23:MyProj.cpp    **** }
 487              		.loc 13 23 5 view .LVU131
  23:MyProj.cpp    **** }
 488              		.loc 13 23 28 is_stmt 0 view .LVU132
 489 012c FFF7FEFF 		bl	_ZN5daisy6Random8GetFloatEff
 490              	.LVL23:
 491              	.LBE335:
 492              	.LBE333:
  63:MyProj.cpp    ****             //now the frequency will only change when the sample counter equals 0, which only happe
 493              		.loc 13 63 20 view .LVU133
 494 0130 1248     		ldr	r0, .L16+48
 495              	.LBB337:
 496              	.LBB336:
  23:MyProj.cpp    **** }
 497              		.loc 13 23 28 view .LVU134
 498 0132 B0EE401A 		vmov.f32	s2, s0
 499              	.LBE336:
 500              	.LBE337:
  63:MyProj.cpp    ****             //now the frequency will only change when the sample counter equals 0, which only happe
 501              		.loc 13 63 20 view .LVU135
 502 0136 F0EE680A 		vmov.f32	s1, s17
 503 013a B0EE480A 		vmov.f32	s0, s16
 504 013e FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 505              	.LVL24:
 506 0142 8DE7     		b	.L8
 507              	.LVL25:
 508              	.L6:
  63:MyProj.cpp    ****             //now the frequency will only change when the sample counter equals 0, which only happe
 509              		.loc 13 63 20 view .LVU136
 510              	.LBE340:
 511              	.LBE306:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 24


  85:MyProj.cpp    ****     }
  86:MyProj.cpp    **** }
 512              		.loc 13 86 1 view .LVU137
 513 0144 BDEC028B 		vldm	sp!, {d8}
 514              		.cfi_restore 80
 515              		.cfi_restore 81
 516              		.cfi_def_cfa_offset 24
 517 0148 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 518              	.LVL26:
 519              	.L17:
 520              		.loc 13 86 1 view .LVU138
 521              		.align	2
 522              	.L16:
 523 014c 00000000 		.word	hw
 524 0150 00000000 		.word	.LANCHOR1
 525 0154 00003E43 		.word	1128136704
 526 0158 00007042 		.word	1114636288
 527 015c 00803B47 		.word	1195081728
 528 0160 00000000 		.word	.LANCHOR0
 529 0164 00000000 		.word	.LANCHOR4
 530 0168 00000000 		.word	0
 531 016c 0080ED44 		.word	1156415488
 532 0170 0000C842 		.word	1120403456
 533 0174 00000000 		.word	.LANCHOR3
 534 0178 D4000000 		.word	hw+212
 535 017c 28010000 		.word	hw+296
 536 0180 00000000 		.word	.LANCHOR2
 537              		.cfi_endproc
 538              	.LFE2542:
 540              		.section	.text.startup.main,"ax",%progbits
 541              		.align	1
 542              		.p2align 2,,3
 543              		.global	main
 544              		.syntax unified
 545              		.thumb
 546              		.thumb_func
 548              	main:
 549              	.LFB2543:
  87:MyProj.cpp    **** 
  88:MyProj.cpp    **** int main(void)
  89:MyProj.cpp    **** {
 550              		.loc 13 89 1 is_stmt 1 view -0
 551              		.cfi_startproc
 552              		@ Volatile: function does not return.
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
  90:MyProj.cpp    ****     hw.Init();
 555              		.loc 13 90 5 view .LVU140
  89:MyProj.cpp    ****     hw.Init();
 556              		.loc 13 89 1 is_stmt 0 view .LVU141
 557 0000 08B5     		push	{r3, lr}
 558              		.cfi_def_cfa_offset 8
 559              		.cfi_offset 3, -8
 560              		.cfi_offset 14, -4
 561              		.loc 13 90 12 view .LVU142
 562 0002 0021     		movs	r1, #0
 563 0004 1248     		ldr	r0, .L21
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 25


 564 0006 FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
 565              	.LVL27:
  91:MyProj.cpp    ****     hw.SetAudioBlockSize(4); // number of samples handled per callback
 566              		.loc 13 91 5 is_stmt 1 view .LVU143
 567              		.loc 13 91 25 is_stmt 0 view .LVU144
 568 000a 0421     		movs	r1, #4
 569 000c 1048     		ldr	r0, .L21
 570 000e FFF7FEFF 		bl	_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
 571              	.LVL28:
  92:MyProj.cpp    ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 572              		.loc 13 92 5 is_stmt 1 view .LVU145
 573              		.loc 13 92 26 is_stmt 0 view .LVU146
 574 0012 0321     		movs	r1, #3
 575 0014 0E48     		ldr	r0, .L21
 576 0016 FFF7FEFF 		bl	_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 577              	.LVL29:
  93:MyProj.cpp    ****     Random::Init();
 578              		.loc 13 93 5 is_stmt 1 view .LVU147
 579              		.loc 13 93 17 is_stmt 0 view .LVU148
 580 001a FFF7FEFF 		bl	_ZN5daisy6Random4InitEv
 581              	.LVL30:
  94:MyProj.cpp    ****     hw.StartAdc();
 582              		.loc 13 94 5 is_stmt 1 view .LVU149
 583              		.loc 13 94 16 is_stmt 0 view .LVU150
 584 001e 0C48     		ldr	r0, .L21
 585 0020 FFF7FEFF 		bl	_ZN5daisy8DaisyPod8StartAdcEv
 586              	.LVL31:
  95:MyProj.cpp    ****     hw.StartAudio(AudioCallback);
 587              		.loc 13 95 5 is_stmt 1 view .LVU151
 588              		.loc 13 95 18 is_stmt 0 view .LVU152
 589 0024 0B49     		ldr	r1, .L21+4
 590 0026 0A48     		ldr	r0, .L21
 591 0028 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
 592              	.LVL32:
  96:MyProj.cpp    ****     LEAF_init(&leaf, 48000, leafMemory, 65535, randomNumber);
 593              		.loc 13 96 5 is_stmt 1 view .LVU153
 594              		.loc 13 96 14 is_stmt 0 view .LVU154
 595 002c 0A49     		ldr	r1, .L21+8
 596 002e 0B48     		ldr	r0, .L21+12
 597 0030 4FF6FF72 		movw	r2, #65535
 598 0034 0A4B     		ldr	r3, .L21+16
 599 0036 9FED0B0A 		vldr.32	s0, .L21+20
 600 003a FFF7FEFF 		bl	LEAF_init
 601              	.LVL33:
  97:MyProj.cpp    ****     tCycle_init(&mySine, &leaf);
 602              		.loc 13 97 5 is_stmt 1 view .LVU155
 603              		.loc 13 97 16 is_stmt 0 view .LVU156
 604 003e 0749     		ldr	r1, .L21+12
 605 0040 0948     		ldr	r0, .L21+24
 606 0042 FFF7FEFF 		bl	tCycle_init
 607              	.LVL34:
 608              	.L19:
  98:MyProj.cpp    ****    
  99:MyProj.cpp    ****     //blink that light! this endless while loop will be interrupted by the audio callback when the 
 100:MyProj.cpp    ****     while(1) {
 609              		.loc 13 100 5 is_stmt 1 discriminator 1 view .LVU157
 101:MyProj.cpp    ****         //you need to call this here to use the RGB LEDs on the pod.
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 26


 102:MyProj.cpp    ****         hw.UpdateLeds();
 610              		.loc 13 102 9 discriminator 1 view .LVU158
 611              		.loc 13 102 22 is_stmt 0 discriminator 1 view .LVU159
 612 0046 0248     		ldr	r0, .L21
 613 0048 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
 614              	.LVL35:
 100:MyProj.cpp    ****         //you need to call this here to use the RGB LEDs on the pod.
 615              		.loc 13 100 5 is_stmt 1 discriminator 1 view .LVU160
 616 004c FBE7     		b	.L19
 617              	.L22:
 618 004e 00BF     		.align	2
 619              	.L21:
 620 0050 00000000 		.word	hw
 621 0054 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 622 0058 00000000 		.word	leafMemory
 623 005c 00000000 		.word	.LANCHOR5
 624 0060 00000000 		.word	_Z12randomNumberv
 625 0064 00803B47 		.word	1195081728
 626 0068 00000000 		.word	.LANCHOR4
 627              		.cfi_endproc
 628              	.LFE2543:
 630              		.section	.text.startup._GLOBAL__sub_I_leaf,"ax",%progbits
 631              		.align	1
 632              		.p2align 2,,3
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 637              	_GLOBAL__sub_I_leaf:
 638              	.LFB2571:
 103:MyProj.cpp    ****     }
 104:MyProj.cpp    **** }
 639              		.loc 13 104 1 view -0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              	.LBB406:
 644              	.LBI406:
 645              		.loc 13 104 1 view .LVU162
 646              	.LVL36:
 647              	.LBB407:
 648              	.LBB408:
 649              	.LBI408:
  35:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
 650              		.loc 1 35 5 view .LVU163
 651              	.LBB409:
 652              	.LBB410:
 653              	.LBI410:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 654              		.loc 8 21 5 view .LVU164
 655              	.LBB411:
 656              	.LBB412:
 657              	.LBI412:
 658              		.file 14 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 27


   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 28


  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 29


 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 659              		.loc 14 166 5 view .LVU165
 660              	.LBB413:
 661              	.LBB414:
 662              		.loc 14 166 34 is_stmt 0 view .LVU166
 663 0000 1348     		ldr	r0, .L25
 664 0002 0022     		movs	r2, #0
 665              	.LBE414:
 666              	.LBE413:
 667              	.LBE412:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 30


 668              	.LBE411:
 669              	.LBE410:
 670              	.LBB430:
 671              	.LBB431:
 672              	.LBB432:
 673              	.LBB433:
 674              	.LBB434:
 675              	.LBB435:
 676              	.LBB436:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 677              		.loc 2 37 20 view .LVU167
 678 0004 1349     		ldr	r1, .L25+4
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 679              		.loc 2 36 20 view .LVU168
 680 0006 00F51043 		add	r3, r0, #36864
  38:../../libDaisy//src/hid/midi.h ****         }
 681              		.loc 2 38 20 view .LVU169
 682 000a B1F804C0 		ldrh	ip, [r1, #4]
 683              	.LBE436:
 684              	.LBE435:
 685              	.LBE434:
 686              	.LBE433:
 687              	.LBE432:
 688              	.LBE431:
 689              	.LBE430:
 690              	.LBE409:
 691              	.LBE408:
 692              	.LBE407:
 693              	.LBE406:
 694              		.loc 13 104 1 view .LVU170
 695 000e 00B5     		push	{lr}
 696              		.cfi_def_cfa_offset 4
 697              		.cfi_offset 14, -4
 698              	.LBB491:
 699              	.LBB489:
 700              	.LBB488:
 701              	.LBB487:
 702              	.LBB465:
 703              	.LBB462:
 704              	.LBB459:
 705              	.LBB446:
 706              	.LBB443:
 707              	.LBB440:
 708              	.LBB437:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 709              		.loc 2 37 20 view .LVU171
 710 0010 B1F800E0 		ldrh	lr, [r1]
 711              	.LBE437:
 712              	.LBE440:
 713              	.LBE443:
 714              	.LBE446:
 715              	.LBE459:
 716              	.LBE462:
 717              	.LBE465:
 718              	.LBB466:
 719              	.LBB428:
 720              	.LBB417:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 31


 721              	.LBB416:
 722              	.LBB415:
 723              		.loc 14 166 34 view .LVU172
 724 0014 0260     		str	r2, [r0]
 725              	.LVL37:
 726              		.loc 14 166 34 view .LVU173
 727              	.LBE415:
 728              	.LBE416:
 729              	.LBE417:
 730              	.LBB418:
 731              	.LBI418:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 732              		.loc 12 95 5 is_stmt 1 view .LVU174
 733              	.LBE418:
 734              	.LBE428:
 735              	.LBE466:
 736              	.LBB467:
 737              	.LBB463:
 738              	.LBB460:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 739              		.loc 2 84 19 is_stmt 0 view .LVU175
 740 0016 1049     		ldr	r1, .L25+8
 741              	.LBE460:
 742              	.LBE463:
 743              	.LBE467:
 744              	.LBB468:
 745              	.LBB429:
 746              	.LBB421:
 747              	.LBB419:
 748              	.LBB420:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 749              		.loc 12 95 35 view .LVU176
 750 0018 4261     		str	r2, [r0, #20]
 751              	.LVL38:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 752              		.loc 12 95 35 view .LVU177
 753              	.LBE420:
 754              	.LBE419:
 755              	.LBE421:
 756              	.LBB422:
 757              	.LBI422:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 758              		.loc 11 92 5 is_stmt 1 view .LVU178
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 759              		.loc 11 92 5 is_stmt 0 view .LVU179
 760              	.LBE422:
 761              	.LBB423:
 762              	.LBI423:
 763              		.file 15 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 32


   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 33


  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 764              		.loc 15 84 5 is_stmt 1 view .LVU180
 765              	.LBB424:
 766              	.LBB425:
 767              		.loc 15 84 33 is_stmt 0 view .LVU181
 768 001a 0262     		str	r2, [r0, #32]
 769              	.LVL39:
 770              		.loc 15 84 33 view .LVU182
 771              	.LBE425:
 772              	.LBE424:
 773              	.LBE423:
 774              	.LBB426:
 775              	.LBI426:
  40:../../libDaisy//src/hid/usb.h **** 
 776              		.loc 10 40 5 is_stmt 1 view .LVU183
  40:../../libDaisy//src/hid/usb.h **** 
 777              		.loc 10 40 5 is_stmt 0 view .LVU184
 778              	.LBE426:
 779              	.LBB427:
 780              	.LBI427:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 781              		.loc 9 77 5 is_stmt 1 view .LVU185
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 782              		.loc 9 77 5 is_stmt 0 view .LVU186
 783              	.LBE427:
 784              	.LBE429:
 785              	.LBE468:
 786              	.LBB469:
 787              	.LBI469:
  20:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 788              		.loc 7 20 5 is_stmt 1 view .LVU187
 789              	.LBB470:
 790              	.LBB471:
 791              	.LBI471:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 792              		.loc 5 41 5 view .LVU188
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 793              		.loc 5 41 5 is_stmt 0 view .LVU189
 794              	.LBE471:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 34


 795              	.LBE470:
 796              	.LBE469:
 797              	.LBB472:
 798              	.LBI472:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 799              		.loc 6 21 5 is_stmt 1 view .LVU190
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 800              		.loc 6 21 5 is_stmt 0 view .LVU191
 801              	.LBE472:
 802              	.LBB473:
 803              	.LBI473:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 804              		.loc 6 21 5 is_stmt 1 view .LVU192
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 805              		.loc 6 21 5 is_stmt 0 view .LVU193
 806              	.LBE473:
 807              	.LBB474:
 808              	.LBI474:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 809              		.loc 5 41 5 is_stmt 1 view .LVU194
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 810              		.loc 5 41 5 is_stmt 0 view .LVU195
 811              	.LBE474:
 812              	.LBB475:
 813              	.LBI475:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 814              		.loc 5 41 5 is_stmt 1 view .LVU196
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 815              		.loc 5 41 5 is_stmt 0 view .LVU197
 816              	.LBE475:
 817              	.LBB476:
 818              	.LBI476:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 819              		.loc 3 17 5 is_stmt 1 view .LVU198
 820              	.LBB477:
 821              	.LBB478:
 822              	.LBI478:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 823              		.loc 4 24 5 view .LVU199
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 824              		.loc 4 24 5 is_stmt 0 view .LVU200
 825              	.LBE478:
 826              	.LBB479:
 827              	.LBI479:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 828              		.loc 4 24 5 is_stmt 1 view .LVU201
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 829              		.loc 4 24 5 is_stmt 0 view .LVU202
 830              	.LBE479:
 831              	.LBB480:
 832              	.LBI480:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 833              		.loc 4 24 5 is_stmt 1 view .LVU203
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 834              		.loc 4 24 5 is_stmt 0 view .LVU204
 835              	.LBE480:
 836              	.LBE477:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 35


 837              	.LBE476:
 838              	.LBB481:
 839              	.LBI481:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 840              		.loc 3 17 5 is_stmt 1 view .LVU205
 841              	.LBB482:
 842              	.LBB483:
 843              	.LBI483:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 844              		.loc 4 24 5 view .LVU206
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 845              		.loc 4 24 5 is_stmt 0 view .LVU207
 846              	.LBE483:
 847              	.LBB484:
 848              	.LBI484:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 849              		.loc 4 24 5 is_stmt 1 view .LVU208
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 850              		.loc 4 24 5 is_stmt 0 view .LVU209
 851              	.LBE484:
 852              	.LBB485:
 853              	.LBI485:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 854              		.loc 4 24 5 is_stmt 1 view .LVU210
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 855              		.loc 4 24 5 is_stmt 0 view .LVU211
 856              	.LBE485:
 857              	.LBE482:
 858              	.LBE481:
 859              	.LBB486:
 860              	.LBI430:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 861              		.loc 2 84 5 is_stmt 1 view .LVU212
 862              	.LBB464:
 863              	.LBB461:
 864              	.LBB447:
 865              	.LBI447:
 866              		.file 16 "../../libDaisy//src/per/uart.h"
   1:../../libDaisy//src/per/uart.h **** /* 
   2:../../libDaisy//src/per/uart.h **** TODO
   3:../../libDaisy//src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libDaisy//src/per/uart.h **** - Transmit function improvements.
   5:../../libDaisy//src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libDaisy//src/per/uart.h **** */
   7:../../libDaisy//src/per/uart.h **** 
   8:../../libDaisy//src/per/uart.h **** #pragma once
   9:../../libDaisy//src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libDaisy//src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libDaisy//src/per/uart.h **** #include "daisy_core.h"
  12:../../libDaisy//src/per/uart.h **** 
  13:../../libDaisy//src/per/uart.h **** 
  14:../../libDaisy//src/per/uart.h **** namespace daisy
  15:../../libDaisy//src/per/uart.h **** {
  16:../../libDaisy//src/per/uart.h **** /** @addtogroup serial
  17:../../libDaisy//src/per/uart.h ****     @{
  18:../../libDaisy//src/per/uart.h ****     */
  19:../../libDaisy//src/per/uart.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 36


  20:../../libDaisy//src/per/uart.h **** /** 
  21:../../libDaisy//src/per/uart.h ****     Uart Peripheral
  22:../../libDaisy//src/per/uart.h ****     @author shensley
  23:../../libDaisy//src/per/uart.h ****     @date March 2020
  24:../../libDaisy//src/per/uart.h ****     */
  25:../../libDaisy//src/per/uart.h **** class UartHandler
  26:../../libDaisy//src/per/uart.h **** {
  27:../../libDaisy//src/per/uart.h ****   public:
  28:../../libDaisy//src/per/uart.h ****     struct Config
  29:../../libDaisy//src/per/uart.h ****     {
  30:../../libDaisy//src/per/uart.h ****         enum class Peripheral
  31:../../libDaisy//src/per/uart.h ****         {
  32:../../libDaisy//src/per/uart.h ****             USART_1,
  33:../../libDaisy//src/per/uart.h ****             USART_2,
  34:../../libDaisy//src/per/uart.h ****             USART_3,
  35:../../libDaisy//src/per/uart.h ****             UART_4,
  36:../../libDaisy//src/per/uart.h ****             UART_5,
  37:../../libDaisy//src/per/uart.h ****             USART_6,
  38:../../libDaisy//src/per/uart.h ****             UART_7,
  39:../../libDaisy//src/per/uart.h ****             UART_8,
  40:../../libDaisy//src/per/uart.h ****             LPUART_1,
  41:../../libDaisy//src/per/uart.h ****         };
  42:../../libDaisy//src/per/uart.h **** 
  43:../../libDaisy//src/per/uart.h ****         enum class StopBits
  44:../../libDaisy//src/per/uart.h ****         {
  45:../../libDaisy//src/per/uart.h ****             BITS_0_5,
  46:../../libDaisy//src/per/uart.h ****             BITS_1,
  47:../../libDaisy//src/per/uart.h ****             BITS_1_5,
  48:../../libDaisy//src/per/uart.h ****             BITS_2,
  49:../../libDaisy//src/per/uart.h ****         };
  50:../../libDaisy//src/per/uart.h **** 
  51:../../libDaisy//src/per/uart.h ****         enum class Parity
  52:../../libDaisy//src/per/uart.h ****         {
  53:../../libDaisy//src/per/uart.h ****             NONE,
  54:../../libDaisy//src/per/uart.h ****             EVEN,
  55:../../libDaisy//src/per/uart.h ****             ODD,
  56:../../libDaisy//src/per/uart.h ****         };
  57:../../libDaisy//src/per/uart.h **** 
  58:../../libDaisy//src/per/uart.h ****         enum class Mode
  59:../../libDaisy//src/per/uart.h ****         {
  60:../../libDaisy//src/per/uart.h ****             RX,
  61:../../libDaisy//src/per/uart.h ****             TX,
  62:../../libDaisy//src/per/uart.h ****             TX_RX,
  63:../../libDaisy//src/per/uart.h ****         };
  64:../../libDaisy//src/per/uart.h **** 
  65:../../libDaisy//src/per/uart.h ****         enum class WordLength
  66:../../libDaisy//src/per/uart.h ****         {
  67:../../libDaisy//src/per/uart.h ****             BITS_7,
  68:../../libDaisy//src/per/uart.h ****             BITS_8,
  69:../../libDaisy//src/per/uart.h ****             BITS_9,
  70:../../libDaisy//src/per/uart.h ****         };
  71:../../libDaisy//src/per/uart.h **** 
  72:../../libDaisy//src/per/uart.h ****         struct
  73:../../libDaisy//src/per/uart.h ****         {
  74:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libDaisy//src/per/uart.h ****         } pin_config;        /**< & */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 37


  77:../../libDaisy//src/per/uart.h **** 
  78:../../libDaisy//src/per/uart.h ****         Config()
  79:../../libDaisy//src/per/uart.h ****         {
  80:../../libDaisy//src/per/uart.h ****             // user must init periph, pin_config, and mode
  81:../../libDaisy//src/per/uart.h ****             stopbits   = StopBits::BITS_1;
  82:../../libDaisy//src/per/uart.h ****             parity     = Parity::NONE;
  83:../../libDaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
  84:../../libDaisy//src/per/uart.h ****             baudrate   = 4800;
  85:../../libDaisy//src/per/uart.h ****             // baudrate   = 31250;
  86:../../libDaisy//src/per/uart.h ****         }
  87:../../libDaisy//src/per/uart.h **** 
  88:../../libDaisy//src/per/uart.h ****         Peripheral periph;
  89:../../libDaisy//src/per/uart.h ****         StopBits   stopbits;
  90:../../libDaisy//src/per/uart.h ****         Parity     parity;
  91:../../libDaisy//src/per/uart.h ****         Mode       mode;
  92:../../libDaisy//src/per/uart.h ****         WordLength wordlength;
  93:../../libDaisy//src/per/uart.h ****         uint32_t   baudrate;
  94:../../libDaisy//src/per/uart.h ****     };
  95:../../libDaisy//src/per/uart.h **** 
  96:../../libDaisy//src/per/uart.h **** 
  97:../../libDaisy//src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 867              		.loc 16 97 5 view .LVU213
 868              	.LBB448:
 869              	.LBB449:
 870              		.loc 16 97 35 is_stmt 0 view .LVU214
 871 001c C0F87C21 		str	r2, [r0, #380]
 872              	.LVL40:
 873              		.loc 16 97 35 view .LVU215
 874              	.LBE449:
 875              	.LBE448:
 876              	.LBE447:
 877              	.LBB450:
 878              	.LBI450:
 879              		.file 17 "../../libDaisy//src/util/ringbuffer.h"
   1:../../libDaisy//src/util/ringbuffer.h **** #pragma once
   2:../../libDaisy//src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libDaisy//src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libDaisy//src/util/ringbuffer.h **** 
   5:../../libDaisy//src/util/ringbuffer.h **** #include <algorithm>
   6:../../libDaisy//src/util/ringbuffer.h **** 
   7:../../libDaisy//src/util/ringbuffer.h **** namespace daisy
   8:../../libDaisy//src/util/ringbuffer.h **** {
   9:../../libDaisy//src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libDaisy//src/util/ringbuffer.h ****     @{
  11:../../libDaisy//src/util/ringbuffer.h **** */
  12:../../libDaisy//src/util/ringbuffer.h **** 
  13:../../libDaisy//src/util/ringbuffer.h **** /**
  14:../../libDaisy//src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libDaisy//src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libDaisy//src/util/ringbuffer.h **** */
  17:../../libDaisy//src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libDaisy//src/util/ringbuffer.h **** class RingBuffer
  19:../../libDaisy//src/util/ringbuffer.h **** {
  20:../../libDaisy//src/util/ringbuffer.h ****   public:
  21:../../libDaisy//src/util/ringbuffer.h ****     RingBuffer() {}
 880              		.loc 17 21 5 is_stmt 1 view .LVU216
 881              		.loc 17 21 5 is_stmt 0 view .LVU217
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 38


 882              	.LBE450:
 883              	.LBB451:
 884              	.LBI433:
  86:../../libDaisy//src/hid/midi.h **** 
  87:../../libDaisy//src/hid/midi.h ****     struct Config
 885              		.loc 2 87 12 is_stmt 1 view .LVU218
 886              	.LBB444:
 887              	.LBI434:
  34:../../libDaisy//src/hid/midi.h ****         {
 888              		.loc 2 34 9 view .LVU219
 889              	.LBB441:
 890              	.LBB438:
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 891              		.loc 2 36 13 view .LVU220
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 892              		.loc 2 36 20 is_stmt 0 view .LVU221
 893 0020 C3F82422 		str	r2, [r3, #548]
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 894              		.loc 2 37 13 is_stmt 1 view .LVU222
  38:../../libDaisy//src/hid/midi.h ****         }
 895              		.loc 2 38 20 is_stmt 0 view .LVU223
 896 0024 A3F82AC2 		strh	ip, [r3, #554]	@ movhi
 897              	.LBE438:
 898              	.LBE441:
 899              	.LBE444:
 900              	.LBE451:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 901              		.loc 2 84 19 view .LVU224
 902 0028 4FF0070C 		mov	ip, #7
 903              	.LBB452:
 904              	.LBB453:
 905              	.LBB454:
 906              	.LBB455:
 907              		.loc 16 97 35 view .LVU225
 908 002c C3F82C22 		str	r2, [r3, #556]
 909              	.LBE455:
 910              	.LBE454:
 911              	.LBE453:
 912              	.LBE452:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 913              		.loc 2 84 19 view .LVU226
 914 0030 4FF60F02 		movw	r2, #63503
 915 0034 C3F83012 		str	r1, [r3, #560]
 916 0038 A3F83422 		strh	r2, [r3, #564]	@ movhi
 917 003c 83F836C2 		strb	ip, [r3, #566]
 918              	.LBB457:
 919              	.LBB445:
 920              	.LBB442:
 921              	.LBB439:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 922              		.loc 2 37 20 view .LVU227
 923 0040 A3F828E2 		strh	lr, [r3, #552]	@ movhi
  38:../../libDaisy//src/hid/midi.h ****         }
 924              		.loc 2 38 13 is_stmt 1 view .LVU228
 925              	.LVL41:
  38:../../libDaisy//src/hid/midi.h ****         }
 926              		.loc 2 38 13 is_stmt 0 view .LVU229
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 39


 927              	.LBE439:
 928              	.LBE442:
 929              	.LBE445:
 930              	.LBE457:
 931              	.LBB458:
 932              	.LBI452:
  25:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
 933              		.loc 2 25 5 is_stmt 1 view .LVU230
 934              	.LBB456:
 935              	.LBI453:
 936              		.loc 16 97 5 view .LVU231
 937              		.loc 16 97 5 is_stmt 0 view .LVU232
 938              	.LBE456:
 939              	.LBE458:
 940              	.LBE461:
 941              	.LBE464:
 942              	.LBE486:
 943              	.LBE487:
 944              	.LBE488:
   6:MyProj.cpp    **** tCycle mySine;
 945              		.loc 13 6 10 view .LVU233
 946 0044 054A     		ldr	r2, .L25+12
 947 0046 0649     		ldr	r1, .L25+16
 948              	.LBE489:
 949              	.LBE491:
 950              		.loc 13 104 1 view .LVU234
 951 0048 5DF804EB 		ldr	lr, [sp], #4
 952              		.cfi_restore 14
 953              		.cfi_def_cfa_offset 0
 954              	.LBB492:
 955              	.LBB490:
   6:MyProj.cpp    **** tCycle mySine;
 956              		.loc 13 6 10 view .LVU235
 957 004c FFF7FEBF 		b	__aeabi_atexit
 958              	.LVL42:
 959              	.L26:
 960              		.align	2
 961              	.L25:
 962 0050 00000000 		.word	hw
 963 0054 00000000 		.word	.LANCHOR6
 964 0058 80707FF0 		.word	-260083584
 965 005c 00000000 		.word	__dso_handle
 966 0060 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 967              	.LBE490:
 968              	.LBE492:
 969              		.cfi_endproc
 970              	.LFE2571:
 972              		.section	.init_array,"aw",%init_array
 973              		.align	2
 974 0000 00000000 		.word	_GLOBAL__sub_I_leaf(target1)
 975              		.global	myTempo
 976              		.global	sampleCounterMaxValue
 977              		.global	sampleCounter
 978              		.global	myFreq
 979              		.global	mySine
 980              		.global	hw
 981              		.global	leafMemory
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 40


 982              		.global	leaf
 983              		.section	.rodata
 984              		.align	2
 985              		.set	.LANCHOR6,. + 0
 986              	.LC0:
 987 0000 01       		.byte	1
 988 0001 07       		.byte	7
 989 0002 0000     		.space	2
 990              	.LC1:
 991 0004 01       		.byte	1
 992 0005 06       		.byte	6
 993              		.section	.bss.hw,"aw",%nobits
 994              		.align	2
 997              	hw:
 998 0000 00000000 		.space	37432
 998      00000000 
 998      00000000 
 998      00000000 
 998      00000000 
 999              		.section	.bss.leaf,"aw",%nobits
 1000              		.align	2
 1001              		.set	.LANCHOR5,. + 0
 1004              	leaf:
 1005 0000 00000000 		.space	80
 1005      00000000 
 1005      00000000 
 1005      00000000 
 1005      00000000 
 1006              		.section	.bss.leafMemory,"aw",%nobits
 1007              		.align	2
 1010              	leafMemory:
 1011 0000 00000000 		.space	65535
 1011      00000000 
 1011      00000000 
 1011      00000000 
 1011      00000000 
 1012              		.section	.bss.mySine,"aw",%nobits
 1013              		.align	2
 1014              		.set	.LANCHOR4,. + 0
 1017              	mySine:
 1018 0000 00000000 		.space	4
 1019              		.section	.bss.myTempo,"aw",%nobits
 1020              		.align	2
 1021              		.set	.LANCHOR0,. + 0
 1024              	myTempo:
 1025 0000 00000000 		.space	4
 1026              		.section	.bss.sampleCounter,"aw",%nobits
 1027              		.align	2
 1028              		.set	.LANCHOR2,. + 0
 1031              	sampleCounter:
 1032 0000 00000000 		.space	4
 1033              		.section	.data.myFreq,"aw"
 1034              		.align	2
 1035              		.set	.LANCHOR3,. + 0
 1038              	myFreq:
 1039 0000 00005C43 		.word	1130102784
 1040              		.section	.data.sampleCounterMaxValue,"aw"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 41


 1041              		.align	2
 1042              		.set	.LANCHOR1,. + 0
 1045              	sampleCounterMaxValue:
 1046 0000 80BB0000 		.word	48000
 1047              		.text
 1048              	.Letext0:
 1049              		.file 18 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 1050              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 1051              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 1052              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 1053              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 1054              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 1055              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 1056              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 1057              		.file 26 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 1058              		.file 27 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 1059              		.file 28 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 1060              		.file 29 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 1061              		.file 30 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 1062              		.file 31 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 1063              		.file 32 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 1064              		.file 33 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 1065              		.file 34 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 1066              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 1067              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 1068              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 1069              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 1070              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 1071              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 1072              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 1073              		.file 42 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 1074              		.file 43 "../../libDaisy//src/daisy_core.h"
 1075              		.file 44 "../../libDaisy//src/per/tim.h"
 1076              		.file 45 "../../libDaisy//src/per/sai.h"
 1077              		.file 46 "../../libDaisy//src/hid/MidiEvent.h"
 1078              		.file 47 "../../libDaisy//src/per/rng.h"
 1079              		.file 48 "../../libDaisy//src/util/wav_format.h"
 1080              		.file 49 "../../libDaisy//src/util/color.h"
 1081              		.file 50 "../../libDaisy//src/dev/max11300.h"
 1082              		.file 51 "../../libDaisy//src/per/gpio.h"
 1083              		.file 52 "../../libDaisy//src/dev/sdram.h"
 1084              		.file 53 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 1085              		.file 54 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 1086              		.file 55 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 1087              		.file 56 "../../../LEAF/leaf/./Inc/leaf-mempool.h"
 1088              		.file 57 "../../../LEAF/leaf/./Inc/leaf-global.h"
 1089              		.file 58 "../../../LEAF/leaf/./Inc/leaf-oscillators.h"
 1090              		.file 59 "../../../LEAF/leaf/leaf.h"
 1091              		.file 60 "<built-in>"
 1092              		.file 61 "../../libDaisy//src/dev/sr_595.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MyProj.cpp
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:19     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD2Ev
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD1Ev
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:154    .text._Z12randomNumberv:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:161    .text._Z12randomNumberv:0000000000000000 _Z12randomNumberv
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:178    .text._Z12randomNumberv:000000000000000c $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:183    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:190    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:523    .text._Z13AudioCallbackPKPKfPPfj:000000000000014c $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:997    .bss.hw:0000000000000000 hw
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:541    .text.startup.main:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:548    .text.startup.main:0000000000000000 main
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:620    .text.startup.main:0000000000000050 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:1010   .bss.leafMemory:0000000000000000 leafMemory
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:631    .text.startup._GLOBAL__sub_I_leaf:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:637    .text.startup._GLOBAL__sub_I_leaf:0000000000000000 _GLOBAL__sub_I_leaf
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:962    .text.startup._GLOBAL__sub_I_leaf:0000000000000050 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:973    .init_array:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:1024   .bss.myTempo:0000000000000000 myTempo
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:1045   .data.sampleCounterMaxValue:0000000000000000 sampleCounterMaxValue
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:1031   .bss.sampleCounter:0000000000000000 sampleCounter
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:1038   .data.myFreq:0000000000000000 myFreq
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:1017   .bss.mySine:0000000000000000 mySine
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:1004   .bss.leaf:0000000000000000 leaf
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:984    .rodata:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:994    .bss.hw:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:1000   .bss.leaf:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:1007   .bss.leafMemory:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:1013   .bss.mySine:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:1020   .bss.myTempo:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:1027   .bss.sampleCounter:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:1034   .data.myFreq:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cc9j1vuz.s:1041   .data.sampleCounterMaxValue:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy8DaisyPodD5Ev

UNDEFINED SYMBOLS
_ZN5daisy6Random8GetFloatEff
_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
tCycle_tick
tCycle_setFreq
_ZN5daisy6RgbLed3SetEfff
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy6Random4InitEv
_ZN5daisy8DaisyPod8StartAdcEv
_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
LEAF_init
tCycle_init
_ZN5daisy8DaisyPod10UpdateLedsEv
__aeabi_atexit
__dso_handle
