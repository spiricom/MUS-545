ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"MyProj.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  19              		.align	1
  20              		.p2align 2,,3
  21              		.weak	_ZN5daisy8DaisyPodD2Ev
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN5daisy8DaisyPodD2Ev:
  27              	.LVL0:
  28              	.LFB2538:
  29              		.file 1 "../../libDaisy//src/daisy_pod.h"
   1:../../libDaisy//src/daisy_pod.h **** #pragma once
   2:../../libDaisy//src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../../libDaisy//src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../../libDaisy//src/daisy_pod.h **** 
   5:../../libDaisy//src/daisy_pod.h **** #include "daisy_seed.h"
   6:../../libDaisy//src/daisy_pod.h **** 
   7:../../libDaisy//src/daisy_pod.h **** namespace daisy
   8:../../libDaisy//src/daisy_pod.h **** {
   9:../../libDaisy//src/daisy_pod.h **** /**
  10:../../libDaisy//src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libDaisy//src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libDaisy//src/daisy_pod.h ****     @author Stephen Hensley
  13:../../libDaisy//src/daisy_pod.h ****     @date November 2019
  14:../../libDaisy//src/daisy_pod.h ****     @ingroup boards
  15:../../libDaisy//src/daisy_pod.h **** */
  16:../../libDaisy//src/daisy_pod.h **** class DaisyPod
  17:../../libDaisy//src/daisy_pod.h **** {
  18:../../libDaisy//src/daisy_pod.h ****   public:
  19:../../libDaisy//src/daisy_pod.h ****     /** Switches */
  20:../../libDaisy//src/daisy_pod.h ****     enum Sw
  21:../../libDaisy//src/daisy_pod.h ****     {
  22:../../libDaisy//src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../../libDaisy//src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../../libDaisy//src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../../libDaisy//src/daisy_pod.h ****     };
  26:../../libDaisy//src/daisy_pod.h **** 
  27:../../libDaisy//src/daisy_pod.h ****     /** Knobs */
  28:../../libDaisy//src/daisy_pod.h ****     enum Knob
  29:../../libDaisy//src/daisy_pod.h ****     {
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 2


  30:../../libDaisy//src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../../libDaisy//src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../../libDaisy//src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../../libDaisy//src/daisy_pod.h ****     };
  34:../../libDaisy//src/daisy_pod.h **** 
  35:../../libDaisy//src/daisy_pod.h ****     DaisyPod() {}
  36:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
  30              		.loc 1 36 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB265:
  36              	.LBI265:
  37              		.file 2 "../../libDaisy//src/hid/midi.h"
   1:../../libDaisy//src/hid/midi.h **** #pragma once
   2:../../libDaisy//src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libDaisy//src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libDaisy//src/hid/midi.h **** 
   5:../../libDaisy//src/hid/midi.h **** // TODO: make this adjustable
   6:../../libDaisy//src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libDaisy//src/hid/midi.h **** 
   8:../../libDaisy//src/hid/midi.h **** #include <stdint.h>
   9:../../libDaisy//src/hid/midi.h **** #include <stdlib.h>
  10:../../libDaisy//src/hid/midi.h **** #include "per/uart.h"
  11:../../libDaisy//src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libDaisy//src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libDaisy//src/hid/midi.h **** #include "hid/usb_midi.h"
  14:../../libDaisy//src/hid/midi.h **** #include "sys/system.h"
  15:../../libDaisy//src/hid/midi.h **** 
  16:../../libDaisy//src/hid/midi.h **** namespace daisy
  17:../../libDaisy//src/hid/midi.h **** {
  18:../../libDaisy//src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART 
  19:../../libDaisy//src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../../libDaisy//src/hid/midi.h ****  *  @ingroup midi
  21:../../libDaisy//src/hid/midi.h **** */
  22:../../libDaisy//src/hid/midi.h **** class MidiUartTransport
  23:../../libDaisy//src/hid/midi.h **** {
  24:../../libDaisy//src/hid/midi.h ****   public:
  25:../../libDaisy//src/hid/midi.h ****     MidiUartTransport() {}
  26:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
  27:../../libDaisy//src/hid/midi.h **** 
  28:../../libDaisy//src/hid/midi.h ****     struct Config
  29:../../libDaisy//src/hid/midi.h ****     {
  30:../../libDaisy//src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  31:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    rx;
  32:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    tx;
  33:../../libDaisy//src/hid/midi.h **** 
  34:../../libDaisy//src/hid/midi.h ****         Config()
  35:../../libDaisy//src/hid/midi.h ****         {
  36:../../libDaisy//src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  37:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  38:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  39:../../libDaisy//src/hid/midi.h ****         }
  40:../../libDaisy//src/hid/midi.h ****     };
  41:../../libDaisy//src/hid/midi.h **** 
  42:../../libDaisy//src/hid/midi.h ****     inline void Init(Config config)
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 3


  43:../../libDaisy//src/hid/midi.h ****     {
  44:../../libDaisy//src/hid/midi.h ****         UartHandler::Config uart_config;
  45:../../libDaisy//src/hid/midi.h **** 
  46:../../libDaisy//src/hid/midi.h ****         //defaults
  47:../../libDaisy//src/hid/midi.h ****         uart_config.baudrate   = 31250;
  48:../../libDaisy//src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  49:../../libDaisy//src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  50:../../libDaisy//src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  51:../../libDaisy//src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  52:../../libDaisy//src/hid/midi.h **** 
  53:../../libDaisy//src/hid/midi.h ****         //user settings
  54:../../libDaisy//src/hid/midi.h ****         uart_config.periph        = config.periph;
  55:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  56:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  57:../../libDaisy//src/hid/midi.h **** 
  58:../../libDaisy//src/hid/midi.h ****         uart_.Init(uart_config);
  59:../../libDaisy//src/hid/midi.h ****     }
  60:../../libDaisy//src/hid/midi.h **** 
  61:../../libDaisy//src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  62:../../libDaisy//src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  63:../../libDaisy//src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  64:../../libDaisy//src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  65:../../libDaisy//src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  66:../../libDaisy//src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  67:../../libDaisy//src/hid/midi.h **** 
  68:../../libDaisy//src/hid/midi.h ****   private:
  69:../../libDaisy//src/hid/midi.h ****     UartHandler uart_;
  70:../../libDaisy//src/hid/midi.h **** };
  71:../../libDaisy//src/hid/midi.h **** 
  72:../../libDaisy//src/hid/midi.h **** /** 
  73:../../libDaisy//src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  74:../../libDaisy//src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  75:../../libDaisy//src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  76:../../libDaisy//src/hid/midi.h ****     @author shensley
  77:../../libDaisy//src/hid/midi.h ****     @date March 2020
  78:../../libDaisy//src/hid/midi.h ****     @ingroup midi
  79:../../libDaisy//src/hid/midi.h **** */
  80:../../libDaisy//src/hid/midi.h **** template <typename Transport>
  81:../../libDaisy//src/hid/midi.h **** class MidiHandler
  82:../../libDaisy//src/hid/midi.h **** {
  83:../../libDaisy//src/hid/midi.h ****   public:
  84:../../libDaisy//src/hid/midi.h ****     MidiHandler() {}
  85:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
  38              		.loc 2 85 5 view .LVU1
  39              	.LBB266:
  40              	.LBI266:
  26:../../libDaisy//src/hid/midi.h **** 
  41              		.loc 2 26 5 view .LVU2
  26:../../libDaisy//src/hid/midi.h **** 
  42              		.loc 2 26 5 is_stmt 0 view .LVU3
  43              	.LBE266:
  44              	.LBE265:
  45              	.LBB267:
  46              	.LBI267:
  47              		.file 3 "../../libDaisy//src/hid/rgb_led.h"
   1:../../libDaisy//src/hid/rgb_led.h **** #pragma once
   2:../../libDaisy//src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 4


   3:../../libDaisy//src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../../libDaisy//src/hid/rgb_led.h **** #include "hid/led.h"
   5:../../libDaisy//src/hid/rgb_led.h **** #include "util/color.h"
   6:../../libDaisy//src/hid/rgb_led.h **** 
   7:../../libDaisy//src/hid/rgb_led.h **** namespace daisy
   8:../../libDaisy//src/hid/rgb_led.h **** {
   9:../../libDaisy//src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../../libDaisy//src/hid/rgb_led.h ****     @{
  11:../../libDaisy//src/hid/rgb_led.h **** */
  12:../../libDaisy//src/hid/rgb_led.h **** 
  13:../../libDaisy//src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../../libDaisy//src/hid/rgb_led.h **** class RgbLed
  15:../../libDaisy//src/hid/rgb_led.h **** {
  16:../../libDaisy//src/hid/rgb_led.h ****   public:
  17:../../libDaisy//src/hid/rgb_led.h ****     RgbLed() {}
  18:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
  48              		.loc 3 18 5 is_stmt 1 view .LVU4
  49              	.LBB268:
  50              	.LBI268:
  51              		.file 4 "../../libDaisy//src/hid/led.h"
   1:../../libDaisy//src/hid/led.h **** 
   2:../../libDaisy//src/hid/led.h **** #pragma once
   3:../../libDaisy//src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libDaisy//src/hid/led.h **** #define DSY_LED_H
   5:../../libDaisy//src/hid/led.h **** #include "daisy_core.h"
   6:../../libDaisy//src/hid/led.h **** #include "per/gpio.h"
   7:../../libDaisy//src/hid/led.h **** 
   8:../../libDaisy//src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libDaisy//src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libDaisy//src/hid/led.h **** */
  11:../../libDaisy//src/hid/led.h **** 
  12:../../libDaisy//src/hid/led.h **** namespace daisy
  13:../../libDaisy//src/hid/led.h **** {
  14:../../libDaisy//src/hid/led.h **** /**
  15:../../libDaisy//src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libDaisy//src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libDaisy//src/hid/led.h ****     @author shensley
  18:../../libDaisy//src/hid/led.h ****     @date March 2020
  19:../../libDaisy//src/hid/led.h ****     @ingroup feedback
  20:../../libDaisy//src/hid/led.h **** */
  21:../../libDaisy//src/hid/led.h **** class Led
  22:../../libDaisy//src/hid/led.h **** {
  23:../../libDaisy//src/hid/led.h ****   public:
  24:../../libDaisy//src/hid/led.h ****     Led() {}
  25:../../libDaisy//src/hid/led.h ****     ~Led() {}
  52              		.loc 4 25 5 view .LVU5
  53              		.loc 4 25 5 is_stmt 0 view .LVU6
  54              	.LBE268:
  55              	.LBB269:
  56              	.LBI269:
  57              		.loc 4 25 5 is_stmt 1 view .LVU7
  58              		.loc 4 25 5 is_stmt 0 view .LVU8
  59              	.LBE269:
  60              	.LBB270:
  61              	.LBI270:
  62              		.loc 4 25 5 is_stmt 1 view .LVU9
  63              		.loc 4 25 5 is_stmt 0 view .LVU10
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 5


  64              	.LBE270:
  65              	.LBE267:
  66              	.LBB271:
  67              	.LBI271:
  68              		.loc 3 18 5 is_stmt 1 view .LVU11
  69              	.LBB272:
  70              	.LBI272:
  71              		.loc 4 25 5 view .LVU12
  72              		.loc 4 25 5 is_stmt 0 view .LVU13
  73              	.LBE272:
  74              	.LBB273:
  75              	.LBI273:
  76              		.loc 4 25 5 is_stmt 1 view .LVU14
  77              		.loc 4 25 5 is_stmt 0 view .LVU15
  78              	.LBE273:
  79              	.LBB274:
  80              	.LBI274:
  81              		.loc 4 25 5 is_stmt 1 view .LVU16
  82              		.loc 4 25 5 is_stmt 0 view .LVU17
  83              	.LBE274:
  84              	.LBE271:
  85              	.LBB275:
  86              	.LBI275:
  87              		.file 5 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 6


  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  88              		.loc 5 42 5 is_stmt 1 view .LVU18
  89              		.loc 5 42 5 is_stmt 0 view .LVU19
  90              	.LBE275:
  91              	.LBB276:
  92              	.LBI276:
  93              		.loc 5 42 5 is_stmt 1 view .LVU20
  94              		.loc 5 42 5 is_stmt 0 view .LVU21
  95              	.LBE276:
  96              	.LBB277:
  97              	.LBI277:
  98              		.file 6 "../../libDaisy//src/hid/ctrl.h"
   1:../../libDaisy//src/hid/ctrl.h **** #pragma once
   2:../../libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/ctrl.h **** 
   6:../../libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libDaisy//src/hid/ctrl.h **** namespace daisy
   8:../../libDaisy//src/hid/ctrl.h **** {
   9:../../libDaisy//src/hid/ctrl.h **** /**
  10:../../libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../../libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../../libDaisy//src/hid/ctrl.h **** */
  17:../../libDaisy//src/hid/ctrl.h **** class AnalogControl
  18:../../libDaisy//src/hid/ctrl.h **** {
  19:../../libDaisy//src/hid/ctrl.h ****   public:
  20:../../libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../../libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../../libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
  99              		.loc 6 23 5 is_stmt 1 view .LVU22
 100              		.loc 6 23 5 is_stmt 0 view .LVU23
 101              	.LBE277:
 102              	.LBB278:
 103              	.LBI278:
 104              		.loc 6 23 5 is_stmt 1 view .LVU24
 105              		.loc 6 23 5 is_stmt 0 view .LVU25
 106              	.LBE278:
 107              	.LBB279:
 108              	.LBI279:
 109              		.file 7 "../../libDaisy//src/hid/encoder.h"
   1:../../libDaisy//src/hid/encoder.h **** #pragma once
   2:../../libDaisy//src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libDaisy//src/hid/encoder.h **** #define DSY_ENCODER_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 7


   4:../../libDaisy//src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libDaisy//src/hid/encoder.h **** 
   8:../../libDaisy//src/hid/encoder.h **** namespace daisy
   9:../../libDaisy//src/hid/encoder.h **** {
  10:../../libDaisy//src/hid/encoder.h **** /** 
  11:../../libDaisy//src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libDaisy//src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libDaisy//src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/encoder.h ****     @date December 2019
  15:../../libDaisy//src/hid/encoder.h ****     @ingroup controls
  16:../../libDaisy//src/hid/encoder.h **** */
  17:../../libDaisy//src/hid/encoder.h **** class Encoder
  18:../../libDaisy//src/hid/encoder.h **** {
  19:../../libDaisy//src/hid/encoder.h ****   public:
  20:../../libDaisy//src/hid/encoder.h ****     Encoder() {}
  21:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 110              		.loc 7 21 5 is_stmt 1 view .LVU26
 111              	.LBB280:
 112              	.LBI280:
 113              		.loc 5 42 5 view .LVU27
 114              		.loc 5 42 5 is_stmt 0 view .LVU28
 115              	.LBE280:
 116              	.LBE279:
 117              	.LBB281:
 118              	.LBI281:
 119              		.file 8 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 120              		.loc 8 22 5 is_stmt 1 view .LVU29
 121              	.LBB282:
 122              	.LBI282:
 123              		.file 9 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 8


   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 9


  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
 124              		.loc 9 78 5 view .LVU30
 125              		.loc 9 78 5 is_stmt 0 view .LVU31
 126              	.LBE282:
 127              	.LBB283:
 128              	.LBI283:
 129              		.file 10 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 10


  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 130              		.loc 10 42 5 is_stmt 1 view .LVU32
 131              		.loc 10 42 5 is_stmt 0 view .LVU33
 132              	.LBE283:
 133              	.LBB284:
 134              	.LBI284:
 135              		.file 11 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 11


  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 136              		.loc 11 93 5 is_stmt 1 view .LVU34
 137              		.loc 11 93 5 is_stmt 0 view .LVU35
 138              	.LBE284:
 139              	.LBB285:
 140              	.LBI285:
 141              		.file 12 "../../libDaisy//src/hid/audio.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 12


   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 13


  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 142              		.loc 12 96 5 is_stmt 1 view .LVU36
 143              		.loc 12 96 5 is_stmt 0 view .LVU37
 144              	.LBE285:
 145              	.LBE281:
 146              		.loc 1 36 18 view .LVU38
 147 0000 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE2538:
 151              		.weak	_ZN5daisy8DaisyPodD1Ev
 152              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 153 0002 00BF     		.section	.text._Z12randomNumberv,"ax",%progbits
 154              		.align	1
 155              		.p2align 2,,3
 156              		.global	_Z12randomNumberv
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	_Z12randomNumberv:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 14


 162              	.LFB2541:
 163              		.file 13 "MyProj.cpp"
   1:MyProj.cpp    **** #include "daisy_pod.h"
   2:MyProj.cpp    **** #include "leaf.h"
   3:MyProj.cpp    **** using namespace daisy;
   4:MyProj.cpp    **** LEAF leaf;
   5:MyProj.cpp    **** char leafMemory[65535];
   6:MyProj.cpp    **** DaisyPod hw;
   7:MyProj.cpp    **** tCycle mySine;
   8:MyProj.cpp    **** tPBSaw mySaw; // the PB stands for polyBLEP, the technique I'm using to generate the signal. Or pea
   9:MyProj.cpp    **** tPBPulse myPulse;
  10:MyProj.cpp    **** tPBTriangle myTriangle;
  11:MyProj.cpp    **** 
  12:MyProj.cpp    **** //let's define a global variable to store the frequency so we can easily mess with it in our progra
  13:MyProj.cpp    **** float myFreq = 220.0f;
  14:MyProj.cpp    **** 
  15:MyProj.cpp    **** int whichWaveform = 0; 
  16:MyProj.cpp    **** 
  17:MyProj.cpp    **** //OTHER WAVEFORMS
  18:MyProj.cpp    **** //some other waveforms to try
  19:MyProj.cpp    **** //push button1 to change which waveform it is.
  20:MyProj.cpp    **** 
  21:MyProj.cpp    **** float randomNumber()
  22:MyProj.cpp    **** {
 164              		.loc 13 22 1 is_stmt 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
  23:MyProj.cpp    ****     //call the daisy function to get a random number between 0 and 1 (what leaf wants)
  24:MyProj.cpp    ****     return Random::GetFloat(0.0f, 1.0f);
 169              		.loc 13 24 5 view .LVU40
 170              		.loc 13 24 28 is_stmt 0 view .LVU41
 171 0000 F7EE000A 		vmov.f32	s1, #1.0e+0
 172 0004 9FED010A 		vldr.32	s0, .L4
 173 0008 FFF7FEBF 		b	_ZN5daisy6Random8GetFloatEff
 174              	.LVL1:
 175              	.L5:
 176              		.align	2
 177              	.L4:
 178 000c 00000000 		.word	0
 179              		.cfi_endproc
 180              	.LFE2541:
 182              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 183              		.align	1
 184              		.p2align 2,,3
 185              		.global	_Z13AudioCallbackPKPKfPPfj
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	_Z13AudioCallbackPKPKfPPfj:
 191              	.LVL2:
 192              	.LFB2542:
  25:MyProj.cpp    **** }
  26:MyProj.cpp    **** 
  27:MyProj.cpp    **** 
  28:MyProj.cpp    **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 15


  29:MyProj.cpp    **** {
 193              		.loc 13 29 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
  30:MyProj.cpp    ****     hw.ProcessAllControls();
 197              		.loc 13 30 5 view .LVU43
 198              	.LBB286:
 199              	.LBI286:
  37:../../libDaisy//src/daisy_pod.h **** 
  38:../../libDaisy//src/daisy_pod.h ****     /** Init related stuff. */
  39:../../libDaisy//src/daisy_pod.h ****     void Init(bool boost = false);
  40:../../libDaisy//src/daisy_pod.h **** 
  41:../../libDaisy//src/daisy_pod.h ****     /** Wait for a bit
  42:../../libDaisy//src/daisy_pod.h ****     \param del Time to wait in ms.
  43:../../libDaisy//src/daisy_pod.h ****     */
  44:../../libDaisy//src/daisy_pod.h ****     void DelayMs(size_t del);
  45:../../libDaisy//src/daisy_pod.h **** 
  46:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  47:../../libDaisy//src/daisy_pod.h ****     \param cb Interleaved callback function
  48:../../libDaisy//src/daisy_pod.h ****     */
  49:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  50:../../libDaisy//src/daisy_pod.h **** 
  51:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  52:../../libDaisy//src/daisy_pod.h ****     \param cb multichannel callback function
  53:../../libDaisy//src/daisy_pod.h ****     */
  54:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  55:../../libDaisy//src/daisy_pod.h **** 
  56:../../libDaisy//src/daisy_pod.h ****     /**
  57:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  58:../../libDaisy//src/daisy_pod.h ****        \param cb New interleaved callback function.
  59:../../libDaisy//src/daisy_pod.h ****     */
  60:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  61:../../libDaisy//src/daisy_pod.h **** 
  62:../../libDaisy//src/daisy_pod.h ****     /**
  63:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  64:../../libDaisy//src/daisy_pod.h ****        \param cb New multichannel callback function.
  65:../../libDaisy//src/daisy_pod.h ****     */
  66:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  67:../../libDaisy//src/daisy_pod.h **** 
  68:../../libDaisy//src/daisy_pod.h ****     /** Stops the audio if it is running. */
  69:../../libDaisy//src/daisy_pod.h ****     void StopAudio();
  70:../../libDaisy//src/daisy_pod.h **** 
  71:../../libDaisy//src/daisy_pod.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  72:../../libDaisy//src/daisy_pod.h ****      ** Audio must be stopped for this to work.
  73:../../libDaisy//src/daisy_pod.h ****      */
  74:../../libDaisy//src/daisy_pod.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  75:../../libDaisy//src/daisy_pod.h **** 
  76:../../libDaisy//src/daisy_pod.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  77:../../libDaisy//src/daisy_pod.h ****      */
  78:../../libDaisy//src/daisy_pod.h ****     float AudioSampleRate();
  79:../../libDaisy//src/daisy_pod.h **** 
  80:../../libDaisy//src/daisy_pod.h ****     /** Sets the number of samples processed per channel by the audio callback.
  81:../../libDaisy//src/daisy_pod.h ****      */
  82:../../libDaisy//src/daisy_pod.h ****     void SetAudioBlockSize(size_t blocksize);
  83:../../libDaisy//src/daisy_pod.h **** 
  84:../../libDaisy//src/daisy_pod.h ****     /** Returns the number of samples per channel in a block of audio. */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 16


  85:../../libDaisy//src/daisy_pod.h ****     size_t AudioBlockSize();
  86:../../libDaisy//src/daisy_pod.h **** 
  87:../../libDaisy//src/daisy_pod.h ****     /** Returns the rate in Hz that the Audio callback is called */
  88:../../libDaisy//src/daisy_pod.h ****     float AudioCallbackRate();
  89:../../libDaisy//src/daisy_pod.h **** 
  90:../../libDaisy//src/daisy_pod.h ****     /**
  91:../../libDaisy//src/daisy_pod.h ****        Start analog to digital conversion.
  92:../../libDaisy//src/daisy_pod.h ****      */
  93:../../libDaisy//src/daisy_pod.h ****     void StartAdc();
  94:../../libDaisy//src/daisy_pod.h **** 
  95:../../libDaisy//src/daisy_pod.h ****     /** Stops Transfering data from the ADC */
  96:../../libDaisy//src/daisy_pod.h ****     void StopAdc();
  97:../../libDaisy//src/daisy_pod.h **** 
  98:../../libDaisy//src/daisy_pod.h ****     /** Call at same rate as analog reads for smooth reading.*/
  99:../../libDaisy//src/daisy_pod.h ****     void ProcessAnalogControls();
 100:../../libDaisy//src/daisy_pod.h **** 
 101:../../libDaisy//src/daisy_pod.h ****     /** Process Analog and Digital Controls */
 102:../../libDaisy//src/daisy_pod.h ****     inline void ProcessAllControls()
 200              		.loc 1 102 17 view .LVU44
 201              	.LBB287:
 103:../../libDaisy//src/daisy_pod.h ****     {
 104:../../libDaisy//src/daisy_pod.h ****         ProcessAnalogControls();
 202              		.loc 1 104 9 view .LVU45
 203              	.LBE287:
 204              	.LBE286:
  29:MyProj.cpp    ****     hw.ProcessAllControls();
 205              		.loc 13 29 1 is_stmt 0 view .LVU46
 206 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 207              		.cfi_def_cfa_offset 24
 208              		.cfi_offset 4, -24
 209              		.cfi_offset 5, -20
 210              		.cfi_offset 6, -16
 211              		.cfi_offset 7, -12
 212              		.cfi_offset 8, -8
 213              		.cfi_offset 14, -4
 214              	.LBB290:
 215              	.LBB288:
 216              		.loc 1 104 30 view .LVU47
 217 0004 4A48     		ldr	r0, .L22
 218              	.LVL3:
 219              		.loc 1 104 30 view .LVU48
 220              	.LBE288:
 221              	.LBE290:
  29:MyProj.cpp    ****     hw.ProcessAllControls();
 222              		.loc 13 29 1 view .LVU49
 223 0006 8846     		mov	r8, r1
 224 0008 1546     		mov	r5, r2
  31:MyProj.cpp    ****     
  32:MyProj.cpp    ****     //use the "myFreq" variable we declared up top here to temporarily store a value that is
  33:MyProj.cpp    ****     //set to be something between 220 and 880 (two octaves), depending on the knob position.
  34:MyProj.cpp    ****     // we do this by taking the knob value, which comes in as something between 0.0 and 1.0 
  35:MyProj.cpp    ****     //(which I got by calling the function GetKnobValue() in the hw object, passing in the hw objec
  36:MyProj.cpp    ****     //and multiplying it by the range we want (880-220, or 660), 
  37:MyProj.cpp    ****     //and then offsetting it by adding 220 so it starts where we want it to start. (otherwise it wo
  38:MyProj.cpp    ****     //the little f I put after numbers makes them a float literal, meaning it tells the compiler to
  39:MyProj.cpp    ****     // that's not necessary, it'll work if I just write 660.0 instead of 660.0f, but because of the
  40:MyProj.cpp    ****     // adding the f at the end of floating point numbers means they will be computed faster (at the
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 17


  41:MyProj.cpp    ****     // I just write the f by habit, you don't have to. All internal computations in leaf are in sin
  42:MyProj.cpp    ****     myFreq = (660.0f * hw.GetKnobValue(hw.KNOB_1)) + 220.0f;
 225              		.loc 13 42 12 view .LVU50
 226 000a 4A4F     		ldr	r7, .L22+4
  29:MyProj.cpp    ****     hw.ProcessAllControls();
 227              		.loc 13 29 1 view .LVU51
 228 000c 2DED028B 		vpush.64	{d8}
 229              		.cfi_def_cfa_offset 32
 230              		.cfi_offset 80, -32
 231              		.cfi_offset 81, -28
 232              	.LBB291:
 233              	.LBB289:
 234              		.loc 1 104 30 view .LVU52
 235 0010 FFF7FEFF 		bl	_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
 236              	.LVL4:
 105:../../libDaisy//src/daisy_pod.h ****         ProcessDigitalControls();
 237              		.loc 1 105 9 is_stmt 1 view .LVU53
 238              		.loc 1 105 31 is_stmt 0 view .LVU54
 239 0014 4648     		ldr	r0, .L22
 240 0016 FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
 241              	.LVL5:
 242              		.loc 1 105 31 view .LVU55
 243              	.LBE289:
 244              	.LBE291:
 245              		.loc 13 42 5 is_stmt 1 view .LVU56
 246              		.loc 13 42 39 is_stmt 0 view .LVU57
 247 001a 0021     		movs	r1, #0
 248 001c 4448     		ldr	r0, .L22
 249 001e FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 250              	.LVL6:
 251              		.loc 13 42 52 view .LVU58
 252 0022 9FED457A 		vldr.32	s14, .L22+8
 253 0026 DFED457A 		vldr.32	s15, .L22+12
 254 002a E0EE077A 		vfma.f32	s15, s0, s14
 255              		.loc 13 42 12 view .LVU59
 256 002e C7ED007A 		vstr.32	s15, [r7]
  43:MyProj.cpp    **** 
  44:MyProj.cpp    **** 
  45:MyProj.cpp    **** 
  46:MyProj.cpp    ****     //now here's the per sample stuff
  47:MyProj.cpp    ****     for (size_t i = 0; i < size; i++)
 257              		.loc 13 47 5 is_stmt 1 view .LVU60
 258              	.LVL7:
 259              	.LBB292:
 260              		.loc 13 47 26 view .LVU61
 261 0032 002D     		cmp	r5, #0
 262 0034 4FD0     		beq	.L6
 263              		.loc 13 47 17 is_stmt 0 view .LVU62
 264 0036 0024     		movs	r4, #0
 265 0038 414E     		ldr	r6, .L22+16
 266 003a 14E0     		b	.L12
 267              	.LVL8:
 268              	.L8:
 269              	.LBB293:
  48:MyProj.cpp    ****     {
  49:MyProj.cpp    ****         //since now we're going to have an if statement control structure in here, let's define "my
  50:MyProj.cpp    ****         float mySample = 0.0f;
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 18


  51:MyProj.cpp    **** 
  52:MyProj.cpp    ****         whichWaveform = hw.GetKnobValue(hw.KNOB_2) * 3.999f; // there are 4 waveforms, so starting 
  53:MyProj.cpp    ****         
  54:MyProj.cpp    ****         if (whichWaveform == 0)
  55:MyProj.cpp    ****         {
  56:MyProj.cpp    ****             //sine wave
  57:MyProj.cpp    ****             tCycle_setFreq(&mySine, myFreq);
  58:MyProj.cpp    ****             //note that since we defined mySample above, we don't put "float" here
  59:MyProj.cpp    ****             mySample = tCycle_tick(&mySine);
  60:MyProj.cpp    ****             //we can also set the LED stuff here if we want
  61:MyProj.cpp    ****             hw.led1.Set(1.0f, 1.0f, 1.0f); //led1 white (RGB all on)
  62:MyProj.cpp    ****         }
  63:MyProj.cpp    ****         else if (whichWaveform == 1)
 270              		.loc 13 63 14 view .LVU63
 271 003c 012B     		cmp	r3, #1
  50:MyProj.cpp    **** 
 272              		.loc 13 50 15 view .LVU64
 273 003e 9FED418A 		vldr.32	s16, .L22+20
 274              		.loc 13 63 14 view .LVU65
 275 0042 34D0     		beq	.L19
  64:MyProj.cpp    ****         {
  65:MyProj.cpp    ****              //saw wave
  66:MyProj.cpp    ****             tPBSaw_setFreq(&mySaw, myFreq);
  67:MyProj.cpp    ****             //note that since we defined mySample above, we don't put "float" here
  68:MyProj.cpp    ****             mySample = tPBSaw_tick(&mySaw);
  69:MyProj.cpp    ****             hw.led1.Set(1.0f, 0.0f, 0.0f); //led1 red
  70:MyProj.cpp    ****         }
  71:MyProj.cpp    ****         else if (whichWaveform == 2)
 276              		.loc 13 71 14 view .LVU66
 277 0044 022B     		cmp	r3, #2
 278 0046 4AD0     		beq	.L20
  72:MyProj.cpp    ****         {
  73:MyProj.cpp    ****              //pulse wave
  74:MyProj.cpp    ****             tPBPulse_setFreq(&myPulse, myFreq);
  75:MyProj.cpp    ****             //note that since we defined mySample above, we don't put "float" here
  76:MyProj.cpp    ****             mySample = tPBPulse_tick(&myPulse);
  77:MyProj.cpp    ****             hw.led1.Set(0.0f, 1.0f, 0.0f); //led1 green
  78:MyProj.cpp    ****         }
  79:MyProj.cpp    ****         else if (whichWaveform == 3)
 279              		.loc 13 79 14 view .LVU67
 280 0048 032B     		cmp	r3, #3
 281 004a 5CD0     		beq	.L21
 282              	.LVL9:
 283              	.L9:
  80:MyProj.cpp    ****         {
  81:MyProj.cpp    ****              //triangle wave
  82:MyProj.cpp    ****             tPBTriangle_setFreq(&myTriangle, myFreq);
  83:MyProj.cpp    ****             //note that since we defined mySample above, we don't put "float" here
  84:MyProj.cpp    ****             mySample = tPBTriangle_tick(&myTriangle);
  85:MyProj.cpp    ****             hw.led1.Set(0.0f, 0.0f, 1.0f); //led1 blue
  86:MyProj.cpp    ****         }
  87:MyProj.cpp    **** 
  88:MyProj.cpp    ****         //now set the audio outputs (left is [0] and right is [1] to be whatever value has been com
  89:MyProj.cpp    ****         out[0][i] = mySample;
 284              		.loc 13 89 9 is_stmt 1 discriminator 2 view .LVU68
  90:MyProj.cpp    ****         out[1][i] = mySample;
 285              		.loc 13 90 19 is_stmt 0 discriminator 2 view .LVU69
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 19


 286 004c D8E90003 		ldrd	r0, r3, [r8]
  89:MyProj.cpp    ****         out[1][i] = mySample;
 287              		.loc 13 89 19 discriminator 2 view .LVU70
 288 0050 00EB8400 		add	r0, r0, r4, lsl #2
 289              		.loc 13 90 19 discriminator 2 view .LVU71
 290 0054 03EB8403 		add	r3, r3, r4, lsl #2
 291              	.LBE293:
  47:MyProj.cpp    ****     {
 292              		.loc 13 47 5 discriminator 2 view .LVU72
 293 0058 0134     		adds	r4, r4, #1
 294              	.LVL10:
 295              	.LBB294:
  89:MyProj.cpp    ****         out[1][i] = mySample;
 296              		.loc 13 89 19 discriminator 2 view .LVU73
 297 005a 80ED008A 		vstr.32	s16, [r0]
 298              		.loc 13 90 9 is_stmt 1 discriminator 2 view .LVU74
 299              	.LBE294:
  47:MyProj.cpp    ****     {
 300              		.loc 13 47 26 is_stmt 0 discriminator 2 view .LVU75
 301 005e A542     		cmp	r5, r4
 302              	.LBB295:
 303              		.loc 13 90 19 discriminator 2 view .LVU76
 304 0060 83ED008A 		vstr.32	s16, [r3]
 305              	.LBE295:
  47:MyProj.cpp    ****     {
 306              		.loc 13 47 5 is_stmt 1 discriminator 2 view .LVU77
 307              	.LVL11:
  47:MyProj.cpp    ****     {
 308              		.loc 13 47 26 discriminator 2 view .LVU78
 309 0064 37D0     		beq	.L6
 310              	.LVL12:
 311              	.L12:
 312              	.LBB296:
  50:MyProj.cpp    **** 
 313              		.loc 13 50 9 view .LVU79
  52:MyProj.cpp    ****         
 314              		.loc 13 52 9 view .LVU80
  52:MyProj.cpp    ****         
 315              		.loc 13 52 40 is_stmt 0 view .LVU81
 316 0066 0121     		movs	r1, #1
 317 0068 3148     		ldr	r0, .L22
 318 006a FFF7FEFF 		bl	_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
 319              	.LVL13:
  63:MyProj.cpp    ****         {
 320              		.loc 13 63 14 is_stmt 1 view .LVU82
  71:MyProj.cpp    ****         {
 321              		.loc 13 71 14 view .LVU83
  79:MyProj.cpp    ****         {
 322              		.loc 13 79 14 view .LVU84
  52:MyProj.cpp    ****         
 323              		.loc 13 52 52 is_stmt 0 view .LVU85
 324 006e DFED367A 		vldr.32	s15, .L22+24
 325 0072 20EE270A 		vmul.f32	s0, s0, s15
  52:MyProj.cpp    ****         
 326              		.loc 13 52 23 view .LVU86
 327 0076 FDEEC07A 		vcvt.s32.f32	s15, s0
 328 007a 17EE903A 		vmov	r3, s15	@ int
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 20


 329 007e C6ED007A 		vstr.32	s15, [r6]	@ int
  54:MyProj.cpp    ****         {
 330              		.loc 13 54 9 is_stmt 1 view .LVU87
 331 0082 002B     		cmp	r3, #0
 332 0084 DAD1     		bne	.L8
  57:MyProj.cpp    ****             //note that since we defined mySample above, we don't put "float" here
 333              		.loc 13 57 13 view .LVU88
  57:MyProj.cpp    ****             //note that since we defined mySample above, we don't put "float" here
 334              		.loc 13 57 27 is_stmt 0 view .LVU89
 335 0086 97ED000A 		vldr.32	s0, [r7]
 336 008a 3048     		ldr	r0, .L22+28
 337 008c FFF7FEFF 		bl	tCycle_setFreq
 338              	.LVL14:
  59:MyProj.cpp    ****             //we can also set the LED stuff here if we want
 339              		.loc 13 59 13 is_stmt 1 view .LVU90
  59:MyProj.cpp    ****             //we can also set the LED stuff here if we want
 340              		.loc 13 59 35 is_stmt 0 view .LVU91
 341 0090 2E48     		ldr	r0, .L22+28
 342 0092 FFF7FEFF 		bl	tCycle_tick
 343              	.LVL15:
  61:MyProj.cpp    ****         }
 344              		.loc 13 61 24 view .LVU92
 345 0096 B7EE001A 		vmov.f32	s2, #1.0e+0
  59:MyProj.cpp    ****             //we can also set the LED stuff here if we want
 346              		.loc 13 59 35 view .LVU93
 347 009a B0EE408A 		vmov.f32	s16, s0
 348              	.LVL16:
  61:MyProj.cpp    ****         }
 349              		.loc 13 61 13 is_stmt 1 view .LVU94
  61:MyProj.cpp    ****         }
 350              		.loc 13 61 24 is_stmt 0 view .LVU95
 351 009e 2C48     		ldr	r0, .L22+32
 352 00a0 F0EE410A 		vmov.f32	s1, s2
 353 00a4 B0EE410A 		vmov.f32	s0, s2
 354              	.LVL17:
  61:MyProj.cpp    ****         }
 355              		.loc 13 61 24 view .LVU96
 356 00a8 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 357              	.LVL18:
 358 00ac CEE7     		b	.L9
 359              	.LVL19:
 360              	.L19:
  66:MyProj.cpp    ****             //note that since we defined mySample above, we don't put "float" here
 361              		.loc 13 66 13 is_stmt 1 view .LVU97
  66:MyProj.cpp    ****             //note that since we defined mySample above, we don't put "float" here
 362              		.loc 13 66 27 is_stmt 0 view .LVU98
 363 00ae 97ED000A 		vldr.32	s0, [r7]
 364 00b2 2848     		ldr	r0, .L22+36
 365 00b4 FFF7FEFF 		bl	tPBSaw_setFreq
 366              	.LVL20:
  68:MyProj.cpp    ****             hw.led1.Set(1.0f, 0.0f, 0.0f); //led1 red
 367              		.loc 13 68 13 is_stmt 1 view .LVU99
  68:MyProj.cpp    ****             hw.led1.Set(1.0f, 0.0f, 0.0f); //led1 red
 368              		.loc 13 68 35 is_stmt 0 view .LVU100
 369 00b8 2648     		ldr	r0, .L22+36
 370 00ba FFF7FEFF 		bl	tPBSaw_tick
 371              	.LVL21:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 21


  69:MyProj.cpp    ****         }
 372              		.loc 13 69 24 view .LVU101
 373 00be 9FED211A 		vldr.32	s2, .L22+20
  68:MyProj.cpp    ****             hw.led1.Set(1.0f, 0.0f, 0.0f); //led1 red
 374              		.loc 13 68 35 view .LVU102
 375 00c2 B0EE408A 		vmov.f32	s16, s0
  69:MyProj.cpp    ****         }
 376              		.loc 13 69 24 view .LVU103
 377 00c6 2248     		ldr	r0, .L22+32
 378              	.LVL22:
  69:MyProj.cpp    ****         }
 379              		.loc 13 69 13 is_stmt 1 view .LVU104
  69:MyProj.cpp    ****         }
 380              		.loc 13 69 24 is_stmt 0 view .LVU105
 381 00c8 B7EE000A 		vmov.f32	s0, #1.0e+0
 382              	.LVL23:
  69:MyProj.cpp    ****         }
 383              		.loc 13 69 24 view .LVU106
 384 00cc F0EE410A 		vmov.f32	s1, s2
 385 00d0 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 386              	.LVL24:
 387 00d4 BAE7     		b	.L9
 388              	.LVL25:
 389              	.L6:
  69:MyProj.cpp    ****         }
 390              		.loc 13 69 24 view .LVU107
 391              	.LBE296:
 392              	.LBE292:
  91:MyProj.cpp    ****     }
  92:MyProj.cpp    **** }
 393              		.loc 13 92 1 view .LVU108
 394 00d6 BDEC028B 		vldm	sp!, {d8}
 395              		.cfi_remember_state
 396              		.cfi_restore 80
 397              		.cfi_restore 81
 398              		.cfi_def_cfa_offset 24
 399 00da BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 400              	.LVL26:
 401              	.L20:
 402              		.cfi_restore_state
 403              	.LBB298:
 404              	.LBB297:
  74:MyProj.cpp    ****             //note that since we defined mySample above, we don't put "float" here
 405              		.loc 13 74 13 is_stmt 1 view .LVU109
  74:MyProj.cpp    ****             //note that since we defined mySample above, we don't put "float" here
 406              		.loc 13 74 29 is_stmt 0 view .LVU110
 407 00de 97ED000A 		vldr.32	s0, [r7]
 408 00e2 1D48     		ldr	r0, .L22+40
 409 00e4 FFF7FEFF 		bl	tPBPulse_setFreq
 410              	.LVL27:
  76:MyProj.cpp    ****             hw.led1.Set(0.0f, 1.0f, 0.0f); //led1 green
 411              		.loc 13 76 13 is_stmt 1 view .LVU111
  76:MyProj.cpp    ****             hw.led1.Set(0.0f, 1.0f, 0.0f); //led1 green
 412              		.loc 13 76 37 is_stmt 0 view .LVU112
 413 00e8 1B48     		ldr	r0, .L22+40
 414 00ea FFF7FEFF 		bl	tPBPulse_tick
 415              	.LVL28:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 22


  77:MyProj.cpp    ****         }
 416              		.loc 13 77 24 view .LVU113
 417 00ee 9FED151A 		vldr.32	s2, .L22+20
  76:MyProj.cpp    ****             hw.led1.Set(0.0f, 1.0f, 0.0f); //led1 green
 418              		.loc 13 76 37 view .LVU114
 419 00f2 B0EE408A 		vmov.f32	s16, s0
 420              	.LVL29:
  77:MyProj.cpp    ****         }
 421              		.loc 13 77 13 is_stmt 1 view .LVU115
  77:MyProj.cpp    ****         }
 422              		.loc 13 77 24 is_stmt 0 view .LVU116
 423 00f6 1648     		ldr	r0, .L22+32
 424 00f8 F7EE000A 		vmov.f32	s1, #1.0e+0
 425 00fc B0EE410A 		vmov.f32	s0, s2
 426              	.LVL30:
  77:MyProj.cpp    ****         }
 427              		.loc 13 77 24 view .LVU117
 428 0100 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 429              	.LVL31:
 430 0104 A2E7     		b	.L9
 431              	.LVL32:
 432              	.L21:
  82:MyProj.cpp    ****             //note that since we defined mySample above, we don't put "float" here
 433              		.loc 13 82 13 is_stmt 1 view .LVU118
  82:MyProj.cpp    ****             //note that since we defined mySample above, we don't put "float" here
 434              		.loc 13 82 32 is_stmt 0 view .LVU119
 435 0106 97ED000A 		vldr.32	s0, [r7]
 436 010a 1448     		ldr	r0, .L22+44
 437 010c FFF7FEFF 		bl	tPBTriangle_setFreq
 438              	.LVL33:
  84:MyProj.cpp    ****             hw.led1.Set(0.0f, 0.0f, 1.0f); //led1 blue
 439              		.loc 13 84 13 is_stmt 1 view .LVU120
  84:MyProj.cpp    ****             hw.led1.Set(0.0f, 0.0f, 1.0f); //led1 blue
 440              		.loc 13 84 40 is_stmt 0 view .LVU121
 441 0110 1248     		ldr	r0, .L22+44
 442 0112 FFF7FEFF 		bl	tPBTriangle_tick
 443              	.LVL34:
  85:MyProj.cpp    ****         }
 444              		.loc 13 85 24 view .LVU122
 445 0116 DFED0B0A 		vldr.32	s1, .L22+20
  84:MyProj.cpp    ****             hw.led1.Set(0.0f, 0.0f, 1.0f); //led1 blue
 446              		.loc 13 84 40 view .LVU123
 447 011a B0EE408A 		vmov.f32	s16, s0
 448              	.LVL35:
  85:MyProj.cpp    ****         }
 449              		.loc 13 85 13 is_stmt 1 view .LVU124
  85:MyProj.cpp    ****         }
 450              		.loc 13 85 24 is_stmt 0 view .LVU125
 451 011e 0C48     		ldr	r0, .L22+32
 452 0120 B7EE001A 		vmov.f32	s2, #1.0e+0
 453 0124 B0EE600A 		vmov.f32	s0, s1
 454              	.LVL36:
  85:MyProj.cpp    ****         }
 455              		.loc 13 85 24 view .LVU126
 456 0128 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 457              	.LVL37:
 458 012c 8EE7     		b	.L9
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 23


 459              	.L23:
 460 012e 00BF     		.align	2
 461              	.L22:
 462 0130 00000000 		.word	hw
 463 0134 00000000 		.word	.LANCHOR0
 464 0138 00002544 		.word	1143275520
 465 013c 00005C43 		.word	1130102784
 466 0140 00000000 		.word	.LANCHOR1
 467 0144 00000000 		.word	0
 468 0148 9EEF7F40 		.word	1082126238
 469 014c 00000000 		.word	.LANCHOR2
 470 0150 D4000000 		.word	hw+212
 471 0154 00000000 		.word	.LANCHOR3
 472 0158 00000000 		.word	.LANCHOR4
 473 015c 00000000 		.word	.LANCHOR5
 474              	.LBE297:
 475              	.LBE298:
 476              		.cfi_endproc
 477              	.LFE2542:
 479              		.section	.text.startup.main,"ax",%progbits
 480              		.align	1
 481              		.p2align 2,,3
 482              		.global	main
 483              		.syntax unified
 484              		.thumb
 485              		.thumb_func
 487              	main:
 488              	.LFB2543:
  93:MyProj.cpp    **** 
  94:MyProj.cpp    **** int main(void)
  95:MyProj.cpp    **** {
 489              		.loc 13 95 1 is_stmt 1 view -0
 490              		.cfi_startproc
 491              		@ Volatile: function does not return.
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 0, uses_anonymous_args = 0
  96:MyProj.cpp    ****     hw.Init();
 494              		.loc 13 96 5 view .LVU128
  95:MyProj.cpp    ****     hw.Init();
 495              		.loc 13 95 1 is_stmt 0 view .LVU129
 496 0000 08B5     		push	{r3, lr}
 497              		.cfi_def_cfa_offset 8
 498              		.cfi_offset 3, -8
 499              		.cfi_offset 14, -4
 500              		.loc 13 96 12 view .LVU130
 501 0002 0021     		movs	r1, #0
 502 0004 1848     		ldr	r0, .L27
 503 0006 FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
 504              	.LVL38:
  97:MyProj.cpp    ****     hw.SetAudioBlockSize(4); // number of samples handled per callback
 505              		.loc 13 97 5 is_stmt 1 view .LVU131
 506              		.loc 13 97 25 is_stmt 0 view .LVU132
 507 000a 0421     		movs	r1, #4
 508 000c 1648     		ldr	r0, .L27
 509 000e FFF7FEFF 		bl	_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
 510              	.LVL39:
  98:MyProj.cpp    ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 24


 511              		.loc 13 98 5 is_stmt 1 view .LVU133
 512              		.loc 13 98 26 is_stmt 0 view .LVU134
 513 0012 0321     		movs	r1, #3
 514 0014 1448     		ldr	r0, .L27
 515 0016 FFF7FEFF 		bl	_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 516              	.LVL40:
  99:MyProj.cpp    ****     Random::Init();
 517              		.loc 13 99 5 is_stmt 1 view .LVU135
 518              		.loc 13 99 17 is_stmt 0 view .LVU136
 519 001a FFF7FEFF 		bl	_ZN5daisy6Random4InitEv
 520              	.LVL41:
 100:MyProj.cpp    ****     hw.StartAdc();
 521              		.loc 13 100 5 is_stmt 1 view .LVU137
 522              		.loc 13 100 16 is_stmt 0 view .LVU138
 523 001e 1248     		ldr	r0, .L27
 524 0020 FFF7FEFF 		bl	_ZN5daisy8DaisyPod8StartAdcEv
 525              	.LVL42:
 101:MyProj.cpp    ****     hw.StartAudio(AudioCallback);
 526              		.loc 13 101 5 is_stmt 1 view .LVU139
 527              		.loc 13 101 18 is_stmt 0 view .LVU140
 528 0024 1149     		ldr	r1, .L27+4
 529 0026 1048     		ldr	r0, .L27
 530 0028 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
 531              	.LVL43:
 102:MyProj.cpp    ****     LEAF_init(&leaf, 48000, leafMemory, 65535, randomNumber);
 532              		.loc 13 102 5 is_stmt 1 view .LVU141
 533              		.loc 13 102 14 is_stmt 0 view .LVU142
 534 002c 104B     		ldr	r3, .L27+8
 535 002e 4FF6FF72 		movw	r2, #65535
 536 0032 9FED100A 		vldr.32	s0, .L27+12
 537 0036 1049     		ldr	r1, .L27+16
 538 0038 1048     		ldr	r0, .L27+20
 539 003a FFF7FEFF 		bl	LEAF_init
 540              	.LVL44:
 103:MyProj.cpp    ****     //need to initialize all of the oscillators
 104:MyProj.cpp    ****     tCycle_init(&mySine, &leaf);
 541              		.loc 13 104 5 is_stmt 1 view .LVU143
 542              		.loc 13 104 16 is_stmt 0 view .LVU144
 543 003e 0F49     		ldr	r1, .L27+20
 544 0040 0F48     		ldr	r0, .L27+24
 545 0042 FFF7FEFF 		bl	tCycle_init
 546              	.LVL45:
 105:MyProj.cpp    ****     tPBSaw_init(&mySaw, &leaf);
 547              		.loc 13 105 5 is_stmt 1 view .LVU145
 548              		.loc 13 105 16 is_stmt 0 view .LVU146
 549 0046 0D49     		ldr	r1, .L27+20
 550 0048 0E48     		ldr	r0, .L27+28
 551 004a FFF7FEFF 		bl	tPBSaw_init
 552              	.LVL46:
 106:MyProj.cpp    ****     tPBPulse_init(&myPulse, &leaf);
 553              		.loc 13 106 5 is_stmt 1 view .LVU147
 554              		.loc 13 106 18 is_stmt 0 view .LVU148
 555 004e 0B49     		ldr	r1, .L27+20
 556 0050 0D48     		ldr	r0, .L27+32
 557 0052 FFF7FEFF 		bl	tPBPulse_init
 558              	.LVL47:
 107:MyProj.cpp    ****     tPBTriangle_init(&myTriangle, &leaf);
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 25


 559              		.loc 13 107 5 is_stmt 1 view .LVU149
 560              		.loc 13 107 21 is_stmt 0 view .LVU150
 561 0056 0949     		ldr	r1, .L27+20
 562 0058 0C48     		ldr	r0, .L27+36
 563 005a FFF7FEFF 		bl	tPBTriangle_init
 564              	.LVL48:
 565              	.L25:
 108:MyProj.cpp    ****    
 109:MyProj.cpp    ****     //blink that light! this endless while loop will be interrupted by the audio callback when the 
 110:MyProj.cpp    ****     while(1) {
 566              		.loc 13 110 5 is_stmt 1 discriminator 1 view .LVU151
 111:MyProj.cpp    ****         //you need to call this here to use the RGB LEDs on the pod.
 112:MyProj.cpp    ****         hw.UpdateLeds();
 567              		.loc 13 112 9 discriminator 1 view .LVU152
 568              		.loc 13 112 22 is_stmt 0 discriminator 1 view .LVU153
 569 005e 0248     		ldr	r0, .L27
 570 0060 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
 571              	.LVL49:
 110:MyProj.cpp    ****         //you need to call this here to use the RGB LEDs on the pod.
 572              		.loc 13 110 5 is_stmt 1 discriminator 1 view .LVU154
 573 0064 FBE7     		b	.L25
 574              	.L28:
 575 0066 00BF     		.align	2
 576              	.L27:
 577 0068 00000000 		.word	hw
 578 006c 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 579 0070 00000000 		.word	_Z12randomNumberv
 580 0074 00803B47 		.word	1195081728
 581 0078 00000000 		.word	leafMemory
 582 007c 00000000 		.word	.LANCHOR6
 583 0080 00000000 		.word	.LANCHOR2
 584 0084 00000000 		.word	.LANCHOR3
 585 0088 00000000 		.word	.LANCHOR4
 586 008c 00000000 		.word	.LANCHOR5
 587              		.cfi_endproc
 588              	.LFE2543:
 590              		.section	.text.startup._GLOBAL__sub_I_leaf,"ax",%progbits
 591              		.align	1
 592              		.p2align 2,,3
 593              		.syntax unified
 594              		.thumb
 595              		.thumb_func
 597              	_GLOBAL__sub_I_leaf:
 598              	.LFB2571:
 113:MyProj.cpp    ****     }
 114:MyProj.cpp    **** }
 599              		.loc 13 114 1 view -0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              	.LBB364:
 604              	.LBI364:
 605              		.loc 13 114 1 view .LVU156
 606              	.LVL50:
 607              	.LBB365:
 608              	.LBB366:
 609              	.LBI366:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 26


  35:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
 610              		.loc 1 35 5 view .LVU157
 611              	.LBB367:
 612              	.LBB368:
 613              	.LBI368:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 614              		.loc 8 21 5 view .LVU158
 615              	.LBB369:
 616              	.LBB370:
 617              	.LBI370:
 618              		.file 14 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 27


  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 28


 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 29


 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 619              		.loc 14 166 5 view .LVU159
 620              	.LBB371:
 621              	.LBB372:
 622              		.loc 14 166 34 is_stmt 0 view .LVU160
 623 0000 1348     		ldr	r0, .L31
 624 0002 0022     		movs	r2, #0
 625              	.LBE372:
 626              	.LBE371:
 627              	.LBE370:
 628              	.LBE369:
 629              	.LBE368:
 630              	.LBB388:
 631              	.LBB389:
 632              	.LBB390:
 633              	.LBB391:
 634              	.LBB392:
 635              	.LBB393:
 636              	.LBB394:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 637              		.loc 2 37 20 view .LVU161
 638 0004 1349     		ldr	r1, .L31+4
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 639              		.loc 2 36 20 view .LVU162
 640 0006 00F51043 		add	r3, r0, #36864
  38:../../libDaisy//src/hid/midi.h ****         }
 641              		.loc 2 38 20 view .LVU163
 642 000a B1F804C0 		ldrh	ip, [r1, #4]
 643              	.LBE394:
 644              	.LBE393:
 645              	.LBE392:
 646              	.LBE391:
 647              	.LBE390:
 648              	.LBE389:
 649              	.LBE388:
 650              	.LBE367:
 651              	.LBE366:
 652              	.LBE365:
 653              	.LBE364:
 654              		.loc 13 114 1 view .LVU164
 655 000e 00B5     		push	{lr}
 656              		.cfi_def_cfa_offset 4
 657              		.cfi_offset 14, -4
 658              	.LBB449:
 659              	.LBB447:
 660              	.LBB446:
 661              	.LBB445:
 662              	.LBB423:
 663              	.LBB420:
 664              	.LBB417:
 665              	.LBB404:
 666              	.LBB401:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 30


 667              	.LBB398:
 668              	.LBB395:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 669              		.loc 2 37 20 view .LVU165
 670 0010 B1F800E0 		ldrh	lr, [r1]
 671              	.LBE395:
 672              	.LBE398:
 673              	.LBE401:
 674              	.LBE404:
 675              	.LBE417:
 676              	.LBE420:
 677              	.LBE423:
 678              	.LBB424:
 679              	.LBB386:
 680              	.LBB375:
 681              	.LBB374:
 682              	.LBB373:
 683              		.loc 14 166 34 view .LVU166
 684 0014 0260     		str	r2, [r0]
 685              	.LVL51:
 686              		.loc 14 166 34 view .LVU167
 687              	.LBE373:
 688              	.LBE374:
 689              	.LBE375:
 690              	.LBB376:
 691              	.LBI376:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 692              		.loc 12 95 5 is_stmt 1 view .LVU168
 693              	.LBE376:
 694              	.LBE386:
 695              	.LBE424:
 696              	.LBB425:
 697              	.LBB421:
 698              	.LBB418:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 699              		.loc 2 84 19 is_stmt 0 view .LVU169
 700 0016 1049     		ldr	r1, .L31+8
 701              	.LBE418:
 702              	.LBE421:
 703              	.LBE425:
 704              	.LBB426:
 705              	.LBB387:
 706              	.LBB379:
 707              	.LBB377:
 708              	.LBB378:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 709              		.loc 12 95 35 view .LVU170
 710 0018 4261     		str	r2, [r0, #20]
 711              	.LVL52:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 712              		.loc 12 95 35 view .LVU171
 713              	.LBE378:
 714              	.LBE377:
 715              	.LBE379:
 716              	.LBB380:
 717              	.LBI380:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 31


 718              		.loc 11 92 5 is_stmt 1 view .LVU172
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 719              		.loc 11 92 5 is_stmt 0 view .LVU173
 720              	.LBE380:
 721              	.LBB381:
 722              	.LBI381:
 723              		.file 15 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 32


  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 724              		.loc 15 84 5 is_stmt 1 view .LVU174
 725              	.LBB382:
 726              	.LBB383:
 727              		.loc 15 84 33 is_stmt 0 view .LVU175
 728 001a 0262     		str	r2, [r0, #32]
 729              	.LVL53:
 730              		.loc 15 84 33 view .LVU176
 731              	.LBE383:
 732              	.LBE382:
 733              	.LBE381:
 734              	.LBB384:
 735              	.LBI384:
  40:../../libDaisy//src/hid/usb.h **** 
 736              		.loc 10 40 5 is_stmt 1 view .LVU177
  40:../../libDaisy//src/hid/usb.h **** 
 737              		.loc 10 40 5 is_stmt 0 view .LVU178
 738              	.LBE384:
 739              	.LBB385:
 740              	.LBI385:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 741              		.loc 9 77 5 is_stmt 1 view .LVU179
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 742              		.loc 9 77 5 is_stmt 0 view .LVU180
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 33


 743              	.LBE385:
 744              	.LBE387:
 745              	.LBE426:
 746              	.LBB427:
 747              	.LBI427:
  20:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 748              		.loc 7 20 5 is_stmt 1 view .LVU181
 749              	.LBB428:
 750              	.LBB429:
 751              	.LBI429:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 752              		.loc 5 41 5 view .LVU182
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 753              		.loc 5 41 5 is_stmt 0 view .LVU183
 754              	.LBE429:
 755              	.LBE428:
 756              	.LBE427:
 757              	.LBB430:
 758              	.LBI430:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 759              		.loc 6 21 5 is_stmt 1 view .LVU184
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 760              		.loc 6 21 5 is_stmt 0 view .LVU185
 761              	.LBE430:
 762              	.LBB431:
 763              	.LBI431:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 764              		.loc 6 21 5 is_stmt 1 view .LVU186
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 765              		.loc 6 21 5 is_stmt 0 view .LVU187
 766              	.LBE431:
 767              	.LBB432:
 768              	.LBI432:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 769              		.loc 5 41 5 is_stmt 1 view .LVU188
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 770              		.loc 5 41 5 is_stmt 0 view .LVU189
 771              	.LBE432:
 772              	.LBB433:
 773              	.LBI433:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 774              		.loc 5 41 5 is_stmt 1 view .LVU190
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 775              		.loc 5 41 5 is_stmt 0 view .LVU191
 776              	.LBE433:
 777              	.LBB434:
 778              	.LBI434:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 779              		.loc 3 17 5 is_stmt 1 view .LVU192
 780              	.LBB435:
 781              	.LBB436:
 782              	.LBI436:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 783              		.loc 4 24 5 view .LVU193
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 784              		.loc 4 24 5 is_stmt 0 view .LVU194
 785              	.LBE436:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 34


 786              	.LBB437:
 787              	.LBI437:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 788              		.loc 4 24 5 is_stmt 1 view .LVU195
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 789              		.loc 4 24 5 is_stmt 0 view .LVU196
 790              	.LBE437:
 791              	.LBB438:
 792              	.LBI438:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 793              		.loc 4 24 5 is_stmt 1 view .LVU197
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 794              		.loc 4 24 5 is_stmt 0 view .LVU198
 795              	.LBE438:
 796              	.LBE435:
 797              	.LBE434:
 798              	.LBB439:
 799              	.LBI439:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 800              		.loc 3 17 5 is_stmt 1 view .LVU199
 801              	.LBB440:
 802              	.LBB441:
 803              	.LBI441:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 804              		.loc 4 24 5 view .LVU200
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 805              		.loc 4 24 5 is_stmt 0 view .LVU201
 806              	.LBE441:
 807              	.LBB442:
 808              	.LBI442:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 809              		.loc 4 24 5 is_stmt 1 view .LVU202
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 810              		.loc 4 24 5 is_stmt 0 view .LVU203
 811              	.LBE442:
 812              	.LBB443:
 813              	.LBI443:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 814              		.loc 4 24 5 is_stmt 1 view .LVU204
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 815              		.loc 4 24 5 is_stmt 0 view .LVU205
 816              	.LBE443:
 817              	.LBE440:
 818              	.LBE439:
 819              	.LBB444:
 820              	.LBI388:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 821              		.loc 2 84 5 is_stmt 1 view .LVU206
 822              	.LBB422:
 823              	.LBB419:
 824              	.LBB405:
 825              	.LBI405:
 826              		.file 16 "../../libDaisy//src/per/uart.h"
   1:../../libDaisy//src/per/uart.h **** /* 
   2:../../libDaisy//src/per/uart.h **** TODO
   3:../../libDaisy//src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libDaisy//src/per/uart.h **** - Transmit function improvements.
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 35


   5:../../libDaisy//src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libDaisy//src/per/uart.h **** */
   7:../../libDaisy//src/per/uart.h **** 
   8:../../libDaisy//src/per/uart.h **** #pragma once
   9:../../libDaisy//src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libDaisy//src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libDaisy//src/per/uart.h **** #include "daisy_core.h"
  12:../../libDaisy//src/per/uart.h **** 
  13:../../libDaisy//src/per/uart.h **** 
  14:../../libDaisy//src/per/uart.h **** namespace daisy
  15:../../libDaisy//src/per/uart.h **** {
  16:../../libDaisy//src/per/uart.h **** /** @addtogroup serial
  17:../../libDaisy//src/per/uart.h ****     @{
  18:../../libDaisy//src/per/uart.h ****     */
  19:../../libDaisy//src/per/uart.h **** 
  20:../../libDaisy//src/per/uart.h **** /** 
  21:../../libDaisy//src/per/uart.h ****     Uart Peripheral
  22:../../libDaisy//src/per/uart.h ****     @author shensley
  23:../../libDaisy//src/per/uart.h ****     @date March 2020
  24:../../libDaisy//src/per/uart.h ****     */
  25:../../libDaisy//src/per/uart.h **** class UartHandler
  26:../../libDaisy//src/per/uart.h **** {
  27:../../libDaisy//src/per/uart.h ****   public:
  28:../../libDaisy//src/per/uart.h ****     struct Config
  29:../../libDaisy//src/per/uart.h ****     {
  30:../../libDaisy//src/per/uart.h ****         enum class Peripheral
  31:../../libDaisy//src/per/uart.h ****         {
  32:../../libDaisy//src/per/uart.h ****             USART_1,
  33:../../libDaisy//src/per/uart.h ****             USART_2,
  34:../../libDaisy//src/per/uart.h ****             USART_3,
  35:../../libDaisy//src/per/uart.h ****             UART_4,
  36:../../libDaisy//src/per/uart.h ****             UART_5,
  37:../../libDaisy//src/per/uart.h ****             USART_6,
  38:../../libDaisy//src/per/uart.h ****             UART_7,
  39:../../libDaisy//src/per/uart.h ****             UART_8,
  40:../../libDaisy//src/per/uart.h ****             LPUART_1,
  41:../../libDaisy//src/per/uart.h ****         };
  42:../../libDaisy//src/per/uart.h **** 
  43:../../libDaisy//src/per/uart.h ****         enum class StopBits
  44:../../libDaisy//src/per/uart.h ****         {
  45:../../libDaisy//src/per/uart.h ****             BITS_0_5,
  46:../../libDaisy//src/per/uart.h ****             BITS_1,
  47:../../libDaisy//src/per/uart.h ****             BITS_1_5,
  48:../../libDaisy//src/per/uart.h ****             BITS_2,
  49:../../libDaisy//src/per/uart.h ****         };
  50:../../libDaisy//src/per/uart.h **** 
  51:../../libDaisy//src/per/uart.h ****         enum class Parity
  52:../../libDaisy//src/per/uart.h ****         {
  53:../../libDaisy//src/per/uart.h ****             NONE,
  54:../../libDaisy//src/per/uart.h ****             EVEN,
  55:../../libDaisy//src/per/uart.h ****             ODD,
  56:../../libDaisy//src/per/uart.h ****         };
  57:../../libDaisy//src/per/uart.h **** 
  58:../../libDaisy//src/per/uart.h ****         enum class Mode
  59:../../libDaisy//src/per/uart.h ****         {
  60:../../libDaisy//src/per/uart.h ****             RX,
  61:../../libDaisy//src/per/uart.h ****             TX,
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 36


  62:../../libDaisy//src/per/uart.h ****             TX_RX,
  63:../../libDaisy//src/per/uart.h ****         };
  64:../../libDaisy//src/per/uart.h **** 
  65:../../libDaisy//src/per/uart.h ****         enum class WordLength
  66:../../libDaisy//src/per/uart.h ****         {
  67:../../libDaisy//src/per/uart.h ****             BITS_7,
  68:../../libDaisy//src/per/uart.h ****             BITS_8,
  69:../../libDaisy//src/per/uart.h ****             BITS_9,
  70:../../libDaisy//src/per/uart.h ****         };
  71:../../libDaisy//src/per/uart.h **** 
  72:../../libDaisy//src/per/uart.h ****         struct
  73:../../libDaisy//src/per/uart.h ****         {
  74:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libDaisy//src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libDaisy//src/per/uart.h **** 
  78:../../libDaisy//src/per/uart.h ****         Config()
  79:../../libDaisy//src/per/uart.h ****         {
  80:../../libDaisy//src/per/uart.h ****             // user must init periph, pin_config, and mode
  81:../../libDaisy//src/per/uart.h ****             stopbits   = StopBits::BITS_1;
  82:../../libDaisy//src/per/uart.h ****             parity     = Parity::NONE;
  83:../../libDaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
  84:../../libDaisy//src/per/uart.h ****             baudrate   = 4800;
  85:../../libDaisy//src/per/uart.h ****             // baudrate   = 31250;
  86:../../libDaisy//src/per/uart.h ****         }
  87:../../libDaisy//src/per/uart.h **** 
  88:../../libDaisy//src/per/uart.h ****         Peripheral periph;
  89:../../libDaisy//src/per/uart.h ****         StopBits   stopbits;
  90:../../libDaisy//src/per/uart.h ****         Parity     parity;
  91:../../libDaisy//src/per/uart.h ****         Mode       mode;
  92:../../libDaisy//src/per/uart.h ****         WordLength wordlength;
  93:../../libDaisy//src/per/uart.h ****         uint32_t   baudrate;
  94:../../libDaisy//src/per/uart.h ****     };
  95:../../libDaisy//src/per/uart.h **** 
  96:../../libDaisy//src/per/uart.h **** 
  97:../../libDaisy//src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 827              		.loc 16 97 5 view .LVU207
 828              	.LBB406:
 829              	.LBB407:
 830              		.loc 16 97 35 is_stmt 0 view .LVU208
 831 001c C0F87C21 		str	r2, [r0, #380]
 832              	.LVL54:
 833              		.loc 16 97 35 view .LVU209
 834              	.LBE407:
 835              	.LBE406:
 836              	.LBE405:
 837              	.LBB408:
 838              	.LBI408:
 839              		.file 17 "../../libDaisy//src/util/ringbuffer.h"
   1:../../libDaisy//src/util/ringbuffer.h **** #pragma once
   2:../../libDaisy//src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libDaisy//src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libDaisy//src/util/ringbuffer.h **** 
   5:../../libDaisy//src/util/ringbuffer.h **** #include <algorithm>
   6:../../libDaisy//src/util/ringbuffer.h **** 
   7:../../libDaisy//src/util/ringbuffer.h **** namespace daisy
   8:../../libDaisy//src/util/ringbuffer.h **** {
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 37


   9:../../libDaisy//src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libDaisy//src/util/ringbuffer.h ****     @{
  11:../../libDaisy//src/util/ringbuffer.h **** */
  12:../../libDaisy//src/util/ringbuffer.h **** 
  13:../../libDaisy//src/util/ringbuffer.h **** /**
  14:../../libDaisy//src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libDaisy//src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libDaisy//src/util/ringbuffer.h **** */
  17:../../libDaisy//src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libDaisy//src/util/ringbuffer.h **** class RingBuffer
  19:../../libDaisy//src/util/ringbuffer.h **** {
  20:../../libDaisy//src/util/ringbuffer.h ****   public:
  21:../../libDaisy//src/util/ringbuffer.h ****     RingBuffer() {}
 840              		.loc 17 21 5 is_stmt 1 view .LVU210
 841              		.loc 17 21 5 is_stmt 0 view .LVU211
 842              	.LBE408:
 843              	.LBB409:
 844              	.LBI391:
  86:../../libDaisy//src/hid/midi.h **** 
  87:../../libDaisy//src/hid/midi.h ****     struct Config
 845              		.loc 2 87 12 is_stmt 1 view .LVU212
 846              	.LBB402:
 847              	.LBI392:
  34:../../libDaisy//src/hid/midi.h ****         {
 848              		.loc 2 34 9 view .LVU213
 849              	.LBB399:
 850              	.LBB396:
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 851              		.loc 2 36 13 view .LVU214
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 852              		.loc 2 36 20 is_stmt 0 view .LVU215
 853 0020 C3F82422 		str	r2, [r3, #548]
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 854              		.loc 2 37 13 is_stmt 1 view .LVU216
  38:../../libDaisy//src/hid/midi.h ****         }
 855              		.loc 2 38 20 is_stmt 0 view .LVU217
 856 0024 A3F82AC2 		strh	ip, [r3, #554]	@ movhi
 857              	.LBE396:
 858              	.LBE399:
 859              	.LBE402:
 860              	.LBE409:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 861              		.loc 2 84 19 view .LVU218
 862 0028 4FF0070C 		mov	ip, #7
 863              	.LBB410:
 864              	.LBB411:
 865              	.LBB412:
 866              	.LBB413:
 867              		.loc 16 97 35 view .LVU219
 868 002c C3F82C22 		str	r2, [r3, #556]
 869              	.LBE413:
 870              	.LBE412:
 871              	.LBE411:
 872              	.LBE410:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 873              		.loc 2 84 19 view .LVU220
 874 0030 4FF60F02 		movw	r2, #63503
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 38


 875 0034 C3F83012 		str	r1, [r3, #560]
 876 0038 A3F83422 		strh	r2, [r3, #564]	@ movhi
 877 003c 83F836C2 		strb	ip, [r3, #566]
 878              	.LBB415:
 879              	.LBB403:
 880              	.LBB400:
 881              	.LBB397:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 882              		.loc 2 37 20 view .LVU221
 883 0040 A3F828E2 		strh	lr, [r3, #552]	@ movhi
  38:../../libDaisy//src/hid/midi.h ****         }
 884              		.loc 2 38 13 is_stmt 1 view .LVU222
 885              	.LVL55:
  38:../../libDaisy//src/hid/midi.h ****         }
 886              		.loc 2 38 13 is_stmt 0 view .LVU223
 887              	.LBE397:
 888              	.LBE400:
 889              	.LBE403:
 890              	.LBE415:
 891              	.LBB416:
 892              	.LBI410:
  25:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
 893              		.loc 2 25 5 is_stmt 1 view .LVU224
 894              	.LBB414:
 895              	.LBI411:
 896              		.loc 16 97 5 view .LVU225
 897              		.loc 16 97 5 is_stmt 0 view .LVU226
 898              	.LBE414:
 899              	.LBE416:
 900              	.LBE419:
 901              	.LBE422:
 902              	.LBE444:
 903              	.LBE445:
 904              	.LBE446:
   6:MyProj.cpp    **** tCycle mySine;
 905              		.loc 13 6 10 view .LVU227
 906 0044 054A     		ldr	r2, .L31+12
 907 0046 0649     		ldr	r1, .L31+16
 908              	.LBE447:
 909              	.LBE449:
 910              		.loc 13 114 1 view .LVU228
 911 0048 5DF804EB 		ldr	lr, [sp], #4
 912              		.cfi_restore 14
 913              		.cfi_def_cfa_offset 0
 914              	.LBB450:
 915              	.LBB448:
   6:MyProj.cpp    **** tCycle mySine;
 916              		.loc 13 6 10 view .LVU229
 917 004c FFF7FEBF 		b	__aeabi_atexit
 918              	.LVL56:
 919              	.L32:
 920              		.align	2
 921              	.L31:
 922 0050 00000000 		.word	hw
 923 0054 00000000 		.word	.LANCHOR7
 924 0058 80707FF0 		.word	-260083584
 925 005c 00000000 		.word	__dso_handle
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 39


 926 0060 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 927              	.LBE448:
 928              	.LBE450:
 929              		.cfi_endproc
 930              	.LFE2571:
 932              		.section	.init_array,"aw",%init_array
 933              		.align	2
 934 0000 00000000 		.word	_GLOBAL__sub_I_leaf(target1)
 935              		.global	whichWaveform
 936              		.global	myFreq
 937              		.global	myTriangle
 938              		.global	myPulse
 939              		.global	mySaw
 940              		.global	mySine
 941              		.global	hw
 942              		.global	leafMemory
 943              		.global	leaf
 944              		.section	.rodata
 945              		.align	2
 946              		.set	.LANCHOR7,. + 0
 947              	.LC0:
 948 0000 01       		.byte	1
 949 0001 07       		.byte	7
 950 0002 0000     		.space	2
 951              	.LC1:
 952 0004 01       		.byte	1
 953 0005 06       		.byte	6
 954              		.section	.bss.hw,"aw",%nobits
 955              		.align	2
 958              	hw:
 959 0000 00000000 		.space	37432
 959      00000000 
 959      00000000 
 959      00000000 
 959      00000000 
 960              		.section	.bss.leaf,"aw",%nobits
 961              		.align	2
 962              		.set	.LANCHOR6,. + 0
 965              	leaf:
 966 0000 00000000 		.space	80
 966      00000000 
 966      00000000 
 966      00000000 
 966      00000000 
 967              		.section	.bss.leafMemory,"aw",%nobits
 968              		.align	2
 971              	leafMemory:
 972 0000 00000000 		.space	65535
 972      00000000 
 972      00000000 
 972      00000000 
 972      00000000 
 973              		.section	.bss.myPulse,"aw",%nobits
 974              		.align	2
 975              		.set	.LANCHOR4,. + 0
 978              	myPulse:
 979 0000 00000000 		.space	4
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 40


 980              		.section	.bss.mySaw,"aw",%nobits
 981              		.align	2
 982              		.set	.LANCHOR3,. + 0
 985              	mySaw:
 986 0000 00000000 		.space	4
 987              		.section	.bss.mySine,"aw",%nobits
 988              		.align	2
 989              		.set	.LANCHOR2,. + 0
 992              	mySine:
 993 0000 00000000 		.space	4
 994              		.section	.bss.myTriangle,"aw",%nobits
 995              		.align	2
 996              		.set	.LANCHOR5,. + 0
 999              	myTriangle:
 1000 0000 00000000 		.space	4
 1001              		.section	.bss.whichWaveform,"aw",%nobits
 1002              		.align	2
 1003              		.set	.LANCHOR1,. + 0
 1006              	whichWaveform:
 1007 0000 00000000 		.space	4
 1008              		.section	.data.myFreq,"aw"
 1009              		.align	2
 1010              		.set	.LANCHOR0,. + 0
 1013              	myFreq:
 1014 0000 00005C43 		.word	1130102784
 1015              		.text
 1016              	.Letext0:
 1017              		.file 18 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 1018              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 1019              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 1020              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 1021              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 1022              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 1023              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 1024              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 1025              		.file 26 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 1026              		.file 27 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 1027              		.file 28 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 1028              		.file 29 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 1029              		.file 30 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 1030              		.file 31 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 1031              		.file 32 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 1032              		.file 33 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 1033              		.file 34 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 1034              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 1035              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 1036              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 1037              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 1038              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 1039              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 1040              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 1041              		.file 42 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 1042              		.file 43 "../../libDaisy//src/daisy_core.h"
 1043              		.file 44 "../../libDaisy//src/per/tim.h"
 1044              		.file 45 "../../libDaisy//src/per/sai.h"
 1045              		.file 46 "../../libDaisy//src/hid/MidiEvent.h"
 1046              		.file 47 "../../libDaisy//src/per/rng.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 41


 1047              		.file 48 "../../libDaisy//src/util/wav_format.h"
 1048              		.file 49 "../../libDaisy//src/util/color.h"
 1049              		.file 50 "../../libDaisy//src/dev/max11300.h"
 1050              		.file 51 "../../libDaisy//src/per/gpio.h"
 1051              		.file 52 "../../libDaisy//src/dev/sdram.h"
 1052              		.file 53 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 1053              		.file 54 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 1054              		.file 55 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 1055              		.file 56 "../../../LEAF/leaf/./Inc/leaf-mempool.h"
 1056              		.file 57 "../../../LEAF/leaf/./Inc/leaf-global.h"
 1057              		.file 58 "../../../LEAF/leaf/./Inc/leaf-oscillators.h"
 1058              		.file 59 "../../../LEAF/leaf/leaf.h"
 1059              		.file 60 "<built-in>"
 1060              		.file 61 "../../libDaisy//src/dev/sr_595.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MyProj.cpp
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:19     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD2Ev
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD1Ev
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:154    .text._Z12randomNumberv:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:161    .text._Z12randomNumberv:0000000000000000 _Z12randomNumberv
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:178    .text._Z12randomNumberv:000000000000000c $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:183    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:190    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:462    .text._Z13AudioCallbackPKPKfPPfj:0000000000000130 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:958    .bss.hw:0000000000000000 hw
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:480    .text.startup.main:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:487    .text.startup.main:0000000000000000 main
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:577    .text.startup.main:0000000000000068 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:971    .bss.leafMemory:0000000000000000 leafMemory
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:591    .text.startup._GLOBAL__sub_I_leaf:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:597    .text.startup._GLOBAL__sub_I_leaf:0000000000000000 _GLOBAL__sub_I_leaf
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:922    .text.startup._GLOBAL__sub_I_leaf:0000000000000050 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:933    .init_array:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:1006   .bss.whichWaveform:0000000000000000 whichWaveform
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:1013   .data.myFreq:0000000000000000 myFreq
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:999    .bss.myTriangle:0000000000000000 myTriangle
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:978    .bss.myPulse:0000000000000000 myPulse
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:985    .bss.mySaw:0000000000000000 mySaw
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:992    .bss.mySine:0000000000000000 mySine
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:965    .bss.leaf:0000000000000000 leaf
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:945    .rodata:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:955    .bss.hw:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:961    .bss.leaf:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:968    .bss.leafMemory:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:974    .bss.myPulse:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:981    .bss.mySaw:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:988    .bss.mySine:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:995    .bss.myTriangle:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:1002   .bss.whichWaveform:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s:1009   .data.myFreq:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy8DaisyPodD5Ev

UNDEFINED SYMBOLS
_ZN5daisy6Random8GetFloatEff
_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
_ZN5daisy8DaisyPod12GetKnobValueENS0_4KnobE
tCycle_setFreq
tCycle_tick
_ZN5daisy6RgbLed3SetEfff
tPBSaw_setFreq
tPBSaw_tick
tPBPulse_setFreq
tPBPulse_tick
tPBTriangle_setFreq
tPBTriangle_tick
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy6Random4InitEv
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//ccjANDQ5.s 			page 43


_ZN5daisy8DaisyPod8StartAdcEv
_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
LEAF_init
tCycle_init
tPBSaw_init
tPBPulse_init
tPBTriangle_init
_ZN5daisy8DaisyPod10UpdateLedsEv
__aeabi_atexit
__dso_handle
