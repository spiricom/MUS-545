ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"MyProj.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  19              		.align	1
  20              		.p2align 2,,3
  21              		.weak	_ZN5daisy8DaisyPodD2Ev
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN5daisy8DaisyPodD2Ev:
  27              	.LVL0:
  28              	.LFB2538:
  29              		.file 1 "../../libDaisy//src/daisy_pod.h"
   1:../../libDaisy//src/daisy_pod.h **** #pragma once
   2:../../libDaisy//src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../../libDaisy//src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../../libDaisy//src/daisy_pod.h **** 
   5:../../libDaisy//src/daisy_pod.h **** #include "daisy_seed.h"
   6:../../libDaisy//src/daisy_pod.h **** 
   7:../../libDaisy//src/daisy_pod.h **** namespace daisy
   8:../../libDaisy//src/daisy_pod.h **** {
   9:../../libDaisy//src/daisy_pod.h **** /**
  10:../../libDaisy//src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libDaisy//src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libDaisy//src/daisy_pod.h ****     @author Stephen Hensley
  13:../../libDaisy//src/daisy_pod.h ****     @date November 2019
  14:../../libDaisy//src/daisy_pod.h ****     @ingroup boards
  15:../../libDaisy//src/daisy_pod.h **** */
  16:../../libDaisy//src/daisy_pod.h **** class DaisyPod
  17:../../libDaisy//src/daisy_pod.h **** {
  18:../../libDaisy//src/daisy_pod.h ****   public:
  19:../../libDaisy//src/daisy_pod.h ****     /** Switches */
  20:../../libDaisy//src/daisy_pod.h ****     enum Sw
  21:../../libDaisy//src/daisy_pod.h ****     {
  22:../../libDaisy//src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../../libDaisy//src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../../libDaisy//src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../../libDaisy//src/daisy_pod.h ****     };
  26:../../libDaisy//src/daisy_pod.h **** 
  27:../../libDaisy//src/daisy_pod.h ****     /** Knobs */
  28:../../libDaisy//src/daisy_pod.h ****     enum Knob
  29:../../libDaisy//src/daisy_pod.h ****     {
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 2


  30:../../libDaisy//src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../../libDaisy//src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../../libDaisy//src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../../libDaisy//src/daisy_pod.h ****     };
  34:../../libDaisy//src/daisy_pod.h **** 
  35:../../libDaisy//src/daisy_pod.h ****     DaisyPod() {}
  36:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
  30              		.loc 1 36 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB275:
  36              	.LBI275:
  37              		.file 2 "../../libDaisy//src/hid/midi.h"
   1:../../libDaisy//src/hid/midi.h **** #pragma once
   2:../../libDaisy//src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libDaisy//src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libDaisy//src/hid/midi.h **** 
   5:../../libDaisy//src/hid/midi.h **** // TODO: make this adjustable
   6:../../libDaisy//src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libDaisy//src/hid/midi.h **** 
   8:../../libDaisy//src/hid/midi.h **** #include <stdint.h>
   9:../../libDaisy//src/hid/midi.h **** #include <stdlib.h>
  10:../../libDaisy//src/hid/midi.h **** #include "per/uart.h"
  11:../../libDaisy//src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libDaisy//src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libDaisy//src/hid/midi.h **** #include "hid/usb_midi.h"
  14:../../libDaisy//src/hid/midi.h **** #include "sys/system.h"
  15:../../libDaisy//src/hid/midi.h **** 
  16:../../libDaisy//src/hid/midi.h **** namespace daisy
  17:../../libDaisy//src/hid/midi.h **** {
  18:../../libDaisy//src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART 
  19:../../libDaisy//src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../../libDaisy//src/hid/midi.h ****  *  @ingroup midi
  21:../../libDaisy//src/hid/midi.h **** */
  22:../../libDaisy//src/hid/midi.h **** class MidiUartTransport
  23:../../libDaisy//src/hid/midi.h **** {
  24:../../libDaisy//src/hid/midi.h ****   public:
  25:../../libDaisy//src/hid/midi.h ****     MidiUartTransport() {}
  26:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
  27:../../libDaisy//src/hid/midi.h **** 
  28:../../libDaisy//src/hid/midi.h ****     struct Config
  29:../../libDaisy//src/hid/midi.h ****     {
  30:../../libDaisy//src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  31:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    rx;
  32:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    tx;
  33:../../libDaisy//src/hid/midi.h **** 
  34:../../libDaisy//src/hid/midi.h ****         Config()
  35:../../libDaisy//src/hid/midi.h ****         {
  36:../../libDaisy//src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  37:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  38:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  39:../../libDaisy//src/hid/midi.h ****         }
  40:../../libDaisy//src/hid/midi.h ****     };
  41:../../libDaisy//src/hid/midi.h **** 
  42:../../libDaisy//src/hid/midi.h ****     inline void Init(Config config)
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 3


  43:../../libDaisy//src/hid/midi.h ****     {
  44:../../libDaisy//src/hid/midi.h ****         UartHandler::Config uart_config;
  45:../../libDaisy//src/hid/midi.h **** 
  46:../../libDaisy//src/hid/midi.h ****         //defaults
  47:../../libDaisy//src/hid/midi.h ****         uart_config.baudrate   = 31250;
  48:../../libDaisy//src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  49:../../libDaisy//src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  50:../../libDaisy//src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  51:../../libDaisy//src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  52:../../libDaisy//src/hid/midi.h **** 
  53:../../libDaisy//src/hid/midi.h ****         //user settings
  54:../../libDaisy//src/hid/midi.h ****         uart_config.periph        = config.periph;
  55:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  56:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  57:../../libDaisy//src/hid/midi.h **** 
  58:../../libDaisy//src/hid/midi.h ****         uart_.Init(uart_config);
  59:../../libDaisy//src/hid/midi.h ****     }
  60:../../libDaisy//src/hid/midi.h **** 
  61:../../libDaisy//src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  62:../../libDaisy//src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  63:../../libDaisy//src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  64:../../libDaisy//src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  65:../../libDaisy//src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  66:../../libDaisy//src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  67:../../libDaisy//src/hid/midi.h **** 
  68:../../libDaisy//src/hid/midi.h ****   private:
  69:../../libDaisy//src/hid/midi.h ****     UartHandler uart_;
  70:../../libDaisy//src/hid/midi.h **** };
  71:../../libDaisy//src/hid/midi.h **** 
  72:../../libDaisy//src/hid/midi.h **** /** 
  73:../../libDaisy//src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  74:../../libDaisy//src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  75:../../libDaisy//src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  76:../../libDaisy//src/hid/midi.h ****     @author shensley
  77:../../libDaisy//src/hid/midi.h ****     @date March 2020
  78:../../libDaisy//src/hid/midi.h ****     @ingroup midi
  79:../../libDaisy//src/hid/midi.h **** */
  80:../../libDaisy//src/hid/midi.h **** template <typename Transport>
  81:../../libDaisy//src/hid/midi.h **** class MidiHandler
  82:../../libDaisy//src/hid/midi.h **** {
  83:../../libDaisy//src/hid/midi.h ****   public:
  84:../../libDaisy//src/hid/midi.h ****     MidiHandler() {}
  85:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
  38              		.loc 2 85 5 view .LVU1
  39              	.LBB276:
  40              	.LBI276:
  26:../../libDaisy//src/hid/midi.h **** 
  41              		.loc 2 26 5 view .LVU2
  26:../../libDaisy//src/hid/midi.h **** 
  42              		.loc 2 26 5 is_stmt 0 view .LVU3
  43              	.LBE276:
  44              	.LBE275:
  45              	.LBB277:
  46              	.LBI277:
  47              		.file 3 "../../libDaisy//src/hid/rgb_led.h"
   1:../../libDaisy//src/hid/rgb_led.h **** #pragma once
   2:../../libDaisy//src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 4


   3:../../libDaisy//src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../../libDaisy//src/hid/rgb_led.h **** #include "hid/led.h"
   5:../../libDaisy//src/hid/rgb_led.h **** #include "util/color.h"
   6:../../libDaisy//src/hid/rgb_led.h **** 
   7:../../libDaisy//src/hid/rgb_led.h **** namespace daisy
   8:../../libDaisy//src/hid/rgb_led.h **** {
   9:../../libDaisy//src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../../libDaisy//src/hid/rgb_led.h ****     @{
  11:../../libDaisy//src/hid/rgb_led.h **** */
  12:../../libDaisy//src/hid/rgb_led.h **** 
  13:../../libDaisy//src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../../libDaisy//src/hid/rgb_led.h **** class RgbLed
  15:../../libDaisy//src/hid/rgb_led.h **** {
  16:../../libDaisy//src/hid/rgb_led.h ****   public:
  17:../../libDaisy//src/hid/rgb_led.h ****     RgbLed() {}
  18:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
  48              		.loc 3 18 5 is_stmt 1 view .LVU4
  49              	.LBB278:
  50              	.LBI278:
  51              		.file 4 "../../libDaisy//src/hid/led.h"
   1:../../libDaisy//src/hid/led.h **** 
   2:../../libDaisy//src/hid/led.h **** #pragma once
   3:../../libDaisy//src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libDaisy//src/hid/led.h **** #define DSY_LED_H
   5:../../libDaisy//src/hid/led.h **** #include "daisy_core.h"
   6:../../libDaisy//src/hid/led.h **** #include "per/gpio.h"
   7:../../libDaisy//src/hid/led.h **** 
   8:../../libDaisy//src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libDaisy//src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libDaisy//src/hid/led.h **** */
  11:../../libDaisy//src/hid/led.h **** 
  12:../../libDaisy//src/hid/led.h **** namespace daisy
  13:../../libDaisy//src/hid/led.h **** {
  14:../../libDaisy//src/hid/led.h **** /**
  15:../../libDaisy//src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libDaisy//src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libDaisy//src/hid/led.h ****     @author shensley
  18:../../libDaisy//src/hid/led.h ****     @date March 2020
  19:../../libDaisy//src/hid/led.h ****     @ingroup feedback
  20:../../libDaisy//src/hid/led.h **** */
  21:../../libDaisy//src/hid/led.h **** class Led
  22:../../libDaisy//src/hid/led.h **** {
  23:../../libDaisy//src/hid/led.h ****   public:
  24:../../libDaisy//src/hid/led.h ****     Led() {}
  25:../../libDaisy//src/hid/led.h ****     ~Led() {}
  52              		.loc 4 25 5 view .LVU5
  53              		.loc 4 25 5 is_stmt 0 view .LVU6
  54              	.LBE278:
  55              	.LBB279:
  56              	.LBI279:
  57              		.loc 4 25 5 is_stmt 1 view .LVU7
  58              		.loc 4 25 5 is_stmt 0 view .LVU8
  59              	.LBE279:
  60              	.LBB280:
  61              	.LBI280:
  62              		.loc 4 25 5 is_stmt 1 view .LVU9
  63              		.loc 4 25 5 is_stmt 0 view .LVU10
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 5


  64              	.LBE280:
  65              	.LBE277:
  66              	.LBB281:
  67              	.LBI281:
  68              		.loc 3 18 5 is_stmt 1 view .LVU11
  69              	.LBB282:
  70              	.LBI282:
  71              		.loc 4 25 5 view .LVU12
  72              		.loc 4 25 5 is_stmt 0 view .LVU13
  73              	.LBE282:
  74              	.LBB283:
  75              	.LBI283:
  76              		.loc 4 25 5 is_stmt 1 view .LVU14
  77              		.loc 4 25 5 is_stmt 0 view .LVU15
  78              	.LBE283:
  79              	.LBB284:
  80              	.LBI284:
  81              		.loc 4 25 5 is_stmt 1 view .LVU16
  82              		.loc 4 25 5 is_stmt 0 view .LVU17
  83              	.LBE284:
  84              	.LBE281:
  85              	.LBB285:
  86              	.LBI285:
  87              		.file 5 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 6


  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  88              		.loc 5 42 5 is_stmt 1 view .LVU18
  89              		.loc 5 42 5 is_stmt 0 view .LVU19
  90              	.LBE285:
  91              	.LBB286:
  92              	.LBI286:
  93              		.loc 5 42 5 is_stmt 1 view .LVU20
  94              		.loc 5 42 5 is_stmt 0 view .LVU21
  95              	.LBE286:
  96              	.LBB287:
  97              	.LBI287:
  98              		.file 6 "../../libDaisy//src/hid/ctrl.h"
   1:../../libDaisy//src/hid/ctrl.h **** #pragma once
   2:../../libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/ctrl.h **** 
   6:../../libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libDaisy//src/hid/ctrl.h **** namespace daisy
   8:../../libDaisy//src/hid/ctrl.h **** {
   9:../../libDaisy//src/hid/ctrl.h **** /**
  10:../../libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../../libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../../libDaisy//src/hid/ctrl.h **** */
  17:../../libDaisy//src/hid/ctrl.h **** class AnalogControl
  18:../../libDaisy//src/hid/ctrl.h **** {
  19:../../libDaisy//src/hid/ctrl.h ****   public:
  20:../../libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../../libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../../libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
  99              		.loc 6 23 5 is_stmt 1 view .LVU22
 100              		.loc 6 23 5 is_stmt 0 view .LVU23
 101              	.LBE287:
 102              	.LBB288:
 103              	.LBI288:
 104              		.loc 6 23 5 is_stmt 1 view .LVU24
 105              		.loc 6 23 5 is_stmt 0 view .LVU25
 106              	.LBE288:
 107              	.LBB289:
 108              	.LBI289:
 109              		.file 7 "../../libDaisy//src/hid/encoder.h"
   1:../../libDaisy//src/hid/encoder.h **** #pragma once
   2:../../libDaisy//src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libDaisy//src/hid/encoder.h **** #define DSY_ENCODER_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 7


   4:../../libDaisy//src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libDaisy//src/hid/encoder.h **** 
   8:../../libDaisy//src/hid/encoder.h **** namespace daisy
   9:../../libDaisy//src/hid/encoder.h **** {
  10:../../libDaisy//src/hid/encoder.h **** /** 
  11:../../libDaisy//src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libDaisy//src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libDaisy//src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/encoder.h ****     @date December 2019
  15:../../libDaisy//src/hid/encoder.h ****     @ingroup controls
  16:../../libDaisy//src/hid/encoder.h **** */
  17:../../libDaisy//src/hid/encoder.h **** class Encoder
  18:../../libDaisy//src/hid/encoder.h **** {
  19:../../libDaisy//src/hid/encoder.h ****   public:
  20:../../libDaisy//src/hid/encoder.h ****     Encoder() {}
  21:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 110              		.loc 7 21 5 is_stmt 1 view .LVU26
 111              	.LBB290:
 112              	.LBI290:
 113              		.loc 5 42 5 view .LVU27
 114              		.loc 5 42 5 is_stmt 0 view .LVU28
 115              	.LBE290:
 116              	.LBE289:
 117              	.LBB291:
 118              	.LBI291:
 119              		.file 8 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 120              		.loc 8 22 5 is_stmt 1 view .LVU29
 121              	.LBB292:
 122              	.LBI292:
 123              		.file 9 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 8


   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 9


  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
 124              		.loc 9 78 5 view .LVU30
 125              		.loc 9 78 5 is_stmt 0 view .LVU31
 126              	.LBE292:
 127              	.LBB293:
 128              	.LBI293:
 129              		.file 10 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 10


  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 130              		.loc 10 42 5 is_stmt 1 view .LVU32
 131              		.loc 10 42 5 is_stmt 0 view .LVU33
 132              	.LBE293:
 133              	.LBB294:
 134              	.LBI294:
 135              		.file 11 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 11


  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 136              		.loc 11 93 5 is_stmt 1 view .LVU34
 137              		.loc 11 93 5 is_stmt 0 view .LVU35
 138              	.LBE294:
 139              	.LBB295:
 140              	.LBI295:
 141              		.file 12 "../../libDaisy//src/hid/audio.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 12


   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 13


  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 142              		.loc 12 96 5 is_stmt 1 view .LVU36
 143              		.loc 12 96 5 is_stmt 0 view .LVU37
 144              	.LBE295:
 145              	.LBE291:
 146              		.loc 1 36 18 view .LVU38
 147 0000 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE2538:
 151              		.weak	_ZN5daisy8DaisyPodD1Ev
 152              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 153 0002 00BF     		.section	.text._Z12randomNumberv,"ax",%progbits
 154              		.align	1
 155              		.p2align 2,,3
 156              		.global	_Z12randomNumberv
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	_Z12randomNumberv:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 14


 162              	.LFB2541:
 163              		.file 13 "MyProj.cpp"
   1:MyProj.cpp    **** #include "daisy_pod.h"
   2:MyProj.cpp    **** #include "leaf.h"
   3:MyProj.cpp    **** using namespace daisy;
   4:MyProj.cpp    **** LEAF leaf;
   5:MyProj.cpp    **** char leafMemory[455355];
   6:MyProj.cpp    **** 
   7:MyProj.cpp    **** //for more recording space, we need to use the external SDRAM chip instead of the internal memory
   8:MyProj.cpp    **** //to do that, set up a new variable that is the size of the memory amount you want to use
   9:MyProj.cpp    **** //and use the "DSY_SDRAM_BSS" macro after defining the variable (but before the semicolon) to place
  10:MyProj.cpp    **** char bigMemory[33554432] DSY_SDRAM_BSS; //32 MB is 32 * 1024 * 1024
  11:MyProj.cpp    **** 
  12:MyProj.cpp    **** //now we need to make a LEAF "memorypool" object that will organize that large memory chunk
  13:MyProj.cpp    **** tMempool bigPool;
  14:MyProj.cpp    **** DaisyPod hw;
  15:MyProj.cpp    **** 
  16:MyProj.cpp    **** //we need a buffer to store the sample (just an array that holds the sample values)
  17:MyProj.cpp    **** tBuffer myBuffer;
  18:MyProj.cpp    **** tSampler mySampler;
  19:MyProj.cpp    **** 
  20:MyProj.cpp    **** 
  21:MyProj.cpp    **** //A simple reverb. Reverb is pretty expensive so you can't combine it with many other things.
  22:MyProj.cpp    **** 
  23:MyProj.cpp    **** 
  24:MyProj.cpp    **** float randomNumber()
  25:MyProj.cpp    **** {
 164              		.loc 13 25 1 is_stmt 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
  26:MyProj.cpp    ****     return Random::GetFloat(0.0f, 1.0f);
 169              		.loc 13 26 5 view .LVU40
 170              		.loc 13 26 28 is_stmt 0 view .LVU41
 171 0000 F7EE000A 		vmov.f32	s1, #1.0e+0
 172 0004 9FED010A 		vldr.32	s0, .L4
 173 0008 FFF7FEBF 		b	_ZN5daisy6Random8GetFloatEff
 174              	.LVL1:
 175              	.L5:
 176              		.align	2
 177              	.L4:
 178 000c 00000000 		.word	0
 179              		.cfi_endproc
 180              	.LFE2541:
 182              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 183              		.align	1
 184              		.p2align 2,,3
 185              		.global	_Z13AudioCallbackPKPKfPPfj
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	_Z13AudioCallbackPKPKfPPfj:
 191              	.LVL2:
 192              	.LFB2542:
  27:MyProj.cpp    **** }
  28:MyProj.cpp    **** 
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 15


  29:MyProj.cpp    **** 
  30:MyProj.cpp    **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  31:MyProj.cpp    **** {
 193              		.loc 13 31 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
  32:MyProj.cpp    ****     hw.ProcessAllControls();
 197              		.loc 13 32 5 view .LVU43
 198              	.LBB296:
 199              	.LBI296:
  37:../../libDaisy//src/daisy_pod.h **** 
  38:../../libDaisy//src/daisy_pod.h ****     /** Init related stuff. */
  39:../../libDaisy//src/daisy_pod.h ****     void Init(bool boost = false);
  40:../../libDaisy//src/daisy_pod.h **** 
  41:../../libDaisy//src/daisy_pod.h ****     /** Wait for a bit
  42:../../libDaisy//src/daisy_pod.h ****     \param del Time to wait in ms.
  43:../../libDaisy//src/daisy_pod.h ****     */
  44:../../libDaisy//src/daisy_pod.h ****     void DelayMs(size_t del);
  45:../../libDaisy//src/daisy_pod.h **** 
  46:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  47:../../libDaisy//src/daisy_pod.h ****     \param cb Interleaved callback function
  48:../../libDaisy//src/daisy_pod.h ****     */
  49:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  50:../../libDaisy//src/daisy_pod.h **** 
  51:../../libDaisy//src/daisy_pod.h ****     /** Starts the callback
  52:../../libDaisy//src/daisy_pod.h ****     \param cb multichannel callback function
  53:../../libDaisy//src/daisy_pod.h ****     */
  54:../../libDaisy//src/daisy_pod.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  55:../../libDaisy//src/daisy_pod.h **** 
  56:../../libDaisy//src/daisy_pod.h ****     /**
  57:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  58:../../libDaisy//src/daisy_pod.h ****        \param cb New interleaved callback function.
  59:../../libDaisy//src/daisy_pod.h ****     */
  60:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  61:../../libDaisy//src/daisy_pod.h **** 
  62:../../libDaisy//src/daisy_pod.h ****     /**
  63:../../libDaisy//src/daisy_pod.h ****        Switch callback functions
  64:../../libDaisy//src/daisy_pod.h ****        \param cb New multichannel callback function.
  65:../../libDaisy//src/daisy_pod.h ****     */
  66:../../libDaisy//src/daisy_pod.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  67:../../libDaisy//src/daisy_pod.h **** 
  68:../../libDaisy//src/daisy_pod.h ****     /** Stops the audio if it is running. */
  69:../../libDaisy//src/daisy_pod.h ****     void StopAudio();
  70:../../libDaisy//src/daisy_pod.h **** 
  71:../../libDaisy//src/daisy_pod.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  72:../../libDaisy//src/daisy_pod.h ****      ** Audio must be stopped for this to work.
  73:../../libDaisy//src/daisy_pod.h ****      */
  74:../../libDaisy//src/daisy_pod.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  75:../../libDaisy//src/daisy_pod.h **** 
  76:../../libDaisy//src/daisy_pod.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  77:../../libDaisy//src/daisy_pod.h ****      */
  78:../../libDaisy//src/daisy_pod.h ****     float AudioSampleRate();
  79:../../libDaisy//src/daisy_pod.h **** 
  80:../../libDaisy//src/daisy_pod.h ****     /** Sets the number of samples processed per channel by the audio callback.
  81:../../libDaisy//src/daisy_pod.h ****      */
  82:../../libDaisy//src/daisy_pod.h ****     void SetAudioBlockSize(size_t blocksize);
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 16


  83:../../libDaisy//src/daisy_pod.h **** 
  84:../../libDaisy//src/daisy_pod.h ****     /** Returns the number of samples per channel in a block of audio. */
  85:../../libDaisy//src/daisy_pod.h ****     size_t AudioBlockSize();
  86:../../libDaisy//src/daisy_pod.h **** 
  87:../../libDaisy//src/daisy_pod.h ****     /** Returns the rate in Hz that the Audio callback is called */
  88:../../libDaisy//src/daisy_pod.h ****     float AudioCallbackRate();
  89:../../libDaisy//src/daisy_pod.h **** 
  90:../../libDaisy//src/daisy_pod.h ****     /**
  91:../../libDaisy//src/daisy_pod.h ****        Start analog to digital conversion.
  92:../../libDaisy//src/daisy_pod.h ****      */
  93:../../libDaisy//src/daisy_pod.h ****     void StartAdc();
  94:../../libDaisy//src/daisy_pod.h **** 
  95:../../libDaisy//src/daisy_pod.h ****     /** Stops Transfering data from the ADC */
  96:../../libDaisy//src/daisy_pod.h ****     void StopAdc();
  97:../../libDaisy//src/daisy_pod.h **** 
  98:../../libDaisy//src/daisy_pod.h ****     /** Call at same rate as analog reads for smooth reading.*/
  99:../../libDaisy//src/daisy_pod.h ****     void ProcessAnalogControls();
 100:../../libDaisy//src/daisy_pod.h **** 
 101:../../libDaisy//src/daisy_pod.h ****     /** Process Analog and Digital Controls */
 102:../../libDaisy//src/daisy_pod.h ****     inline void ProcessAllControls()
 200              		.loc 1 102 17 view .LVU44
 201              	.LBB297:
 103:../../libDaisy//src/daisy_pod.h ****     {
 104:../../libDaisy//src/daisy_pod.h ****         ProcessAnalogControls();
 202              		.loc 1 104 9 view .LVU45
 203              	.LBE297:
 204              	.LBE296:
  31:MyProj.cpp    ****     hw.ProcessAllControls();
 205              		.loc 13 31 1 is_stmt 0 view .LVU46
 206 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 207              		.cfi_def_cfa_offset 32
 208              		.cfi_offset 3, -32
 209              		.cfi_offset 4, -28
 210              		.cfi_offset 5, -24
 211              		.cfi_offset 6, -20
 212              		.cfi_offset 7, -16
 213              		.cfi_offset 8, -12
 214              		.cfi_offset 9, -8
 215              		.cfi_offset 14, -4
 216 0004 1646     		mov	r6, r2
 217 0006 0746     		mov	r7, r0
 218              	.LBB300:
 219              	.LBB298:
 220              		.loc 1 104 30 view .LVU47
 221 0008 3148     		ldr	r0, .L27
 222              	.LVL3:
 223              		.loc 1 104 30 view .LVU48
 224              	.LBE298:
 225              	.LBE300:
  31:MyProj.cpp    ****     hw.ProcessAllControls();
 226              		.loc 13 31 1 view .LVU49
 227 000a 8946     		mov	r9, r1
 228 000c 2DED028B 		vpush.64	{d8}
 229              		.cfi_def_cfa_offset 40
 230              		.cfi_offset 80, -40
 231              		.cfi_offset 81, -36
 232              	.LBB301:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 17


 233              	.LBB299:
 234              		.loc 1 104 30 view .LVU50
 235 0010 FFF7FEFF 		bl	_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
 236              	.LVL4:
 105:../../libDaisy//src/daisy_pod.h ****         ProcessDigitalControls();
 237              		.loc 1 105 9 is_stmt 1 view .LVU51
 238              		.loc 1 105 31 is_stmt 0 view .LVU52
 239 0014 2E48     		ldr	r0, .L27
 240 0016 FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
 241              	.LVL5:
 242              		.loc 1 105 31 view .LVU53
 243              	.LBE299:
 244              	.LBE301:
  33:MyProj.cpp    ****     //now here's the per sample stuff
  34:MyProj.cpp    ****     for (size_t i = 0; i < size; i++)
 245              		.loc 13 34 5 is_stmt 1 view .LVU54
 246              	.LBB302:
 247              		.loc 13 34 26 view .LVU55
 248 001a 002E     		cmp	r6, #0
 249 001c 53D0     		beq	.L6
 250              		.loc 13 34 17 is_stmt 0 view .LVU56
 251 001e 0024     		movs	r4, #0
 252 0020 2B4D     		ldr	r5, .L27
 253 0022 29E0     		b	.L12
 254              	.LVL6:
 255              	.L9:
 256              	.LBB303:
  35:MyProj.cpp    ****     {
  36:MyProj.cpp    ****         //get the next sample from the left channel of the input (right channel would be in[1][i])
  37:MyProj.cpp    ****         float mySample = in[0][i];
  38:MyProj.cpp    **** 
  39:MyProj.cpp    ****         //set buffer position to the beginning on the beginning of a button1 press
  40:MyProj.cpp    ****         if (hw.button1.RisingEdge())
  41:MyProj.cpp    ****         {
  42:MyProj.cpp    ****             tBuffer_setRecordPosition(&myBuffer, 0);
  43:MyProj.cpp    ****             tBuffer_record(&myBuffer);
  44:MyProj.cpp    ****         }
  45:MyProj.cpp    ****         //stop recording when button1 is not held down
  46:MyProj.cpp    ****         else if (hw.button1.FallingEdge())
 257              		.loc 13 46 14 is_stmt 1 view .LVU57
 258              		.loc 13 46 14 is_stmt 0 view .LVU58
 259              	.LBE303:
 260              	.LBE302:
  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 18


  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy//src/hid/switch.h **** 
  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
  71:../../libDaisy//src/hid/switch.h **** 
  72:../../libDaisy//src/hid/switch.h ****     /** \return true if the button was just released */
  73:../../libDaisy//src/hid/switch.h ****     inline bool FallingEdge() const
  74:../../libDaisy//src/hid/switch.h ****     {
  75:../../libDaisy//src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
 261              		.loc 5 75 9 is_stmt 1 view .LVU59
 262              	.LBB317:
 263              	.LBB312:
 264              		.loc 13 46 14 is_stmt 0 view .LVU60
 265 0024 802B     		cmp	r3, #128
 266 0026 4AD0     		beq	.L24
 267              	.L8:
  47:MyProj.cpp    ****         {
  48:MyProj.cpp    ****             tBuffer_stop(&myBuffer);
  49:MyProj.cpp    ****         }
  50:MyProj.cpp    **** 
  51:MyProj.cpp    **** 
  52:MyProj.cpp    ****         //button 2 makes sample play back
  53:MyProj.cpp    ****         if (hw.button2.RisingEdge())
 268              		.loc 13 53 9 is_stmt 1 view .LVU61
 269              	.LVL7:
 270              	.LBB304:
 271              	.LBI304:
  70:../../libDaisy//src/hid/switch.h **** 
 272              		.loc 5 70 17 view .LVU62
 273              	.LBB305:
  70:../../libDaisy//src/hid/switch.h **** 
 274              		.loc 5 70 38 view .LVU63
  70:../../libDaisy//src/hid/switch.h **** 
 275              		.loc 5 70 54 is_stmt 0 view .LVU64
 276 0028 95F8C030 		ldrb	r3, [r5, #192]	@ zero_extendqisi2
 277 002c 2BB1     		cbz	r3, .L10
  70:../../libDaisy//src/hid/switch.h **** 
 278              		.loc 5 70 56 view .LVU65
 279 002e 95F8C630 		ldrb	r3, [r5, #198]	@ zero_extendqisi2
 280              	.LVL8:
  70:../../libDaisy//src/hid/switch.h **** 
 281              		.loc 5 70 56 view .LVU66
 282              	.LBE305:
 283              	.LBE304:
 284              		.loc 13 53 9 view .LVU67
 285 0032 7F2B     		cmp	r3, #127
 286 0034 37D0     		beq	.L25
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 19


  54:MyProj.cpp    ****         {
  55:MyProj.cpp    ****             tSampler_setStart(&mySampler, 0);
  56:MyProj.cpp    ****             tSampler_play(&mySampler);
  57:MyProj.cpp    ****         }
  58:MyProj.cpp    **** 
  59:MyProj.cpp    ****         
  60:MyProj.cpp    ****         else if (hw.button2.FallingEdge())
 287              		.loc 13 60 14 is_stmt 1 view .LVU68
 288              	.LVL9:
 289              		.loc 13 60 14 is_stmt 0 view .LVU69
 290              	.LBE312:
 291              	.LBE317:
 292              		.loc 5 75 9 is_stmt 1 view .LVU70
 293              	.LBB318:
 294              	.LBB313:
 295              		.loc 13 60 14 is_stmt 0 view .LVU71
 296 0036 802B     		cmp	r3, #128
 297 0038 3DD0     		beq	.L26
 298              	.L10:
  61:MyProj.cpp    ****         {
  62:MyProj.cpp    ****             tSampler_stop(&mySampler);
  63:MyProj.cpp    ****         }
  64:MyProj.cpp    **** 
  65:MyProj.cpp    ****         //knob1 controls sample speed
  66:MyProj.cpp    ****         tSampler_setRate(&mySampler, (hw.knob1.Value() * 4.0f) - 2.0f); // scaling 0-1 range to -2-
 299              		.loc 13 66 9 is_stmt 1 discriminator 2 view .LVU72
 300              	.LVL10:
 301              	.LBB306:
 302              	.LBI306:
  24:../../libDaisy//src/hid/ctrl.h **** 
  25:../../libDaisy//src/hid/ctrl.h ****     /** 
  26:../../libDaisy//src/hid/ctrl.h ****     Initializes the control
  27:../../libDaisy//src/hid/ctrl.h ****     \param *adcptr is a pointer to the raw adc read value -- This can be acquired with dsy_adc_get_
  28:../../libDaisy//src/hid/ctrl.h ****     \param sr is the samplerate in Hz that the Process function will be called at.
  29:../../libDaisy//src/hid/ctrl.h ****     \param flip determines whether the input is flipped (i.e. 1.f - input) or not before being proc
  30:../../libDaisy//src/hid/ctrl.h ****     \param invert determines whether the input is inverted (i.e. -1.f * input) or note before being
  31:../../libDaisy//src/hid/ctrl.h ****     \param slew_seconds is the slew time in seconds that it takes for the control to change to a ne
  32:../../libDaisy//src/hid/ctrl.h ****     */
  33:../../libDaisy//src/hid/ctrl.h ****     void Init(uint16_t *adcptr,
  34:../../libDaisy//src/hid/ctrl.h ****               float     sr,
  35:../../libDaisy//src/hid/ctrl.h ****               bool      flip         = false,
  36:../../libDaisy//src/hid/ctrl.h ****               bool      invert       = false,
  37:../../libDaisy//src/hid/ctrl.h ****               float     slew_seconds = 0.002f);
  38:../../libDaisy//src/hid/ctrl.h **** 
  39:../../libDaisy//src/hid/ctrl.h ****     /** 
  40:../../libDaisy//src/hid/ctrl.h ****     This Initializes the AnalogControl for a -5V to 5V inverted input
  41:../../libDaisy//src/hid/ctrl.h ****     All of the Init details are the same otherwise
  42:../../libDaisy//src/hid/ctrl.h ****     \param *adcptr Pointer to analog digital converter
  43:../../libDaisy//src/hid/ctrl.h ****     \param sr Audio engine sample rate
  44:../../libDaisy//src/hid/ctrl.h ****     */
  45:../../libDaisy//src/hid/ctrl.h ****     void InitBipolarCv(uint16_t *adcptr, float sr);
  46:../../libDaisy//src/hid/ctrl.h **** 
  47:../../libDaisy//src/hid/ctrl.h ****     /** 
  48:../../libDaisy//src/hid/ctrl.h ****     Filters, and transforms a raw ADC read into a normalized range.
  49:../../libDaisy//src/hid/ctrl.h ****     this should be called at the rate of specified by samplerate at Init time.   
  50:../../libDaisy//src/hid/ctrl.h ****     Default Initializations will return 0.0 -> 1.0
  51:../../libDaisy//src/hid/ctrl.h ****     Bi-polar CV inputs will return -1.0 -> 1.0
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 20


  52:../../libDaisy//src/hid/ctrl.h ****     */
  53:../../libDaisy//src/hid/ctrl.h ****     float Process();
  54:../../libDaisy//src/hid/ctrl.h **** 
  55:../../libDaisy//src/hid/ctrl.h ****     /** Returns the current stored value, without reprocessing */
  56:../../libDaisy//src/hid/ctrl.h ****     inline float Value() const { return val_; }
 303              		.loc 6 56 18 discriminator 2 view .LVU73
 304              	.LBB307:
 305              		.loc 6 56 34 discriminator 2 view .LVU74
 306              		.loc 6 56 34 is_stmt 0 discriminator 2 view .LVU75
 307              	.LBE307:
 308              	.LBE306:
 309              		.loc 13 66 25 discriminator 2 view .LVU76
 310 003a F1EE007A 		vmov.f32	s15, #4.0e+0
 311 003e 95ED1C7A 		vldr.32	s14, [r5, #112]
 312 0042 B8EE000A 		vmov.f32	s0, #-2.0e+0
 313 0046 2348     		ldr	r0, .L27+4
 314              	.LBE313:
  34:MyProj.cpp    ****     {
 315              		.loc 13 34 5 discriminator 2 view .LVU77
 316 0048 0134     		adds	r4, r4, #1
 317              	.LVL11:
 318              	.LBB314:
 319              		.loc 13 66 25 discriminator 2 view .LVU78
 320 004a A7EE270A 		vfma.f32	s0, s14, s15
 321 004e FFF7FEFF 		bl	tSampler_setRate
 322              	.LVL12:
  67:MyProj.cpp    **** 
  68:MyProj.cpp    ****         //now tick the buffer with the input coming in so the buffer gets filled
  69:MyProj.cpp    ****         tBuffer_tick(&myBuffer, mySample);
 323              		.loc 13 69 9 is_stmt 1 discriminator 2 view .LVU79
 324              		.loc 13 69 21 is_stmt 0 discriminator 2 view .LVU80
 325 0052 B0EE480A 		vmov.f32	s0, s16
 326 0056 2048     		ldr	r0, .L27+8
 327 0058 FFF7FEFF 		bl	tBuffer_tick
 328              	.LVL13:
  70:MyProj.cpp    **** 
  71:MyProj.cpp    ****         //then tick the sampler so it reads the buffer and sets mySample to the output value
  72:MyProj.cpp    ****         mySample = tSampler_tick(&mySampler);
 329              		.loc 13 72 9 is_stmt 1 discriminator 2 view .LVU81
 330              		.loc 13 72 33 is_stmt 0 discriminator 2 view .LVU82
 331 005c 1D48     		ldr	r0, .L27+4
 332 005e FFF7FEFF 		bl	tSampler_tick
 333              	.LVL14:
 334              	.LBE314:
  34:MyProj.cpp    ****     {
 335              		.loc 13 34 26 discriminator 2 view .LVU83
 336 0062 A642     		cmp	r6, r4
 337              	.LBB315:
  73:MyProj.cpp    **** 
  74:MyProj.cpp    ****         //now set the audio outputs (left is [0] and right is [1] to be whatever value has been com
  75:MyProj.cpp    ****         out[0][i] = mySample;
 338              		.loc 13 75 19 discriminator 2 view .LVU84
 339 0064 D9E90023 		ldrd	r2, r3, [r9]
 340 0068 02EB080C 		add	ip, r2, r8
  76:MyProj.cpp    ****         out[1][i] = mySample;
 341              		.loc 13 76 19 discriminator 2 view .LVU85
 342 006c 4344     		add	r3, r3, r8
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 21


  75:MyProj.cpp    ****         out[1][i] = mySample;
 343              		.loc 13 75 19 discriminator 2 view .LVU86
 344 006e 8CED000A 		vstr.32	s0, [ip]
 345              		.loc 13 76 9 is_stmt 1 discriminator 2 view .LVU87
 346              		.loc 13 76 19 is_stmt 0 discriminator 2 view .LVU88
 347 0072 83ED000A 		vstr.32	s0, [r3]
 348              	.LBE315:
  34:MyProj.cpp    ****     {
 349              		.loc 13 34 5 is_stmt 1 discriminator 2 view .LVU89
 350              	.LVL15:
  34:MyProj.cpp    ****     {
 351              		.loc 13 34 26 discriminator 2 view .LVU90
 352 0076 26D0     		beq	.L6
 353              	.LVL16:
 354              	.L12:
 355              	.LBB316:
  37:MyProj.cpp    **** 
 356              		.loc 13 37 9 view .LVU91
  37:MyProj.cpp    **** 
 357              		.loc 13 37 15 is_stmt 0 view .LVU92
 358 0078 3B68     		ldr	r3, [r7]
 359 007a 4FEA8408 		lsl	r8, r4, #2
 360              	.LBB308:
 361              	.LBB309:
  70:../../libDaisy//src/hid/switch.h **** 
 362              		.loc 5 70 54 view .LVU93
 363 007e 95F8B020 		ldrb	r2, [r5, #176]	@ zero_extendqisi2
 364              	.LBE309:
 365              	.LBE308:
  37:MyProj.cpp    **** 
 366              		.loc 13 37 15 view .LVU94
 367 0082 03EB8403 		add	r3, r3, r4, lsl #2
 368 0086 93ED008A 		vldr.32	s16, [r3]
 369              	.LVL17:
  40:MyProj.cpp    ****         {
 370              		.loc 13 40 9 is_stmt 1 view .LVU95
 371              	.LBB311:
 372              	.LBI308:
  70:../../libDaisy//src/hid/switch.h **** 
 373              		.loc 5 70 17 view .LVU96
 374              	.LBB310:
  70:../../libDaisy//src/hid/switch.h **** 
 375              		.loc 5 70 38 view .LVU97
  70:../../libDaisy//src/hid/switch.h **** 
 376              		.loc 5 70 54 is_stmt 0 view .LVU98
 377 008a 002A     		cmp	r2, #0
 378 008c CCD0     		beq	.L8
  70:../../libDaisy//src/hid/switch.h **** 
 379              		.loc 5 70 56 view .LVU99
 380 008e 95F8B630 		ldrb	r3, [r5, #182]	@ zero_extendqisi2
 381              	.LVL18:
  70:../../libDaisy//src/hid/switch.h **** 
 382              		.loc 5 70 56 view .LVU100
 383              	.LBE310:
 384              	.LBE311:
  40:MyProj.cpp    ****         {
 385              		.loc 13 40 9 view .LVU101
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 22


 386 0092 7F2B     		cmp	r3, #127
 387 0094 C6D1     		bne	.L9
  42:MyProj.cpp    ****             tBuffer_record(&myBuffer);
 388              		.loc 13 42 13 is_stmt 1 view .LVU102
  42:MyProj.cpp    ****             tBuffer_record(&myBuffer);
 389              		.loc 13 42 38 is_stmt 0 view .LVU103
 390 0096 0021     		movs	r1, #0
 391 0098 0F48     		ldr	r0, .L27+8
 392 009a FFF7FEFF 		bl	tBuffer_setRecordPosition
 393              	.LVL19:
  43:MyProj.cpp    ****         }
 394              		.loc 13 43 13 is_stmt 1 view .LVU104
  43:MyProj.cpp    ****         }
 395              		.loc 13 43 27 is_stmt 0 view .LVU105
 396 009e 0E48     		ldr	r0, .L27+8
 397 00a0 FFF7FEFF 		bl	tBuffer_record
 398              	.LVL20:
 399 00a4 C0E7     		b	.L8
 400              	.L25:
  55:MyProj.cpp    ****             tSampler_play(&mySampler);
 401              		.loc 13 55 13 is_stmt 1 view .LVU106
  55:MyProj.cpp    ****             tSampler_play(&mySampler);
 402              		.loc 13 55 30 is_stmt 0 view .LVU107
 403 00a6 0021     		movs	r1, #0
 404 00a8 0A48     		ldr	r0, .L27+4
 405 00aa FFF7FEFF 		bl	tSampler_setStart
 406              	.LVL21:
  56:MyProj.cpp    ****         }
 407              		.loc 13 56 13 is_stmt 1 view .LVU108
  56:MyProj.cpp    ****         }
 408              		.loc 13 56 26 is_stmt 0 view .LVU109
 409 00ae 0948     		ldr	r0, .L27+4
 410 00b0 FFF7FEFF 		bl	tSampler_play
 411              	.LVL22:
 412 00b4 C1E7     		b	.L10
 413              	.L26:
  62:MyProj.cpp    ****         }
 414              		.loc 13 62 13 is_stmt 1 view .LVU110
  62:MyProj.cpp    ****         }
 415              		.loc 13 62 26 is_stmt 0 view .LVU111
 416 00b6 0748     		ldr	r0, .L27+4
 417 00b8 FFF7FEFF 		bl	tSampler_stop
 418              	.LVL23:
 419 00bc BDE7     		b	.L10
 420              	.L24:
  48:MyProj.cpp    ****         }
 421              		.loc 13 48 13 is_stmt 1 view .LVU112
  48:MyProj.cpp    ****         }
 422              		.loc 13 48 25 is_stmt 0 view .LVU113
 423 00be 0648     		ldr	r0, .L27+8
 424 00c0 FFF7FEFF 		bl	tBuffer_stop
 425              	.LVL24:
 426 00c4 B0E7     		b	.L8
 427              	.LVL25:
 428              	.L6:
  48:MyProj.cpp    ****         }
 429              		.loc 13 48 25 view .LVU114
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 23


 430              	.LBE316:
 431              	.LBE318:
  77:MyProj.cpp    ****     }
  78:MyProj.cpp    **** }
 432              		.loc 13 78 1 view .LVU115
 433 00c6 BDEC028B 		vldm	sp!, {d8}
 434              		.cfi_restore 80
 435              		.cfi_restore 81
 436              		.cfi_def_cfa_offset 32
 437 00ca BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 438              	.LVL26:
 439              	.L28:
 440              		.loc 13 78 1 view .LVU116
 441 00ce 00BF     		.align	2
 442              	.L27:
 443 00d0 00000000 		.word	hw
 444 00d4 00000000 		.word	.LANCHOR1
 445 00d8 00000000 		.word	.LANCHOR0
 446              		.cfi_endproc
 447              	.LFE2542:
 449              		.section	.text.startup.main,"ax",%progbits
 450              		.align	1
 451              		.p2align 2,,3
 452              		.global	main
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 457              	main:
 458              	.LFB2543:
  79:MyProj.cpp    **** 
  80:MyProj.cpp    **** int main(void)
  81:MyProj.cpp    **** {
 459              		.loc 13 81 1 is_stmt 1 view -0
 460              		.cfi_startproc
 461              		@ Volatile: function does not return.
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
  82:MyProj.cpp    ****     hw.Init();
 464              		.loc 13 82 5 view .LVU118
  81:MyProj.cpp    ****     hw.Init();
 465              		.loc 13 81 1 is_stmt 0 view .LVU119
 466 0000 08B5     		push	{r3, lr}
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 3, -8
 469              		.cfi_offset 14, -4
 470              		.loc 13 82 12 view .LVU120
 471 0002 0021     		movs	r1, #0
 472 0004 1848     		ldr	r0, .L32
 473 0006 FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
 474              	.LVL27:
  83:MyProj.cpp    ****     hw.SetAudioBlockSize(4); // number of samples handled per callback
 475              		.loc 13 83 5 is_stmt 1 view .LVU121
 476              		.loc 13 83 25 is_stmt 0 view .LVU122
 477 000a 0421     		movs	r1, #4
 478 000c 1648     		ldr	r0, .L32
 479 000e FFF7FEFF 		bl	_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
 480              	.LVL28:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 24


  84:MyProj.cpp    ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 481              		.loc 13 84 5 is_stmt 1 view .LVU123
 482              		.loc 13 84 26 is_stmt 0 view .LVU124
 483 0012 0321     		movs	r1, #3
 484 0014 1448     		ldr	r0, .L32
 485 0016 FFF7FEFF 		bl	_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 486              	.LVL29:
  85:MyProj.cpp    ****     Random::Init();
 487              		.loc 13 85 5 is_stmt 1 view .LVU125
 488              		.loc 13 85 17 is_stmt 0 view .LVU126
 489 001a FFF7FEFF 		bl	_ZN5daisy6Random4InitEv
 490              	.LVL30:
  86:MyProj.cpp    ****     hw.StartAdc();
 491              		.loc 13 86 5 is_stmt 1 view .LVU127
 492              		.loc 13 86 16 is_stmt 0 view .LVU128
 493 001e 1248     		ldr	r0, .L32
 494 0020 FFF7FEFF 		bl	_ZN5daisy8DaisyPod8StartAdcEv
 495              	.LVL31:
  87:MyProj.cpp    ****     LEAF_init(&leaf, 48000, leafMemory, 455355, randomNumber);
 496              		.loc 13 87 5 is_stmt 1 view .LVU129
 497              		.loc 13 87 14 is_stmt 0 view .LVU130
 498 0024 9FED110A 		vldr.32	s0, .L32+4
 499 0028 114B     		ldr	r3, .L32+8
 500 002a 124A     		ldr	r2, .L32+12
 501 002c 1249     		ldr	r1, .L32+16
 502 002e 1348     		ldr	r0, .L32+20
 503 0030 FFF7FEFF 		bl	LEAF_init
 504              	.LVL32:
  88:MyProj.cpp    **** 
  89:MyProj.cpp    ****     //first, initialize that large memory pool to be ready for usage
  90:MyProj.cpp    ****     tMempool_init(&bigPool, bigMemory, 33554432, &leaf);
 505              		.loc 13 90 5 is_stmt 1 view .LVU131
 506              		.loc 13 90 18 is_stmt 0 view .LVU132
 507 0034 114B     		ldr	r3, .L32+20
 508 0036 4FF00072 		mov	r2, #33554432
 509 003a 1149     		ldr	r1, .L32+24
 510 003c 1148     		ldr	r0, .L32+28
 511 003e FFF7FEFF 		bl	tMempool_init
 512              	.LVL33:
  91:MyProj.cpp    ****     //then place the buffer into that memory pool instead of the default pool, using the "initToPoo
  92:MyProj.cpp    ****     tBuffer_initToPool(&myBuffer, 240000, &bigPool); //five-second buffer, set up a segment of memo
 513              		.loc 13 92 5 is_stmt 1 view .LVU133
 514              		.loc 13 92 23 is_stmt 0 view .LVU134
 515 0042 104A     		ldr	r2, .L32+28
 516 0044 1049     		ldr	r1, .L32+32
 517 0046 1148     		ldr	r0, .L32+36
 518 0048 FFF7FEFF 		bl	tBuffer_initToPool
 519              	.LVL34:
  93:MyProj.cpp    ****    
  94:MyProj.cpp    ****     //the tSampler object doesn't need to go into the large pool, it's just a small thing that refe
  95:MyProj.cpp    ****     tSampler_init(&mySampler, &myBuffer, &leaf); //make a "sampler" object that uses that buffer fo
 520              		.loc 13 95 5 is_stmt 1 view .LVU135
 521              		.loc 13 95 18 is_stmt 0 view .LVU136
 522 004c 0F49     		ldr	r1, .L32+36
 523 004e 1048     		ldr	r0, .L32+40
 524 0050 0A4A     		ldr	r2, .L32+20
 525 0052 FFF7FEFF 		bl	tSampler_init
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 25


 526              	.LVL35:
  96:MyProj.cpp    ****    
  97:MyProj.cpp    ****    
  98:MyProj.cpp    ****     hw.StartAudio(AudioCallback);
 527              		.loc 13 98 5 is_stmt 1 view .LVU137
 528              		.loc 13 98 18 is_stmt 0 view .LVU138
 529 0056 0F49     		ldr	r1, .L32+44
 530 0058 0348     		ldr	r0, .L32
 531 005a FFF7FEFF 		bl	_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
 532              	.LVL36:
 533              	.L30:
  99:MyProj.cpp    **** 
 100:MyProj.cpp    ****     while(1) {
 534              		.loc 13 100 5 is_stmt 1 discriminator 1 view .LVU139
 101:MyProj.cpp    ****         //the RGB leds on the pod need to be updated with the "update" function here to work
 102:MyProj.cpp    **** 
 103:MyProj.cpp    ****         hw.UpdateLeds();
 535              		.loc 13 103 9 discriminator 1 view .LVU140
 536              		.loc 13 103 22 is_stmt 0 discriminator 1 view .LVU141
 537 005e 0248     		ldr	r0, .L32
 538 0060 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10UpdateLedsEv
 539              	.LVL37:
 100:MyProj.cpp    ****         //the RGB leds on the pod need to be updated with the "update" function here to work
 540              		.loc 13 100 5 is_stmt 1 discriminator 1 view .LVU142
 541 0064 FBE7     		b	.L30
 542              	.L33:
 543 0066 00BF     		.align	2
 544              	.L32:
 545 0068 00000000 		.word	hw
 546 006c 00803B47 		.word	1195081728
 547 0070 00000000 		.word	_Z12randomNumberv
 548 0074 BBF20600 		.word	455355
 549 0078 00000000 		.word	leafMemory
 550 007c 00000000 		.word	.LANCHOR2
 551 0080 00000000 		.word	bigMemory
 552 0084 00000000 		.word	.LANCHOR3
 553 0088 80A90300 		.word	240000
 554 008c 00000000 		.word	.LANCHOR0
 555 0090 00000000 		.word	.LANCHOR1
 556 0094 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 557              		.cfi_endproc
 558              	.LFE2543:
 560              		.section	.text.startup._GLOBAL__sub_I_leaf,"ax",%progbits
 561              		.align	1
 562              		.p2align 2,,3
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 567              	_GLOBAL__sub_I_leaf:
 568              	.LFB2571:
 104:MyProj.cpp    ****     }
 105:MyProj.cpp    **** }
 569              		.loc 13 105 1 view -0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              	.LBB384:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 26


 574              	.LBI384:
 575              		.loc 13 105 1 view .LVU144
 576              	.LVL38:
 577              	.LBB385:
 578              	.LBB386:
 579              	.LBI386:
  35:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
 580              		.loc 1 35 5 view .LVU145
 581              	.LBB387:
 582              	.LBB388:
 583              	.LBI388:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 584              		.loc 8 21 5 view .LVU146
 585              	.LBB389:
 586              	.LBB390:
 587              	.LBI390:
 588              		.file 14 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 27


  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 28


  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 29


 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 589              		.loc 14 166 5 view .LVU147
 590              	.LBB391:
 591              	.LBB392:
 592              		.loc 14 166 34 is_stmt 0 view .LVU148
 593 0000 1348     		ldr	r0, .L36
 594 0002 0022     		movs	r2, #0
 595              	.LBE392:
 596              	.LBE391:
 597              	.LBE390:
 598              	.LBE389:
 599              	.LBE388:
 600              	.LBB408:
 601              	.LBB409:
 602              	.LBB410:
 603              	.LBB411:
 604              	.LBB412:
 605              	.LBB413:
 606              	.LBB414:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 607              		.loc 2 37 20 view .LVU149
 608 0004 1349     		ldr	r1, .L36+4
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 609              		.loc 2 36 20 view .LVU150
 610 0006 00F51043 		add	r3, r0, #36864
  38:../../libDaisy//src/hid/midi.h ****         }
 611              		.loc 2 38 20 view .LVU151
 612 000a B1F804C0 		ldrh	ip, [r1, #4]
 613              	.LBE414:
 614              	.LBE413:
 615              	.LBE412:
 616              	.LBE411:
 617              	.LBE410:
 618              	.LBE409:
 619              	.LBE408:
 620              	.LBE387:
 621              	.LBE386:
 622              	.LBE385:
 623              	.LBE384:
 624              		.loc 13 105 1 view .LVU152
 625 000e 00B5     		push	{lr}
 626              		.cfi_def_cfa_offset 4
 627              		.cfi_offset 14, -4
 628              	.LBB469:
 629              	.LBB467:
 630              	.LBB466:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 30


 631              	.LBB465:
 632              	.LBB443:
 633              	.LBB440:
 634              	.LBB437:
 635              	.LBB424:
 636              	.LBB421:
 637              	.LBB418:
 638              	.LBB415:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 639              		.loc 2 37 20 view .LVU153
 640 0010 B1F800E0 		ldrh	lr, [r1]
 641              	.LBE415:
 642              	.LBE418:
 643              	.LBE421:
 644              	.LBE424:
 645              	.LBE437:
 646              	.LBE440:
 647              	.LBE443:
 648              	.LBB444:
 649              	.LBB406:
 650              	.LBB395:
 651              	.LBB394:
 652              	.LBB393:
 653              		.loc 14 166 34 view .LVU154
 654 0014 0260     		str	r2, [r0]
 655              	.LVL39:
 656              		.loc 14 166 34 view .LVU155
 657              	.LBE393:
 658              	.LBE394:
 659              	.LBE395:
 660              	.LBB396:
 661              	.LBI396:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 662              		.loc 12 95 5 is_stmt 1 view .LVU156
 663              	.LBE396:
 664              	.LBE406:
 665              	.LBE444:
 666              	.LBB445:
 667              	.LBB441:
 668              	.LBB438:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 669              		.loc 2 84 19 is_stmt 0 view .LVU157
 670 0016 1049     		ldr	r1, .L36+8
 671              	.LBE438:
 672              	.LBE441:
 673              	.LBE445:
 674              	.LBB446:
 675              	.LBB407:
 676              	.LBB399:
 677              	.LBB397:
 678              	.LBB398:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 679              		.loc 12 95 35 view .LVU158
 680 0018 4261     		str	r2, [r0, #20]
 681              	.LVL40:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 682              		.loc 12 95 35 view .LVU159
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 31


 683              	.LBE398:
 684              	.LBE397:
 685              	.LBE399:
 686              	.LBB400:
 687              	.LBI400:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 688              		.loc 11 92 5 is_stmt 1 view .LVU160
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 689              		.loc 11 92 5 is_stmt 0 view .LVU161
 690              	.LBE400:
 691              	.LBB401:
 692              	.LBI401:
 693              		.file 15 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 32


  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 694              		.loc 15 84 5 is_stmt 1 view .LVU162
 695              	.LBB402:
 696              	.LBB403:
 697              		.loc 15 84 33 is_stmt 0 view .LVU163
 698 001a 0262     		str	r2, [r0, #32]
 699              	.LVL41:
 700              		.loc 15 84 33 view .LVU164
 701              	.LBE403:
 702              	.LBE402:
 703              	.LBE401:
 704              	.LBB404:
 705              	.LBI404:
  40:../../libDaisy//src/hid/usb.h **** 
 706              		.loc 10 40 5 is_stmt 1 view .LVU165
  40:../../libDaisy//src/hid/usb.h **** 
 707              		.loc 10 40 5 is_stmt 0 view .LVU166
 708              	.LBE404:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 33


 709              	.LBB405:
 710              	.LBI405:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 711              		.loc 9 77 5 is_stmt 1 view .LVU167
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 712              		.loc 9 77 5 is_stmt 0 view .LVU168
 713              	.LBE405:
 714              	.LBE407:
 715              	.LBE446:
 716              	.LBB447:
 717              	.LBI447:
  20:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 718              		.loc 7 20 5 is_stmt 1 view .LVU169
 719              	.LBB448:
 720              	.LBB449:
 721              	.LBI449:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 722              		.loc 5 41 5 view .LVU170
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 723              		.loc 5 41 5 is_stmt 0 view .LVU171
 724              	.LBE449:
 725              	.LBE448:
 726              	.LBE447:
 727              	.LBB450:
 728              	.LBI450:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 729              		.loc 6 21 5 is_stmt 1 view .LVU172
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 730              		.loc 6 21 5 is_stmt 0 view .LVU173
 731              	.LBE450:
 732              	.LBB451:
 733              	.LBI451:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 734              		.loc 6 21 5 is_stmt 1 view .LVU174
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 735              		.loc 6 21 5 is_stmt 0 view .LVU175
 736              	.LBE451:
 737              	.LBB452:
 738              	.LBI452:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 739              		.loc 5 41 5 is_stmt 1 view .LVU176
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 740              		.loc 5 41 5 is_stmt 0 view .LVU177
 741              	.LBE452:
 742              	.LBB453:
 743              	.LBI453:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 744              		.loc 5 41 5 is_stmt 1 view .LVU178
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 745              		.loc 5 41 5 is_stmt 0 view .LVU179
 746              	.LBE453:
 747              	.LBB454:
 748              	.LBI454:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 749              		.loc 3 17 5 is_stmt 1 view .LVU180
 750              	.LBB455:
 751              	.LBB456:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 34


 752              	.LBI456:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 753              		.loc 4 24 5 view .LVU181
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 754              		.loc 4 24 5 is_stmt 0 view .LVU182
 755              	.LBE456:
 756              	.LBB457:
 757              	.LBI457:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 758              		.loc 4 24 5 is_stmt 1 view .LVU183
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 759              		.loc 4 24 5 is_stmt 0 view .LVU184
 760              	.LBE457:
 761              	.LBB458:
 762              	.LBI458:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 763              		.loc 4 24 5 is_stmt 1 view .LVU185
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 764              		.loc 4 24 5 is_stmt 0 view .LVU186
 765              	.LBE458:
 766              	.LBE455:
 767              	.LBE454:
 768              	.LBB459:
 769              	.LBI459:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 770              		.loc 3 17 5 is_stmt 1 view .LVU187
 771              	.LBB460:
 772              	.LBB461:
 773              	.LBI461:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 774              		.loc 4 24 5 view .LVU188
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 775              		.loc 4 24 5 is_stmt 0 view .LVU189
 776              	.LBE461:
 777              	.LBB462:
 778              	.LBI462:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 779              		.loc 4 24 5 is_stmt 1 view .LVU190
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 780              		.loc 4 24 5 is_stmt 0 view .LVU191
 781              	.LBE462:
 782              	.LBB463:
 783              	.LBI463:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 784              		.loc 4 24 5 is_stmt 1 view .LVU192
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 785              		.loc 4 24 5 is_stmt 0 view .LVU193
 786              	.LBE463:
 787              	.LBE460:
 788              	.LBE459:
 789              	.LBB464:
 790              	.LBI408:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 791              		.loc 2 84 5 is_stmt 1 view .LVU194
 792              	.LBB442:
 793              	.LBB439:
 794              	.LBB425:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 35


 795              	.LBI425:
 796              		.file 16 "../../libDaisy//src/per/uart.h"
   1:../../libDaisy//src/per/uart.h **** /* 
   2:../../libDaisy//src/per/uart.h **** TODO
   3:../../libDaisy//src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libDaisy//src/per/uart.h **** - Transmit function improvements.
   5:../../libDaisy//src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libDaisy//src/per/uart.h **** */
   7:../../libDaisy//src/per/uart.h **** 
   8:../../libDaisy//src/per/uart.h **** #pragma once
   9:../../libDaisy//src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libDaisy//src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libDaisy//src/per/uart.h **** #include "daisy_core.h"
  12:../../libDaisy//src/per/uart.h **** 
  13:../../libDaisy//src/per/uart.h **** 
  14:../../libDaisy//src/per/uart.h **** namespace daisy
  15:../../libDaisy//src/per/uart.h **** {
  16:../../libDaisy//src/per/uart.h **** /** @addtogroup serial
  17:../../libDaisy//src/per/uart.h ****     @{
  18:../../libDaisy//src/per/uart.h ****     */
  19:../../libDaisy//src/per/uart.h **** 
  20:../../libDaisy//src/per/uart.h **** /** 
  21:../../libDaisy//src/per/uart.h ****     Uart Peripheral
  22:../../libDaisy//src/per/uart.h ****     @author shensley
  23:../../libDaisy//src/per/uart.h ****     @date March 2020
  24:../../libDaisy//src/per/uart.h ****     */
  25:../../libDaisy//src/per/uart.h **** class UartHandler
  26:../../libDaisy//src/per/uart.h **** {
  27:../../libDaisy//src/per/uart.h ****   public:
  28:../../libDaisy//src/per/uart.h ****     struct Config
  29:../../libDaisy//src/per/uart.h ****     {
  30:../../libDaisy//src/per/uart.h ****         enum class Peripheral
  31:../../libDaisy//src/per/uart.h ****         {
  32:../../libDaisy//src/per/uart.h ****             USART_1,
  33:../../libDaisy//src/per/uart.h ****             USART_2,
  34:../../libDaisy//src/per/uart.h ****             USART_3,
  35:../../libDaisy//src/per/uart.h ****             UART_4,
  36:../../libDaisy//src/per/uart.h ****             UART_5,
  37:../../libDaisy//src/per/uart.h ****             USART_6,
  38:../../libDaisy//src/per/uart.h ****             UART_7,
  39:../../libDaisy//src/per/uart.h ****             UART_8,
  40:../../libDaisy//src/per/uart.h ****             LPUART_1,
  41:../../libDaisy//src/per/uart.h ****         };
  42:../../libDaisy//src/per/uart.h **** 
  43:../../libDaisy//src/per/uart.h ****         enum class StopBits
  44:../../libDaisy//src/per/uart.h ****         {
  45:../../libDaisy//src/per/uart.h ****             BITS_0_5,
  46:../../libDaisy//src/per/uart.h ****             BITS_1,
  47:../../libDaisy//src/per/uart.h ****             BITS_1_5,
  48:../../libDaisy//src/per/uart.h ****             BITS_2,
  49:../../libDaisy//src/per/uart.h ****         };
  50:../../libDaisy//src/per/uart.h **** 
  51:../../libDaisy//src/per/uart.h ****         enum class Parity
  52:../../libDaisy//src/per/uart.h ****         {
  53:../../libDaisy//src/per/uart.h ****             NONE,
  54:../../libDaisy//src/per/uart.h ****             EVEN,
  55:../../libDaisy//src/per/uart.h ****             ODD,
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 36


  56:../../libDaisy//src/per/uart.h ****         };
  57:../../libDaisy//src/per/uart.h **** 
  58:../../libDaisy//src/per/uart.h ****         enum class Mode
  59:../../libDaisy//src/per/uart.h ****         {
  60:../../libDaisy//src/per/uart.h ****             RX,
  61:../../libDaisy//src/per/uart.h ****             TX,
  62:../../libDaisy//src/per/uart.h ****             TX_RX,
  63:../../libDaisy//src/per/uart.h ****         };
  64:../../libDaisy//src/per/uart.h **** 
  65:../../libDaisy//src/per/uart.h ****         enum class WordLength
  66:../../libDaisy//src/per/uart.h ****         {
  67:../../libDaisy//src/per/uart.h ****             BITS_7,
  68:../../libDaisy//src/per/uart.h ****             BITS_8,
  69:../../libDaisy//src/per/uart.h ****             BITS_9,
  70:../../libDaisy//src/per/uart.h ****         };
  71:../../libDaisy//src/per/uart.h **** 
  72:../../libDaisy//src/per/uart.h ****         struct
  73:../../libDaisy//src/per/uart.h ****         {
  74:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libDaisy//src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libDaisy//src/per/uart.h **** 
  78:../../libDaisy//src/per/uart.h ****         Config()
  79:../../libDaisy//src/per/uart.h ****         {
  80:../../libDaisy//src/per/uart.h ****             // user must init periph, pin_config, and mode
  81:../../libDaisy//src/per/uart.h ****             stopbits   = StopBits::BITS_1;
  82:../../libDaisy//src/per/uart.h ****             parity     = Parity::NONE;
  83:../../libDaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
  84:../../libDaisy//src/per/uart.h ****             baudrate   = 4800;
  85:../../libDaisy//src/per/uart.h ****             // baudrate   = 31250;
  86:../../libDaisy//src/per/uart.h ****         }
  87:../../libDaisy//src/per/uart.h **** 
  88:../../libDaisy//src/per/uart.h ****         Peripheral periph;
  89:../../libDaisy//src/per/uart.h ****         StopBits   stopbits;
  90:../../libDaisy//src/per/uart.h ****         Parity     parity;
  91:../../libDaisy//src/per/uart.h ****         Mode       mode;
  92:../../libDaisy//src/per/uart.h ****         WordLength wordlength;
  93:../../libDaisy//src/per/uart.h ****         uint32_t   baudrate;
  94:../../libDaisy//src/per/uart.h ****     };
  95:../../libDaisy//src/per/uart.h **** 
  96:../../libDaisy//src/per/uart.h **** 
  97:../../libDaisy//src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 797              		.loc 16 97 5 view .LVU195
 798              	.LBB426:
 799              	.LBB427:
 800              		.loc 16 97 35 is_stmt 0 view .LVU196
 801 001c C0F87C21 		str	r2, [r0, #380]
 802              	.LVL42:
 803              		.loc 16 97 35 view .LVU197
 804              	.LBE427:
 805              	.LBE426:
 806              	.LBE425:
 807              	.LBB428:
 808              	.LBI428:
 809              		.file 17 "../../libDaisy//src/util/ringbuffer.h"
   1:../../libDaisy//src/util/ringbuffer.h **** #pragma once
   2:../../libDaisy//src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 37


   3:../../libDaisy//src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libDaisy//src/util/ringbuffer.h **** 
   5:../../libDaisy//src/util/ringbuffer.h **** #include <algorithm>
   6:../../libDaisy//src/util/ringbuffer.h **** 
   7:../../libDaisy//src/util/ringbuffer.h **** namespace daisy
   8:../../libDaisy//src/util/ringbuffer.h **** {
   9:../../libDaisy//src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libDaisy//src/util/ringbuffer.h ****     @{
  11:../../libDaisy//src/util/ringbuffer.h **** */
  12:../../libDaisy//src/util/ringbuffer.h **** 
  13:../../libDaisy//src/util/ringbuffer.h **** /**
  14:../../libDaisy//src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libDaisy//src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libDaisy//src/util/ringbuffer.h **** */
  17:../../libDaisy//src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libDaisy//src/util/ringbuffer.h **** class RingBuffer
  19:../../libDaisy//src/util/ringbuffer.h **** {
  20:../../libDaisy//src/util/ringbuffer.h ****   public:
  21:../../libDaisy//src/util/ringbuffer.h ****     RingBuffer() {}
 810              		.loc 17 21 5 is_stmt 1 view .LVU198
 811              		.loc 17 21 5 is_stmt 0 view .LVU199
 812              	.LBE428:
 813              	.LBB429:
 814              	.LBI411:
  86:../../libDaisy//src/hid/midi.h **** 
  87:../../libDaisy//src/hid/midi.h ****     struct Config
 815              		.loc 2 87 12 is_stmt 1 view .LVU200
 816              	.LBB422:
 817              	.LBI412:
  34:../../libDaisy//src/hid/midi.h ****         {
 818              		.loc 2 34 9 view .LVU201
 819              	.LBB419:
 820              	.LBB416:
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 821              		.loc 2 36 13 view .LVU202
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 822              		.loc 2 36 20 is_stmt 0 view .LVU203
 823 0020 C3F82422 		str	r2, [r3, #548]
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 824              		.loc 2 37 13 is_stmt 1 view .LVU204
  38:../../libDaisy//src/hid/midi.h ****         }
 825              		.loc 2 38 20 is_stmt 0 view .LVU205
 826 0024 A3F82AC2 		strh	ip, [r3, #554]	@ movhi
 827              	.LBE416:
 828              	.LBE419:
 829              	.LBE422:
 830              	.LBE429:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 831              		.loc 2 84 19 view .LVU206
 832 0028 4FF0070C 		mov	ip, #7
 833              	.LBB430:
 834              	.LBB431:
 835              	.LBB432:
 836              	.LBB433:
 837              		.loc 16 97 35 view .LVU207
 838 002c C3F82C22 		str	r2, [r3, #556]
 839              	.LBE433:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 38


 840              	.LBE432:
 841              	.LBE431:
 842              	.LBE430:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 843              		.loc 2 84 19 view .LVU208
 844 0030 4FF60F02 		movw	r2, #63503
 845 0034 C3F83012 		str	r1, [r3, #560]
 846 0038 A3F83422 		strh	r2, [r3, #564]	@ movhi
 847 003c 83F836C2 		strb	ip, [r3, #566]
 848              	.LBB435:
 849              	.LBB423:
 850              	.LBB420:
 851              	.LBB417:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 852              		.loc 2 37 20 view .LVU209
 853 0040 A3F828E2 		strh	lr, [r3, #552]	@ movhi
  38:../../libDaisy//src/hid/midi.h ****         }
 854              		.loc 2 38 13 is_stmt 1 view .LVU210
 855              	.LVL43:
  38:../../libDaisy//src/hid/midi.h ****         }
 856              		.loc 2 38 13 is_stmt 0 view .LVU211
 857              	.LBE417:
 858              	.LBE420:
 859              	.LBE423:
 860              	.LBE435:
 861              	.LBB436:
 862              	.LBI430:
  25:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
 863              		.loc 2 25 5 is_stmt 1 view .LVU212
 864              	.LBB434:
 865              	.LBI431:
 866              		.loc 16 97 5 view .LVU213
 867              		.loc 16 97 5 is_stmt 0 view .LVU214
 868              	.LBE434:
 869              	.LBE436:
 870              	.LBE439:
 871              	.LBE442:
 872              	.LBE464:
 873              	.LBE465:
 874              	.LBE466:
  14:MyProj.cpp    **** 
 875              		.loc 13 14 10 view .LVU215
 876 0044 054A     		ldr	r2, .L36+12
 877 0046 0649     		ldr	r1, .L36+16
 878              	.LBE467:
 879              	.LBE469:
 880              		.loc 13 105 1 view .LVU216
 881 0048 5DF804EB 		ldr	lr, [sp], #4
 882              		.cfi_restore 14
 883              		.cfi_def_cfa_offset 0
 884              	.LBB470:
 885              	.LBB468:
  14:MyProj.cpp    **** 
 886              		.loc 13 14 10 view .LVU217
 887 004c FFF7FEBF 		b	__aeabi_atexit
 888              	.LVL44:
 889              	.L37:
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 39


 890              		.align	2
 891              	.L36:
 892 0050 00000000 		.word	hw
 893 0054 00000000 		.word	.LANCHOR4
 894 0058 80707FF0 		.word	-260083584
 895 005c 00000000 		.word	__dso_handle
 896 0060 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 897              	.LBE468:
 898              	.LBE470:
 899              		.cfi_endproc
 900              	.LFE2571:
 902              		.section	.init_array,"aw",%init_array
 903              		.align	2
 904 0000 00000000 		.word	_GLOBAL__sub_I_leaf(target1)
 905              		.global	mySampler
 906              		.global	myBuffer
 907              		.global	hw
 908              		.global	bigPool
 909              		.global	bigMemory
 910              		.global	leafMemory
 911              		.global	leaf
 912              		.section	.rodata
 913              		.align	2
 914              		.set	.LANCHOR4,. + 0
 915              	.LC0:
 916 0000 01       		.byte	1
 917 0001 07       		.byte	7
 918 0002 0000     		.space	2
 919              	.LC1:
 920 0004 01       		.byte	1
 921 0005 06       		.byte	6
 922              		.section	.bss.bigPool,"aw",%nobits
 923              		.align	2
 924              		.set	.LANCHOR3,. + 0
 927              	bigPool:
 928 0000 00000000 		.space	4
 929              		.section	.bss.hw,"aw",%nobits
 930              		.align	2
 933              	hw:
 934 0000 00000000 		.space	37432
 934      00000000 
 934      00000000 
 934      00000000 
 934      00000000 
 935              		.section	.bss.leaf,"aw",%nobits
 936              		.align	2
 937              		.set	.LANCHOR2,. + 0
 940              	leaf:
 941 0000 00000000 		.space	80
 941      00000000 
 941      00000000 
 941      00000000 
 941      00000000 
 942              		.section	.bss.leafMemory,"aw",%nobits
 943              		.align	2
 946              	leafMemory:
 947 0000 00000000 		.space	455355
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 40


 947      00000000 
 947      00000000 
 947      00000000 
 947      00000000 
 948              		.section	.bss.myBuffer,"aw",%nobits
 949              		.align	2
 950              		.set	.LANCHOR0,. + 0
 953              	myBuffer:
 954 0000 00000000 		.space	4
 955              		.section	.bss.mySampler,"aw",%nobits
 956              		.align	2
 957              		.set	.LANCHOR1,. + 0
 960              	mySampler:
 961 0000 00000000 		.space	4
 962              		.section	.sdram_bss,"aw"
 963              		.align	2
 966              	bigMemory:
 967 0000 00000000 		.space	33554432
 967      00000000 
 967      00000000 
 967      00000000 
 967      00000000 
 968              		.text
 969              	.Letext0:
 970              		.file 18 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 971              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 972              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 973              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 974              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 975              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 976              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 977              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 978              		.file 26 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 979              		.file 27 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 980              		.file 28 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 981              		.file 29 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 982              		.file 30 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 983              		.file 31 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 984              		.file 32 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdarg"
 985              		.file 33 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 986              		.file 34 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstring"
 987              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 988              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 989              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 990              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 991              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 992              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 993              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 994              		.file 42 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 995              		.file 43 "../../libDaisy//src/daisy_core.h"
 996              		.file 44 "../../libDaisy//src/per/tim.h"
 997              		.file 45 "../../libDaisy//src/per/sai.h"
 998              		.file 46 "../../libDaisy//src/hid/MidiEvent.h"
 999              		.file 47 "../../libDaisy//src/per/rng.h"
 1000              		.file 48 "../../libDaisy//src/util/wav_format.h"
 1001              		.file 49 "../../libDaisy//src/util/color.h"
 1002              		.file 50 "../../libDaisy//src/dev/max11300.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 41


 1003              		.file 51 "../../libDaisy//src/per/gpio.h"
 1004              		.file 52 "../../libDaisy//src/dev/sdram.h"
 1005              		.file 53 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 1006              		.file 54 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 1007              		.file 55 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/string.h"
 1008              		.file 56 "../../../LEAF/leaf/./Inc/leaf-mempool.h"
 1009              		.file 57 "../../../LEAF/leaf/./Inc/leaf-global.h"
 1010              		.file 58 "../../../LEAF/leaf/./Inc/leaf-envelopes.h"
 1011              		.file 59 "../../../LEAF/leaf/./Inc/leaf-sampling.h"
 1012              		.file 60 "../../../LEAF/leaf/leaf.h"
 1013              		.file 61 "<built-in>"
 1014              		.file 62 "../../libDaisy//src/dev/sr_595.h"
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MyProj.cpp
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:19     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD2Ev
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:26     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD1Ev
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:154    .text._Z12randomNumberv:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:161    .text._Z12randomNumberv:0000000000000000 _Z12randomNumberv
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:178    .text._Z12randomNumberv:000000000000000c $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:183    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:190    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:443    .text._Z13AudioCallbackPKPKfPPfj:00000000000000d0 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:933    .bss.hw:0000000000000000 hw
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:450    .text.startup.main:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:457    .text.startup.main:0000000000000000 main
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:545    .text.startup.main:0000000000000068 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:946    .bss.leafMemory:0000000000000000 leafMemory
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:966    .sdram_bss:0000000000000000 bigMemory
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:561    .text.startup._GLOBAL__sub_I_leaf:0000000000000000 $t
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:567    .text.startup._GLOBAL__sub_I_leaf:0000000000000000 _GLOBAL__sub_I_leaf
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:892    .text.startup._GLOBAL__sub_I_leaf:0000000000000050 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:903    .init_array:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:960    .bss.mySampler:0000000000000000 mySampler
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:953    .bss.myBuffer:0000000000000000 myBuffer
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:927    .bss.bigPool:0000000000000000 bigPool
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:940    .bss.leaf:0000000000000000 leaf
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:913    .rodata:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:923    .bss.bigPool:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:930    .bss.hw:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:936    .bss.leaf:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:943    .bss.leafMemory:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:949    .bss.myBuffer:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:956    .bss.mySampler:0000000000000000 $d
/var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s:963    .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy8DaisyPodD5Ev

UNDEFINED SYMBOLS
_ZN5daisy6Random8GetFloatEff
_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
tSampler_setRate
tBuffer_tick
tSampler_tick
tBuffer_setRecordPosition
tBuffer_record
tSampler_setStart
tSampler_play
tSampler_stop
tBuffer_stop
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
_ZN5daisy8DaisyPod18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy6Random4InitEv
_ZN5daisy8DaisyPod8StartAdcEv
LEAF_init
tMempool_init
tBuffer_initToPool
tSampler_init
ARM GAS  /var/folders/ky/97y1n_614tj15gjp3pmt3wd00000gn/T//cctCCBgz.s 			page 43


_ZN5daisy8DaisyPod10StartAudioEPFvPKPKfPPfjE
_ZN5daisy8DaisyPod10UpdateLedsEv
__aeabi_atexit
__dso_handle
